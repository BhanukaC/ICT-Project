
Ph sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c22  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00000c22  00000c96  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000ca8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000cd8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000d14  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c74  00000000  00000000  00000d74  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006fb  00000000  00000000  000019e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000502  00000000  00000000  000020e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000cc  00000000  00000000  000025e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003cb  00000000  00000000  000026b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000630  00000000  00000000  00002a7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  000030af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
   8:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
   c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  10:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  14:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  18:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  1c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  20:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  24:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  28:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  2c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  30:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  34:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  38:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  3c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  40:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  44:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  48:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  4c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  50:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__mulsf3_pse+0x3c>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <main+0x180>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <__bad_interrupt>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <LCD_Char+0x1e>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	e2 e2       	ldi	r30, 0x22	; 34
 162:	fc e0       	ldi	r31, 0x0C	; 12
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	a2 37       	cpi	r26, 0x72	; 114
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>
 170:	0e 94 26 01 	call	0x24c	; 0x24c <main>
 174:	0c 94 0f 06 	jmp	0xc1e	; 0xc1e <_exit>

00000178 <__bad_interrupt>:
 178:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000017c <LCD_Command>:
	if (row == 0 && pos<16)
	LCD_Command((pos & 0x0F)|0x80);		/* Command of first row and required position<16 */
	else if (row == 1 && pos<16)
	LCD_Command((pos & 0x0F)|0xC0);		/* Command of first row and required position<16 */
	LCD_String(str);					/* Call LCD string function */
}
 17c:	88 bb       	out	0x18, r24	; 24
 17e:	a8 98       	cbi	0x15, 0	; 21
 180:	a9 98       	cbi	0x15, 1	; 21
 182:	aa 9a       	sbi	0x15, 2	; 21
 184:	82 e0       	ldi	r24, 0x02	; 2
 186:	8a 95       	dec	r24
 188:	f1 f7       	brne	.-4      	; 0x186 <LCD_Command+0xa>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <LCD_Command+0x10>
 18c:	aa 98       	cbi	0x15, 2	; 21
 18e:	8f e6       	ldi	r24, 0x6F	; 111
 190:	97 e1       	ldi	r25, 0x17	; 23
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <LCD_Command+0x16>
 196:	00 c0       	rjmp	.+0      	; 0x198 <LCD_Command+0x1c>
 198:	00 00       	nop
 19a:	08 95       	ret

0000019c <LCD_Char>:
 19c:	88 bb       	out	0x18, r24	; 24
 19e:	a8 9a       	sbi	0x15, 0	; 21
 1a0:	a9 98       	cbi	0x15, 1	; 21
 1a2:	aa 9a       	sbi	0x15, 2	; 21
 1a4:	82 e0       	ldi	r24, 0x02	; 2
 1a6:	8a 95       	dec	r24
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <LCD_Char+0xa>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <LCD_Char+0x10>
 1ac:	aa 98       	cbi	0x15, 2	; 21
 1ae:	8f ec       	ldi	r24, 0xCF	; 207
 1b0:	97 e0       	ldi	r25, 0x07	; 7
 1b2:	01 97       	sbiw	r24, 0x01	; 1
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <LCD_Char+0x16>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <LCD_Char+0x1c>
 1b8:	00 00       	nop
 1ba:	08 95       	ret

000001bc <LCD_Init>:
 1bc:	8f ef       	ldi	r24, 0xFF	; 255
 1be:	84 bb       	out	0x14, r24	; 20
 1c0:	87 bb       	out	0x17, r24	; 23
 1c2:	8f e3       	ldi	r24, 0x3F	; 63
 1c4:	9c e9       	ldi	r25, 0x9C	; 156
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <LCD_Init+0xa>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <LCD_Init+0x10>
 1cc:	00 00       	nop
 1ce:	88 e3       	ldi	r24, 0x38	; 56
 1d0:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_Command>
 1d4:	8c e0       	ldi	r24, 0x0C	; 12
 1d6:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_Command>
 1da:	86 e0       	ldi	r24, 0x06	; 6
 1dc:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_Command>
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_Command>
 1e6:	80 e8       	ldi	r24, 0x80	; 128
 1e8:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_Command>
 1ec:	08 95       	ret

000001ee <LCD_String>:
 1ee:	cf 93       	push	r28
 1f0:	df 93       	push	r29
 1f2:	ec 01       	movw	r28, r24
 1f4:	88 81       	ld	r24, Y
 1f6:	88 23       	and	r24, r24
 1f8:	31 f0       	breq	.+12     	; 0x206 <LCD_String+0x18>
 1fa:	21 96       	adiw	r28, 0x01	; 1
 1fc:	0e 94 ce 00 	call	0x19c	; 0x19c <LCD_Char>
 200:	89 91       	ld	r24, Y+
 202:	81 11       	cpse	r24, r1
 204:	fb cf       	rjmp	.-10     	; 0x1fc <LCD_String+0xe>
 206:	df 91       	pop	r29
 208:	cf 91       	pop	r28
 20a:	08 95       	ret

0000020c <LCD_Clear>:

void LCD_Clear()
{
	LCD_Command (0x01);					/* clear display */
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_Command>
	LCD_Command (0x80);					/* cursor at home position */
 212:	80 e8       	ldi	r24, 0x80	; 128
 214:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_Command>
 218:	08 95       	ret

0000021a <ADC_Init>:
#ifndef ADC_H_
#define ADC_H_

void ADC_Init()
{
	DDRA=0x0;			/* Make ADC port as input */
 21a:	1a ba       	out	0x1a, r1	; 26
	ADCSRA = 0x87;			/* Enable ADC, fr/128  */
 21c:	87 e8       	ldi	r24, 0x87	; 135
 21e:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0x40;			/* Vref: Avcc, ADC channel: 0 */
 220:	80 e4       	ldi	r24, 0x40	; 64
 222:	87 b9       	out	0x07, r24	; 7
 224:	08 95       	ret

00000226 <ADC_Read>:

int ADC_Read(char channel)
{
	int Ain,AinLow;

	ADMUX=ADMUX|(channel & 0x0f);	/* Set input channel to read */
 226:	97 b1       	in	r25, 0x07	; 7
 228:	8f 70       	andi	r24, 0x0F	; 15
 22a:	98 2b       	or	r25, r24
 22c:	97 b9       	out	0x07, r25	; 7

	ADCSRA |= (1<<ADSC);		/* Start conversion */
 22e:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA&(1<<ADIF))==0);	/* Monitor end of conversion interrupt */
 230:	34 9b       	sbis	0x06, 4	; 6
 232:	fe cf       	rjmp	.-4      	; 0x230 <ADC_Read+0xa>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 234:	8a e1       	ldi	r24, 0x1A	; 26
 236:	8a 95       	dec	r24
 238:	f1 f7       	brne	.-4      	; 0x236 <ADC_Read+0x10>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <ADC_Read+0x16>

	_delay_us(10);
	AinLow = (int)ADCL;		/* Read lower byte*/
 23c:	24 b1       	in	r18, 0x04	; 4
	Ain = (int)ADCH*256;		/* Read higher 2 bits and
 23e:	85 b1       	in	r24, 0x05	; 5
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	98 2f       	mov	r25, r24
 244:	88 27       	eor	r24, r24
					Multiply with weight */
	Ain = Ain + AinLow;
	return(Ain);			/* Return digital value*/
}
 246:	82 0f       	add	r24, r18
 248:	91 1d       	adc	r25, r1
 24a:	08 95       	ret

0000024c <main>:
 


 
int main()
{	
 24c:	cf 93       	push	r28
 24e:	df 93       	push	r29
 250:	cd b7       	in	r28, 0x3d	; 61
 252:	de b7       	in	r29, 0x3e	; 62
 254:	ac 97       	sbiw	r28, 0x2c	; 44
 256:	0f b6       	in	r0, 0x3f	; 63
 258:	f8 94       	cli
 25a:	de bf       	out	0x3e, r29	; 62
 25c:	0f be       	out	0x3f, r0	; 63
 25e:	cd bf       	out	0x3d, r28	; 61
	
	unsigned long int avgValue;  //Store the average value of the sensor feedback
	int buf[10],temp;
	

	ADC_Init();
 260:	0e 94 0d 01 	call	0x21a	; 0x21a <ADC_Init>
	LCD_Init();							/* Initialize LCD */
 264:	0e 94 de 00 	call	0x1bc	; 0x1bc <LCD_Init>
 268:	6e 01       	movw	r12, r28
 26a:	29 e2       	ldi	r18, 0x29	; 41
 26c:	c2 0e       	add	r12, r18
 26e:	d1 1c       	adc	r13, r1
 270:	7e 01       	movw	r14, r28
 272:	87 e2       	ldi	r24, 0x27	; 39
 274:	e8 0e       	add	r14, r24
 276:	f1 1c       	adc	r15, r1
 278:	5e 01       	movw	r10, r28
 27a:	95 e2       	ldi	r25, 0x25	; 37
 27c:	a9 0e       	add	r10, r25
 27e:	b1 1c       	adc	r11, r1
			for(int i=0;i<10;i++)       //Get 10 sample value from the sensor for smooth the value
			{
				buf[i]=ADC_Read(l);
				
			}
			for(int i=0;i<9;i++)        //sort the analog from small to large
 280:	44 24       	eor	r4, r4
 282:	43 94       	inc	r4
 284:	51 2c       	mov	r5, r1
 286:	61 2c       	mov	r6, r1
 288:	71 2c       	mov	r7, r1
 28a:	cb c0       	rjmp	.+406    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
	{
		for (int l=0;l<3;l++)      //go through sensor 1,2,3
		{
			for(int i=0;i<10;i++)       //Get 10 sample value from the sensor for smooth the value
			{
				buf[i]=ADC_Read(l);
 28c:	86 2d       	mov	r24, r6
 28e:	0e 94 13 01 	call	0x226	; 0x226 <ADC_Read>
 292:	d4 01       	movw	r26, r8
 294:	8d 93       	st	X+, r24
 296:	9d 93       	st	X+, r25
 298:	4d 01       	movw	r8, r26
	LCD_Init();							/* Initialize LCD */
	while (1)
	{
		for (int l=0;l<3;l++)      //go through sensor 1,2,3
		{
			for(int i=0;i<10;i++)       //Get 10 sample value from the sensor for smooth the value
 29a:	ac 15       	cp	r26, r12
 29c:	bd 05       	cpc	r27, r13
 29e:	b1 f7       	brne	.-20     	; 0x28c <main+0x40>
 2a0:	40 e0       	ldi	r20, 0x00	; 0
 2a2:	50 e0       	ldi	r21, 0x00	; 0
				buf[i]=ADC_Read(l);
				
			}
			for(int i=0;i<9;i++)        //sort the analog from small to large
			{
				for(int j=i+1;j<10;j++)
 2a4:	4f 5f       	subi	r20, 0xFF	; 255
 2a6:	5f 4f       	sbci	r21, 0xFF	; 255
 2a8:	4a 30       	cpi	r20, 0x0A	; 10
 2aa:	51 05       	cpc	r21, r1
 2ac:	0c f0       	brlt	.+2      	; 0x2b0 <main+0x64>
 2ae:	be c0       	rjmp	.+380    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 2b0:	f8 01       	movw	r30, r16
 2b2:	b8 01       	movw	r22, r16
				{
					if(buf[i]>buf[j])
 2b4:	d8 01       	movw	r26, r16
 2b6:	8d 91       	ld	r24, X+
 2b8:	9c 91       	ld	r25, X
 2ba:	22 81       	ldd	r18, Z+2	; 0x02
 2bc:	33 81       	ldd	r19, Z+3	; 0x03
 2be:	28 17       	cp	r18, r24
 2c0:	39 07       	cpc	r19, r25
 2c2:	2c f4       	brge	.+10     	; 0x2ce <main+0x82>
					{
						temp=buf[i];
						buf[i]=buf[j];
 2c4:	db 01       	movw	r26, r22
 2c6:	2d 93       	st	X+, r18
 2c8:	3c 93       	st	X, r19
						buf[j]=temp;
 2ca:	93 83       	std	Z+3, r25	; 0x03
 2cc:	82 83       	std	Z+2, r24	; 0x02
 2ce:	32 96       	adiw	r30, 0x02	; 2
				buf[i]=ADC_Read(l);
				
			}
			for(int i=0;i<9;i++)        //sort the analog from small to large
			{
				for(int j=i+1;j<10;j++)
 2d0:	ee 16       	cp	r14, r30
 2d2:	ff 06       	cpc	r15, r31
 2d4:	79 f7       	brne	.-34     	; 0x2b4 <main+0x68>
 2d6:	0e 5f       	subi	r16, 0xFE	; 254
 2d8:	1f 4f       	sbci	r17, 0xFF	; 255
			for(int i=0;i<10;i++)       //Get 10 sample value from the sensor for smooth the value
			{
				buf[i]=ADC_Read(l);
				
			}
			for(int i=0;i<9;i++)        //sort the analog from small to large
 2da:	49 30       	cpi	r20, 0x09	; 9
 2dc:	51 05       	cpc	r21, r1
 2de:	11 f7       	brne	.-60     	; 0x2a4 <main+0x58>
 2e0:	fe 01       	movw	r30, r28
 2e2:	79 96       	adiw	r30, 0x19	; 25
 2e4:	40 e0       	ldi	r20, 0x00	; 0
 2e6:	50 e0       	ldi	r21, 0x00	; 0
 2e8:	ba 01       	movw	r22, r20
					}
				}
			}
			avgValue=0;
			for(int i=2;i<8;i++)                      //take the average value of 6 center sample
			avgValue+=buf[i];
 2ea:	81 91       	ld	r24, Z+
 2ec:	91 91       	ld	r25, Z+
 2ee:	09 2e       	mov	r0, r25
 2f0:	00 0c       	add	r0, r0
 2f2:	aa 0b       	sbc	r26, r26
 2f4:	bb 0b       	sbc	r27, r27
 2f6:	48 0f       	add	r20, r24
 2f8:	59 1f       	adc	r21, r25
 2fa:	6a 1f       	adc	r22, r26
 2fc:	7b 1f       	adc	r23, r27
						buf[j]=temp;
					}
				}
			}
			avgValue=0;
			for(int i=2;i<8;i++)                      //take the average value of 6 center sample
 2fe:	ae 16       	cp	r10, r30
 300:	bf 06       	cpc	r11, r31
 302:	99 f7       	brne	.-26     	; 0x2ea <main+0x9e>
			avgValue+=buf[i];
			float phValue=(float)avgValue*5.0/1024/6;
 304:	cb 01       	movw	r24, r22
 306:	ba 01       	movw	r22, r20
 308:	0e 94 8b 02 	call	0x516	; 0x516 <__floatunsisf>
 30c:	20 e0       	ldi	r18, 0x00	; 0
 30e:	30 e0       	ldi	r19, 0x00	; 0
 310:	40 ea       	ldi	r20, 0xA0	; 160
 312:	50 e4       	ldi	r21, 0x40	; 64
 314:	0e 94 19 03 	call	0x632	; 0x632 <__mulsf3>
 318:	20 e0       	ldi	r18, 0x00	; 0
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	40 e8       	ldi	r20, 0x80	; 128
 31e:	5a e3       	ldi	r21, 0x3A	; 58
 320:	0e 94 19 03 	call	0x632	; 0x632 <__mulsf3>
 324:	20 e0       	ldi	r18, 0x00	; 0
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	40 ec       	ldi	r20, 0xC0	; 192
 32a:	50 e4       	ldi	r21, 0x40	; 64
 32c:	0e 94 19 02 	call	0x432	; 0x432 <__divsf3>
			 //convert the analog into millivolt
			phValue=3.5*phValue; //convert the millivolt into pH value
 330:	20 e0       	ldi	r18, 0x00	; 0
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	40 e6       	ldi	r20, 0x60	; 96
 336:	50 e4       	ldi	r21, 0x40	; 64
 338:	0e 94 19 03 	call	0x632	; 0x632 <__mulsf3>
 33c:	69 a7       	std	Y+41, r22	; 0x29
 33e:	7a a7       	std	Y+42, r23	; 0x2a
 340:	8b a7       	std	Y+43, r24	; 0x2b
 342:	9c a7       	std	Y+44, r25	; 0x2c
			//double value=(double)phValue;                     
			 LCD_Clear();
 344:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_Clear>
 348:	c3 01       	movw	r24, r6
			 if(l==0){
 34a:	61 14       	cp	r6, r1
 34c:	71 04       	cpc	r7, r1
 34e:	f9 f4       	brne	.+62     	; 0x38e <main+0x142>
				 LCD_String("Apple");		/* write string on 1st line of LCD*/
 350:	80 e6       	ldi	r24, 0x60	; 96
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_String>
				 LCD_String("Orange");
			 }else{
				 LCD_String("Lime");
			 }
			
			LCD_Command(0xc0);					/* Go to 2nd line*/
 358:	80 ec       	ldi	r24, 0xC0	; 192
 35a:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_Command>
			dtostrf(phValue,8,5,String);	/* Integer to string conversion */
 35e:	8e 01       	movw	r16, r28
 360:	0f 5f       	subi	r16, 0xFF	; 255
 362:	1f 4f       	sbci	r17, 0xFF	; 255
 364:	25 e0       	ldi	r18, 0x05	; 5
 366:	48 e0       	ldi	r20, 0x08	; 8
 368:	69 a5       	ldd	r22, Y+41	; 0x29
 36a:	7a a5       	ldd	r23, Y+42	; 0x2a
 36c:	8b a5       	ldd	r24, Y+43	; 0x2b
 36e:	9c a5       	ldd	r25, Y+44	; 0x2c
 370:	0e 94 86 03 	call	0x70c	; 0x70c <dtostrf>
			LCD_String(String);
 374:	c8 01       	movw	r24, r16
 376:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 37a:	bf ef       	ldi	r27, 0xFF	; 255
 37c:	e4 e3       	ldi	r30, 0x34	; 52
 37e:	fc e0       	ldi	r31, 0x0C	; 12
 380:	b1 50       	subi	r27, 0x01	; 1
 382:	e0 40       	sbci	r30, 0x00	; 0
 384:	f0 40       	sbci	r31, 0x00	; 0
 386:	e1 f7       	brne	.-8      	; 0x380 <main+0x134>
 388:	00 c0       	rjmp	.+0      	; 0x38a <main+0x13e>
 38a:	00 00       	nop
 38c:	44 c0       	rjmp	.+136    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
			phValue=3.5*phValue; //convert the millivolt into pH value
			//double value=(double)phValue;                     
			 LCD_Clear();
			 if(l==0){
				 LCD_String("Apple");		/* write string on 1st line of LCD*/
			 }else if(l==2){
 38e:	02 97       	sbiw	r24, 0x02	; 2
 390:	f9 f4       	brne	.+62     	; 0x3d0 <main+0x184>
				 LCD_String("Orange");
 392:	86 e6       	ldi	r24, 0x66	; 102
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_String>
			 }else{
				 LCD_String("Lime");
			 }
			
			LCD_Command(0xc0);					/* Go to 2nd line*/
 39a:	80 ec       	ldi	r24, 0xC0	; 192
 39c:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_Command>
			dtostrf(phValue,8,5,String);	/* Integer to string conversion */
 3a0:	8e 01       	movw	r16, r28
 3a2:	0f 5f       	subi	r16, 0xFF	; 255
 3a4:	1f 4f       	sbci	r17, 0xFF	; 255
 3a6:	25 e0       	ldi	r18, 0x05	; 5
 3a8:	48 e0       	ldi	r20, 0x08	; 8
 3aa:	69 a5       	ldd	r22, Y+41	; 0x29
 3ac:	7a a5       	ldd	r23, Y+42	; 0x2a
 3ae:	8b a5       	ldd	r24, Y+43	; 0x2b
 3b0:	9c a5       	ldd	r25, Y+44	; 0x2c
 3b2:	0e 94 86 03 	call	0x70c	; 0x70c <dtostrf>
			LCD_String(String);
 3b6:	c8 01       	movw	r24, r16
 3b8:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_String>
 3bc:	2f ef       	ldi	r18, 0xFF	; 255
 3be:	84 e3       	ldi	r24, 0x34	; 52
 3c0:	9c e0       	ldi	r25, 0x0C	; 12
 3c2:	21 50       	subi	r18, 0x01	; 1
 3c4:	80 40       	sbci	r24, 0x00	; 0
 3c6:	90 40       	sbci	r25, 0x00	; 0
 3c8:	e1 f7       	brne	.-8      	; 0x3c2 <main+0x176>
 3ca:	00 c0       	rjmp	.+0      	; 0x3cc <main+0x180>
 3cc:	00 00       	nop
 3ce:	58 cf       	rjmp	.-336    	; 0x280 <main+0x34>
			 if(l==0){
				 LCD_String("Apple");		/* write string on 1st line of LCD*/
			 }else if(l==2){
				 LCD_String("Orange");
			 }else{
				 LCD_String("Lime");
 3d0:	8d e6       	ldi	r24, 0x6D	; 109
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_String>
			 }
			
			LCD_Command(0xc0);					/* Go to 2nd line*/
 3d8:	80 ec       	ldi	r24, 0xC0	; 192
 3da:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_Command>
			dtostrf(phValue,8,5,String);	/* Integer to string conversion */
 3de:	8e 01       	movw	r16, r28
 3e0:	0f 5f       	subi	r16, 0xFF	; 255
 3e2:	1f 4f       	sbci	r17, 0xFF	; 255
 3e4:	25 e0       	ldi	r18, 0x05	; 5
 3e6:	48 e0       	ldi	r20, 0x08	; 8
 3e8:	69 a5       	ldd	r22, Y+41	; 0x29
 3ea:	7a a5       	ldd	r23, Y+42	; 0x2a
 3ec:	8b a5       	ldd	r24, Y+43	; 0x2b
 3ee:	9c a5       	ldd	r25, Y+44	; 0x2c
 3f0:	0e 94 86 03 	call	0x70c	; 0x70c <dtostrf>
			LCD_String(String);
 3f4:	c8 01       	movw	r24, r16
 3f6:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_String>
 3fa:	af ef       	ldi	r26, 0xFF	; 255
 3fc:	b4 e3       	ldi	r27, 0x34	; 52
 3fe:	ec e0       	ldi	r30, 0x0C	; 12
 400:	a1 50       	subi	r26, 0x01	; 1
 402:	b0 40       	sbci	r27, 0x00	; 0
 404:	e0 40       	sbci	r30, 0x00	; 0
 406:	e1 f7       	brne	.-8      	; 0x400 <__LOCK_REGION_LENGTH__>
 408:	00 c0       	rjmp	.+0      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 40a:	00 00       	nop

	ADC_Init();
	LCD_Init();							/* Initialize LCD */
	while (1)
	{
		for (int l=0;l<3;l++)      //go through sensor 1,2,3
 40c:	f3 e0       	ldi	r31, 0x03	; 3
 40e:	4f 16       	cp	r4, r31
 410:	51 04       	cpc	r5, r1
 412:	0c f0       	brlt	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 414:	35 cf       	rjmp	.-406    	; 0x280 <main+0x34>
 416:	2f ef       	ldi	r18, 0xFF	; 255
 418:	62 1a       	sub	r6, r18
 41a:	72 0a       	sbc	r7, r18
 41c:	8f ef       	ldi	r24, 0xFF	; 255
 41e:	48 1a       	sub	r4, r24
 420:	58 0a       	sbc	r5, r24
 422:	8e 01       	movw	r16, r28
 424:	0b 5e       	subi	r16, 0xEB	; 235
 426:	1f 4f       	sbci	r17, 0xFF	; 255
 


 
int main()
{	
 428:	48 01       	movw	r8, r16
 42a:	30 cf       	rjmp	.-416    	; 0x28c <main+0x40>
 42c:	0e 5f       	subi	r16, 0xFE	; 254
 42e:	1f 4f       	sbci	r17, 0xFF	; 255
 430:	39 cf       	rjmp	.-398    	; 0x2a4 <main+0x58>

00000432 <__divsf3>:
 432:	0e 94 2d 02 	call	0x45a	; 0x45a <__divsf3x>
 436:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_round>
 43a:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__fp_pscB>
 43e:	58 f0       	brcs	.+22     	; 0x456 <__divsf3+0x24>
 440:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <__fp_pscA>
 444:	40 f0       	brcs	.+16     	; 0x456 <__divsf3+0x24>
 446:	29 f4       	brne	.+10     	; 0x452 <__divsf3+0x20>
 448:	5f 3f       	cpi	r21, 0xFF	; 255
 44a:	29 f0       	breq	.+10     	; 0x456 <__divsf3+0x24>
 44c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_inf>
 450:	51 11       	cpse	r21, r1
 452:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_szero>
 456:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_nan>

0000045a <__divsf3x>:
 45a:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__fp_split3>
 45e:	68 f3       	brcs	.-38     	; 0x43a <__divsf3+0x8>

00000460 <__divsf3_pse>:
 460:	99 23       	and	r25, r25
 462:	b1 f3       	breq	.-20     	; 0x450 <__divsf3+0x1e>
 464:	55 23       	and	r21, r21
 466:	91 f3       	breq	.-28     	; 0x44c <__divsf3+0x1a>
 468:	95 1b       	sub	r25, r21
 46a:	55 0b       	sbc	r21, r21
 46c:	bb 27       	eor	r27, r27
 46e:	aa 27       	eor	r26, r26
 470:	62 17       	cp	r22, r18
 472:	73 07       	cpc	r23, r19
 474:	84 07       	cpc	r24, r20
 476:	38 f0       	brcs	.+14     	; 0x486 <__divsf3_pse+0x26>
 478:	9f 5f       	subi	r25, 0xFF	; 255
 47a:	5f 4f       	sbci	r21, 0xFF	; 255
 47c:	22 0f       	add	r18, r18
 47e:	33 1f       	adc	r19, r19
 480:	44 1f       	adc	r20, r20
 482:	aa 1f       	adc	r26, r26
 484:	a9 f3       	breq	.-22     	; 0x470 <__divsf3_pse+0x10>
 486:	35 d0       	rcall	.+106    	; 0x4f2 <__divsf3_pse+0x92>
 488:	0e 2e       	mov	r0, r30
 48a:	3a f0       	brmi	.+14     	; 0x49a <__divsf3_pse+0x3a>
 48c:	e0 e8       	ldi	r30, 0x80	; 128
 48e:	32 d0       	rcall	.+100    	; 0x4f4 <__divsf3_pse+0x94>
 490:	91 50       	subi	r25, 0x01	; 1
 492:	50 40       	sbci	r21, 0x00	; 0
 494:	e6 95       	lsr	r30
 496:	00 1c       	adc	r0, r0
 498:	ca f7       	brpl	.-14     	; 0x48c <__divsf3_pse+0x2c>
 49a:	2b d0       	rcall	.+86     	; 0x4f2 <__divsf3_pse+0x92>
 49c:	fe 2f       	mov	r31, r30
 49e:	29 d0       	rcall	.+82     	; 0x4f2 <__divsf3_pse+0x92>
 4a0:	66 0f       	add	r22, r22
 4a2:	77 1f       	adc	r23, r23
 4a4:	88 1f       	adc	r24, r24
 4a6:	bb 1f       	adc	r27, r27
 4a8:	26 17       	cp	r18, r22
 4aa:	37 07       	cpc	r19, r23
 4ac:	48 07       	cpc	r20, r24
 4ae:	ab 07       	cpc	r26, r27
 4b0:	b0 e8       	ldi	r27, 0x80	; 128
 4b2:	09 f0       	breq	.+2      	; 0x4b6 <__divsf3_pse+0x56>
 4b4:	bb 0b       	sbc	r27, r27
 4b6:	80 2d       	mov	r24, r0
 4b8:	bf 01       	movw	r22, r30
 4ba:	ff 27       	eor	r31, r31
 4bc:	93 58       	subi	r25, 0x83	; 131
 4be:	5f 4f       	sbci	r21, 0xFF	; 255
 4c0:	3a f0       	brmi	.+14     	; 0x4d0 <__divsf3_pse+0x70>
 4c2:	9e 3f       	cpi	r25, 0xFE	; 254
 4c4:	51 05       	cpc	r21, r1
 4c6:	78 f0       	brcs	.+30     	; 0x4e6 <__divsf3_pse+0x86>
 4c8:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_inf>
 4cc:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_szero>
 4d0:	5f 3f       	cpi	r21, 0xFF	; 255
 4d2:	e4 f3       	brlt	.-8      	; 0x4cc <__divsf3_pse+0x6c>
 4d4:	98 3e       	cpi	r25, 0xE8	; 232
 4d6:	d4 f3       	brlt	.-12     	; 0x4cc <__divsf3_pse+0x6c>
 4d8:	86 95       	lsr	r24
 4da:	77 95       	ror	r23
 4dc:	67 95       	ror	r22
 4de:	b7 95       	ror	r27
 4e0:	f7 95       	ror	r31
 4e2:	9f 5f       	subi	r25, 0xFF	; 255
 4e4:	c9 f7       	brne	.-14     	; 0x4d8 <__divsf3_pse+0x78>
 4e6:	88 0f       	add	r24, r24
 4e8:	91 1d       	adc	r25, r1
 4ea:	96 95       	lsr	r25
 4ec:	87 95       	ror	r24
 4ee:	97 f9       	bld	r25, 7
 4f0:	08 95       	ret
 4f2:	e1 e0       	ldi	r30, 0x01	; 1
 4f4:	66 0f       	add	r22, r22
 4f6:	77 1f       	adc	r23, r23
 4f8:	88 1f       	adc	r24, r24
 4fa:	bb 1f       	adc	r27, r27
 4fc:	62 17       	cp	r22, r18
 4fe:	73 07       	cpc	r23, r19
 500:	84 07       	cpc	r24, r20
 502:	ba 07       	cpc	r27, r26
 504:	20 f0       	brcs	.+8      	; 0x50e <__divsf3_pse+0xae>
 506:	62 1b       	sub	r22, r18
 508:	73 0b       	sbc	r23, r19
 50a:	84 0b       	sbc	r24, r20
 50c:	ba 0b       	sbc	r27, r26
 50e:	ee 1f       	adc	r30, r30
 510:	88 f7       	brcc	.-30     	; 0x4f4 <__divsf3_pse+0x94>
 512:	e0 95       	com	r30
 514:	08 95       	ret

00000516 <__floatunsisf>:
 516:	e8 94       	clt
 518:	09 c0       	rjmp	.+18     	; 0x52c <__floatsisf+0x12>

0000051a <__floatsisf>:
 51a:	97 fb       	bst	r25, 7
 51c:	3e f4       	brtc	.+14     	; 0x52c <__floatsisf+0x12>
 51e:	90 95       	com	r25
 520:	80 95       	com	r24
 522:	70 95       	com	r23
 524:	61 95       	neg	r22
 526:	7f 4f       	sbci	r23, 0xFF	; 255
 528:	8f 4f       	sbci	r24, 0xFF	; 255
 52a:	9f 4f       	sbci	r25, 0xFF	; 255
 52c:	99 23       	and	r25, r25
 52e:	a9 f0       	breq	.+42     	; 0x55a <__floatsisf+0x40>
 530:	f9 2f       	mov	r31, r25
 532:	96 e9       	ldi	r25, 0x96	; 150
 534:	bb 27       	eor	r27, r27
 536:	93 95       	inc	r25
 538:	f6 95       	lsr	r31
 53a:	87 95       	ror	r24
 53c:	77 95       	ror	r23
 53e:	67 95       	ror	r22
 540:	b7 95       	ror	r27
 542:	f1 11       	cpse	r31, r1
 544:	f8 cf       	rjmp	.-16     	; 0x536 <__floatsisf+0x1c>
 546:	fa f4       	brpl	.+62     	; 0x586 <__floatsisf+0x6c>
 548:	bb 0f       	add	r27, r27
 54a:	11 f4       	brne	.+4      	; 0x550 <__floatsisf+0x36>
 54c:	60 ff       	sbrs	r22, 0
 54e:	1b c0       	rjmp	.+54     	; 0x586 <__floatsisf+0x6c>
 550:	6f 5f       	subi	r22, 0xFF	; 255
 552:	7f 4f       	sbci	r23, 0xFF	; 255
 554:	8f 4f       	sbci	r24, 0xFF	; 255
 556:	9f 4f       	sbci	r25, 0xFF	; 255
 558:	16 c0       	rjmp	.+44     	; 0x586 <__floatsisf+0x6c>
 55a:	88 23       	and	r24, r24
 55c:	11 f0       	breq	.+4      	; 0x562 <__floatsisf+0x48>
 55e:	96 e9       	ldi	r25, 0x96	; 150
 560:	11 c0       	rjmp	.+34     	; 0x584 <__floatsisf+0x6a>
 562:	77 23       	and	r23, r23
 564:	21 f0       	breq	.+8      	; 0x56e <__floatsisf+0x54>
 566:	9e e8       	ldi	r25, 0x8E	; 142
 568:	87 2f       	mov	r24, r23
 56a:	76 2f       	mov	r23, r22
 56c:	05 c0       	rjmp	.+10     	; 0x578 <__floatsisf+0x5e>
 56e:	66 23       	and	r22, r22
 570:	71 f0       	breq	.+28     	; 0x58e <__floatsisf+0x74>
 572:	96 e8       	ldi	r25, 0x86	; 134
 574:	86 2f       	mov	r24, r22
 576:	70 e0       	ldi	r23, 0x00	; 0
 578:	60 e0       	ldi	r22, 0x00	; 0
 57a:	2a f0       	brmi	.+10     	; 0x586 <__floatsisf+0x6c>
 57c:	9a 95       	dec	r25
 57e:	66 0f       	add	r22, r22
 580:	77 1f       	adc	r23, r23
 582:	88 1f       	adc	r24, r24
 584:	da f7       	brpl	.-10     	; 0x57c <__floatsisf+0x62>
 586:	88 0f       	add	r24, r24
 588:	96 95       	lsr	r25
 58a:	87 95       	ror	r24
 58c:	97 f9       	bld	r25, 7
 58e:	08 95       	ret

00000590 <__fp_inf>:
 590:	97 f9       	bld	r25, 7
 592:	9f 67       	ori	r25, 0x7F	; 127
 594:	80 e8       	ldi	r24, 0x80	; 128
 596:	70 e0       	ldi	r23, 0x00	; 0
 598:	60 e0       	ldi	r22, 0x00	; 0
 59a:	08 95       	ret

0000059c <__fp_nan>:
 59c:	9f ef       	ldi	r25, 0xFF	; 255
 59e:	80 ec       	ldi	r24, 0xC0	; 192
 5a0:	08 95       	ret

000005a2 <__fp_pscA>:
 5a2:	00 24       	eor	r0, r0
 5a4:	0a 94       	dec	r0
 5a6:	16 16       	cp	r1, r22
 5a8:	17 06       	cpc	r1, r23
 5aa:	18 06       	cpc	r1, r24
 5ac:	09 06       	cpc	r0, r25
 5ae:	08 95       	ret

000005b0 <__fp_pscB>:
 5b0:	00 24       	eor	r0, r0
 5b2:	0a 94       	dec	r0
 5b4:	12 16       	cp	r1, r18
 5b6:	13 06       	cpc	r1, r19
 5b8:	14 06       	cpc	r1, r20
 5ba:	05 06       	cpc	r0, r21
 5bc:	08 95       	ret

000005be <__fp_round>:
 5be:	09 2e       	mov	r0, r25
 5c0:	03 94       	inc	r0
 5c2:	00 0c       	add	r0, r0
 5c4:	11 f4       	brne	.+4      	; 0x5ca <__fp_round+0xc>
 5c6:	88 23       	and	r24, r24
 5c8:	52 f0       	brmi	.+20     	; 0x5de <__fp_round+0x20>
 5ca:	bb 0f       	add	r27, r27
 5cc:	40 f4       	brcc	.+16     	; 0x5de <__fp_round+0x20>
 5ce:	bf 2b       	or	r27, r31
 5d0:	11 f4       	brne	.+4      	; 0x5d6 <__fp_round+0x18>
 5d2:	60 ff       	sbrs	r22, 0
 5d4:	04 c0       	rjmp	.+8      	; 0x5de <__fp_round+0x20>
 5d6:	6f 5f       	subi	r22, 0xFF	; 255
 5d8:	7f 4f       	sbci	r23, 0xFF	; 255
 5da:	8f 4f       	sbci	r24, 0xFF	; 255
 5dc:	9f 4f       	sbci	r25, 0xFF	; 255
 5de:	08 95       	ret

000005e0 <__fp_split3>:
 5e0:	57 fd       	sbrc	r21, 7
 5e2:	90 58       	subi	r25, 0x80	; 128
 5e4:	44 0f       	add	r20, r20
 5e6:	55 1f       	adc	r21, r21
 5e8:	59 f0       	breq	.+22     	; 0x600 <__fp_splitA+0x10>
 5ea:	5f 3f       	cpi	r21, 0xFF	; 255
 5ec:	71 f0       	breq	.+28     	; 0x60a <__fp_splitA+0x1a>
 5ee:	47 95       	ror	r20

000005f0 <__fp_splitA>:
 5f0:	88 0f       	add	r24, r24
 5f2:	97 fb       	bst	r25, 7
 5f4:	99 1f       	adc	r25, r25
 5f6:	61 f0       	breq	.+24     	; 0x610 <__fp_splitA+0x20>
 5f8:	9f 3f       	cpi	r25, 0xFF	; 255
 5fa:	79 f0       	breq	.+30     	; 0x61a <__fp_splitA+0x2a>
 5fc:	87 95       	ror	r24
 5fe:	08 95       	ret
 600:	12 16       	cp	r1, r18
 602:	13 06       	cpc	r1, r19
 604:	14 06       	cpc	r1, r20
 606:	55 1f       	adc	r21, r21
 608:	f2 cf       	rjmp	.-28     	; 0x5ee <__fp_split3+0xe>
 60a:	46 95       	lsr	r20
 60c:	f1 df       	rcall	.-30     	; 0x5f0 <__fp_splitA>
 60e:	08 c0       	rjmp	.+16     	; 0x620 <__fp_splitA+0x30>
 610:	16 16       	cp	r1, r22
 612:	17 06       	cpc	r1, r23
 614:	18 06       	cpc	r1, r24
 616:	99 1f       	adc	r25, r25
 618:	f1 cf       	rjmp	.-30     	; 0x5fc <__fp_splitA+0xc>
 61a:	86 95       	lsr	r24
 61c:	71 05       	cpc	r23, r1
 61e:	61 05       	cpc	r22, r1
 620:	08 94       	sec
 622:	08 95       	ret

00000624 <__fp_zero>:
 624:	e8 94       	clt

00000626 <__fp_szero>:
 626:	bb 27       	eor	r27, r27
 628:	66 27       	eor	r22, r22
 62a:	77 27       	eor	r23, r23
 62c:	cb 01       	movw	r24, r22
 62e:	97 f9       	bld	r25, 7
 630:	08 95       	ret

00000632 <__mulsf3>:
 632:	0e 94 2c 03 	call	0x658	; 0x658 <__mulsf3x>
 636:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_round>
 63a:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <__fp_pscA>
 63e:	38 f0       	brcs	.+14     	; 0x64e <__mulsf3+0x1c>
 640:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__fp_pscB>
 644:	20 f0       	brcs	.+8      	; 0x64e <__mulsf3+0x1c>
 646:	95 23       	and	r25, r21
 648:	11 f0       	breq	.+4      	; 0x64e <__mulsf3+0x1c>
 64a:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_inf>
 64e:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_nan>
 652:	11 24       	eor	r1, r1
 654:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_szero>

00000658 <__mulsf3x>:
 658:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__fp_split3>
 65c:	70 f3       	brcs	.-36     	; 0x63a <__mulsf3+0x8>

0000065e <__mulsf3_pse>:
 65e:	95 9f       	mul	r25, r21
 660:	c1 f3       	breq	.-16     	; 0x652 <__mulsf3+0x20>
 662:	95 0f       	add	r25, r21
 664:	50 e0       	ldi	r21, 0x00	; 0
 666:	55 1f       	adc	r21, r21
 668:	62 9f       	mul	r22, r18
 66a:	f0 01       	movw	r30, r0
 66c:	72 9f       	mul	r23, r18
 66e:	bb 27       	eor	r27, r27
 670:	f0 0d       	add	r31, r0
 672:	b1 1d       	adc	r27, r1
 674:	63 9f       	mul	r22, r19
 676:	aa 27       	eor	r26, r26
 678:	f0 0d       	add	r31, r0
 67a:	b1 1d       	adc	r27, r1
 67c:	aa 1f       	adc	r26, r26
 67e:	64 9f       	mul	r22, r20
 680:	66 27       	eor	r22, r22
 682:	b0 0d       	add	r27, r0
 684:	a1 1d       	adc	r26, r1
 686:	66 1f       	adc	r22, r22
 688:	82 9f       	mul	r24, r18
 68a:	22 27       	eor	r18, r18
 68c:	b0 0d       	add	r27, r0
 68e:	a1 1d       	adc	r26, r1
 690:	62 1f       	adc	r22, r18
 692:	73 9f       	mul	r23, r19
 694:	b0 0d       	add	r27, r0
 696:	a1 1d       	adc	r26, r1
 698:	62 1f       	adc	r22, r18
 69a:	83 9f       	mul	r24, r19
 69c:	a0 0d       	add	r26, r0
 69e:	61 1d       	adc	r22, r1
 6a0:	22 1f       	adc	r18, r18
 6a2:	74 9f       	mul	r23, r20
 6a4:	33 27       	eor	r19, r19
 6a6:	a0 0d       	add	r26, r0
 6a8:	61 1d       	adc	r22, r1
 6aa:	23 1f       	adc	r18, r19
 6ac:	84 9f       	mul	r24, r20
 6ae:	60 0d       	add	r22, r0
 6b0:	21 1d       	adc	r18, r1
 6b2:	82 2f       	mov	r24, r18
 6b4:	76 2f       	mov	r23, r22
 6b6:	6a 2f       	mov	r22, r26
 6b8:	11 24       	eor	r1, r1
 6ba:	9f 57       	subi	r25, 0x7F	; 127
 6bc:	50 40       	sbci	r21, 0x00	; 0
 6be:	9a f0       	brmi	.+38     	; 0x6e6 <__mulsf3_pse+0x88>
 6c0:	f1 f0       	breq	.+60     	; 0x6fe <__mulsf3_pse+0xa0>
 6c2:	88 23       	and	r24, r24
 6c4:	4a f0       	brmi	.+18     	; 0x6d8 <__mulsf3_pse+0x7a>
 6c6:	ee 0f       	add	r30, r30
 6c8:	ff 1f       	adc	r31, r31
 6ca:	bb 1f       	adc	r27, r27
 6cc:	66 1f       	adc	r22, r22
 6ce:	77 1f       	adc	r23, r23
 6d0:	88 1f       	adc	r24, r24
 6d2:	91 50       	subi	r25, 0x01	; 1
 6d4:	50 40       	sbci	r21, 0x00	; 0
 6d6:	a9 f7       	brne	.-22     	; 0x6c2 <__mulsf3_pse+0x64>
 6d8:	9e 3f       	cpi	r25, 0xFE	; 254
 6da:	51 05       	cpc	r21, r1
 6dc:	80 f0       	brcs	.+32     	; 0x6fe <__mulsf3_pse+0xa0>
 6de:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_inf>
 6e2:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_szero>
 6e6:	5f 3f       	cpi	r21, 0xFF	; 255
 6e8:	e4 f3       	brlt	.-8      	; 0x6e2 <__mulsf3_pse+0x84>
 6ea:	98 3e       	cpi	r25, 0xE8	; 232
 6ec:	d4 f3       	brlt	.-12     	; 0x6e2 <__mulsf3_pse+0x84>
 6ee:	86 95       	lsr	r24
 6f0:	77 95       	ror	r23
 6f2:	67 95       	ror	r22
 6f4:	b7 95       	ror	r27
 6f6:	f7 95       	ror	r31
 6f8:	e7 95       	ror	r30
 6fa:	9f 5f       	subi	r25, 0xFF	; 255
 6fc:	c1 f7       	brne	.-16     	; 0x6ee <__mulsf3_pse+0x90>
 6fe:	fe 2b       	or	r31, r30
 700:	88 0f       	add	r24, r24
 702:	91 1d       	adc	r25, r1
 704:	96 95       	lsr	r25
 706:	87 95       	ror	r24
 708:	97 f9       	bld	r25, 7
 70a:	08 95       	ret

0000070c <dtostrf>:
 70c:	ef 92       	push	r14
 70e:	0f 93       	push	r16
 710:	1f 93       	push	r17
 712:	cf 93       	push	r28
 714:	df 93       	push	r29
 716:	e8 01       	movw	r28, r16
 718:	47 fd       	sbrc	r20, 7
 71a:	02 c0       	rjmp	.+4      	; 0x720 <dtostrf+0x14>
 71c:	34 e0       	ldi	r19, 0x04	; 4
 71e:	01 c0       	rjmp	.+2      	; 0x722 <dtostrf+0x16>
 720:	34 e1       	ldi	r19, 0x14	; 20
 722:	04 2e       	mov	r0, r20
 724:	00 0c       	add	r0, r0
 726:	55 0b       	sbc	r21, r21
 728:	57 ff       	sbrs	r21, 7
 72a:	03 c0       	rjmp	.+6      	; 0x732 <dtostrf+0x26>
 72c:	51 95       	neg	r21
 72e:	41 95       	neg	r20
 730:	51 09       	sbc	r21, r1
 732:	e3 2e       	mov	r14, r19
 734:	02 2f       	mov	r16, r18
 736:	24 2f       	mov	r18, r20
 738:	ae 01       	movw	r20, r28
 73a:	0e 94 a6 03 	call	0x74c	; 0x74c <dtoa_prf>
 73e:	ce 01       	movw	r24, r28
 740:	df 91       	pop	r29
 742:	cf 91       	pop	r28
 744:	1f 91       	pop	r17
 746:	0f 91       	pop	r16
 748:	ef 90       	pop	r14
 74a:	08 95       	ret

0000074c <dtoa_prf>:
 74c:	a9 e0       	ldi	r26, 0x09	; 9
 74e:	b0 e0       	ldi	r27, 0x00	; 0
 750:	ec ea       	ldi	r30, 0xAC	; 172
 752:	f3 e0       	ldi	r31, 0x03	; 3
 754:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__prologue_saves__+0xc>
 758:	6a 01       	movw	r12, r20
 75a:	12 2f       	mov	r17, r18
 75c:	b0 2e       	mov	r11, r16
 75e:	2b e3       	ldi	r18, 0x3B	; 59
 760:	20 17       	cp	r18, r16
 762:	20 f0       	brcs	.+8      	; 0x76c <dtoa_prf+0x20>
 764:	ff 24       	eor	r15, r15
 766:	f3 94       	inc	r15
 768:	f0 0e       	add	r15, r16
 76a:	02 c0       	rjmp	.+4      	; 0x770 <dtoa_prf+0x24>
 76c:	2c e3       	ldi	r18, 0x3C	; 60
 76e:	f2 2e       	mov	r15, r18
 770:	0f 2d       	mov	r16, r15
 772:	27 e0       	ldi	r18, 0x07	; 7
 774:	ae 01       	movw	r20, r28
 776:	4f 5f       	subi	r20, 0xFF	; 255
 778:	5f 4f       	sbci	r21, 0xFF	; 255
 77a:	0e 94 00 05 	call	0xa00	; 0xa00 <__ftoa_engine>
 77e:	bc 01       	movw	r22, r24
 780:	49 81       	ldd	r20, Y+1	; 0x01
 782:	84 2f       	mov	r24, r20
 784:	89 70       	andi	r24, 0x09	; 9
 786:	81 30       	cpi	r24, 0x01	; 1
 788:	31 f0       	breq	.+12     	; 0x796 <dtoa_prf+0x4a>
 78a:	e1 fc       	sbrc	r14, 1
 78c:	06 c0       	rjmp	.+12     	; 0x79a <dtoa_prf+0x4e>
 78e:	e0 fe       	sbrs	r14, 0
 790:	06 c0       	rjmp	.+12     	; 0x79e <dtoa_prf+0x52>
 792:	90 e2       	ldi	r25, 0x20	; 32
 794:	05 c0       	rjmp	.+10     	; 0x7a0 <dtoa_prf+0x54>
 796:	9d e2       	ldi	r25, 0x2D	; 45
 798:	03 c0       	rjmp	.+6      	; 0x7a0 <dtoa_prf+0x54>
 79a:	9b e2       	ldi	r25, 0x2B	; 43
 79c:	01 c0       	rjmp	.+2      	; 0x7a0 <dtoa_prf+0x54>
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	5e 2d       	mov	r21, r14
 7a2:	50 71       	andi	r21, 0x10	; 16
 7a4:	43 ff       	sbrs	r20, 3
 7a6:	3c c0       	rjmp	.+120    	; 0x820 <dtoa_prf+0xd4>
 7a8:	91 11       	cpse	r25, r1
 7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <dtoa_prf+0x64>
 7ac:	83 e0       	ldi	r24, 0x03	; 3
 7ae:	01 c0       	rjmp	.+2      	; 0x7b2 <dtoa_prf+0x66>
 7b0:	84 e0       	ldi	r24, 0x04	; 4
 7b2:	81 17       	cp	r24, r17
 7b4:	18 f4       	brcc	.+6      	; 0x7bc <dtoa_prf+0x70>
 7b6:	21 2f       	mov	r18, r17
 7b8:	28 1b       	sub	r18, r24
 7ba:	01 c0       	rjmp	.+2      	; 0x7be <dtoa_prf+0x72>
 7bc:	20 e0       	ldi	r18, 0x00	; 0
 7be:	51 11       	cpse	r21, r1
 7c0:	0b c0       	rjmp	.+22     	; 0x7d8 <dtoa_prf+0x8c>
 7c2:	f6 01       	movw	r30, r12
 7c4:	82 2f       	mov	r24, r18
 7c6:	30 e2       	ldi	r19, 0x20	; 32
 7c8:	88 23       	and	r24, r24
 7ca:	19 f0       	breq	.+6      	; 0x7d2 <dtoa_prf+0x86>
 7cc:	31 93       	st	Z+, r19
 7ce:	81 50       	subi	r24, 0x01	; 1
 7d0:	fb cf       	rjmp	.-10     	; 0x7c8 <dtoa_prf+0x7c>
 7d2:	c2 0e       	add	r12, r18
 7d4:	d1 1c       	adc	r13, r1
 7d6:	20 e0       	ldi	r18, 0x00	; 0
 7d8:	99 23       	and	r25, r25
 7da:	29 f0       	breq	.+10     	; 0x7e6 <dtoa_prf+0x9a>
 7dc:	d6 01       	movw	r26, r12
 7de:	9c 93       	st	X, r25
 7e0:	f6 01       	movw	r30, r12
 7e2:	31 96       	adiw	r30, 0x01	; 1
 7e4:	6f 01       	movw	r12, r30
 7e6:	c6 01       	movw	r24, r12
 7e8:	03 96       	adiw	r24, 0x03	; 3
 7ea:	e2 fe       	sbrs	r14, 2
 7ec:	0a c0       	rjmp	.+20     	; 0x802 <dtoa_prf+0xb6>
 7ee:	3e e4       	ldi	r19, 0x4E	; 78
 7f0:	d6 01       	movw	r26, r12
 7f2:	3c 93       	st	X, r19
 7f4:	41 e4       	ldi	r20, 0x41	; 65
 7f6:	11 96       	adiw	r26, 0x01	; 1
 7f8:	4c 93       	st	X, r20
 7fa:	11 97       	sbiw	r26, 0x01	; 1
 7fc:	12 96       	adiw	r26, 0x02	; 2
 7fe:	3c 93       	st	X, r19
 800:	06 c0       	rjmp	.+12     	; 0x80e <dtoa_prf+0xc2>
 802:	3e e6       	ldi	r19, 0x6E	; 110
 804:	f6 01       	movw	r30, r12
 806:	30 83       	st	Z, r19
 808:	41 e6       	ldi	r20, 0x61	; 97
 80a:	41 83       	std	Z+1, r20	; 0x01
 80c:	32 83       	std	Z+2, r19	; 0x02
 80e:	fc 01       	movw	r30, r24
 810:	32 2f       	mov	r19, r18
 812:	40 e2       	ldi	r20, 0x20	; 32
 814:	33 23       	and	r19, r19
 816:	09 f4       	brne	.+2      	; 0x81a <dtoa_prf+0xce>
 818:	42 c0       	rjmp	.+132    	; 0x89e <__stack+0x3f>
 81a:	41 93       	st	Z+, r20
 81c:	31 50       	subi	r19, 0x01	; 1
 81e:	fa cf       	rjmp	.-12     	; 0x814 <dtoa_prf+0xc8>
 820:	42 ff       	sbrs	r20, 2
 822:	44 c0       	rjmp	.+136    	; 0x8ac <__stack+0x4d>
 824:	91 11       	cpse	r25, r1
 826:	02 c0       	rjmp	.+4      	; 0x82c <dtoa_prf+0xe0>
 828:	83 e0       	ldi	r24, 0x03	; 3
 82a:	01 c0       	rjmp	.+2      	; 0x82e <dtoa_prf+0xe2>
 82c:	84 e0       	ldi	r24, 0x04	; 4
 82e:	81 17       	cp	r24, r17
 830:	18 f4       	brcc	.+6      	; 0x838 <dtoa_prf+0xec>
 832:	21 2f       	mov	r18, r17
 834:	28 1b       	sub	r18, r24
 836:	01 c0       	rjmp	.+2      	; 0x83a <dtoa_prf+0xee>
 838:	20 e0       	ldi	r18, 0x00	; 0
 83a:	51 11       	cpse	r21, r1
 83c:	0b c0       	rjmp	.+22     	; 0x854 <dtoa_prf+0x108>
 83e:	f6 01       	movw	r30, r12
 840:	82 2f       	mov	r24, r18
 842:	30 e2       	ldi	r19, 0x20	; 32
 844:	88 23       	and	r24, r24
 846:	19 f0       	breq	.+6      	; 0x84e <dtoa_prf+0x102>
 848:	31 93       	st	Z+, r19
 84a:	81 50       	subi	r24, 0x01	; 1
 84c:	fb cf       	rjmp	.-10     	; 0x844 <dtoa_prf+0xf8>
 84e:	c2 0e       	add	r12, r18
 850:	d1 1c       	adc	r13, r1
 852:	20 e0       	ldi	r18, 0x00	; 0
 854:	99 23       	and	r25, r25
 856:	29 f0       	breq	.+10     	; 0x862 <__stack+0x3>
 858:	d6 01       	movw	r26, r12
 85a:	9c 93       	st	X, r25
 85c:	f6 01       	movw	r30, r12
 85e:	31 96       	adiw	r30, 0x01	; 1
 860:	6f 01       	movw	r12, r30
 862:	c6 01       	movw	r24, r12
 864:	03 96       	adiw	r24, 0x03	; 3
 866:	e2 fe       	sbrs	r14, 2
 868:	0b c0       	rjmp	.+22     	; 0x880 <__stack+0x21>
 86a:	39 e4       	ldi	r19, 0x49	; 73
 86c:	d6 01       	movw	r26, r12
 86e:	3c 93       	st	X, r19
 870:	3e e4       	ldi	r19, 0x4E	; 78
 872:	11 96       	adiw	r26, 0x01	; 1
 874:	3c 93       	st	X, r19
 876:	11 97       	sbiw	r26, 0x01	; 1
 878:	36 e4       	ldi	r19, 0x46	; 70
 87a:	12 96       	adiw	r26, 0x02	; 2
 87c:	3c 93       	st	X, r19
 87e:	07 c0       	rjmp	.+14     	; 0x88e <__stack+0x2f>
 880:	39 e6       	ldi	r19, 0x69	; 105
 882:	f6 01       	movw	r30, r12
 884:	30 83       	st	Z, r19
 886:	3e e6       	ldi	r19, 0x6E	; 110
 888:	31 83       	std	Z+1, r19	; 0x01
 88a:	36 e6       	ldi	r19, 0x66	; 102
 88c:	32 83       	std	Z+2, r19	; 0x02
 88e:	fc 01       	movw	r30, r24
 890:	32 2f       	mov	r19, r18
 892:	40 e2       	ldi	r20, 0x20	; 32
 894:	33 23       	and	r19, r19
 896:	19 f0       	breq	.+6      	; 0x89e <__stack+0x3f>
 898:	41 93       	st	Z+, r20
 89a:	31 50       	subi	r19, 0x01	; 1
 89c:	fb cf       	rjmp	.-10     	; 0x894 <__stack+0x35>
 89e:	fc 01       	movw	r30, r24
 8a0:	e2 0f       	add	r30, r18
 8a2:	f1 1d       	adc	r31, r1
 8a4:	10 82       	st	Z, r1
 8a6:	8e ef       	ldi	r24, 0xFE	; 254
 8a8:	9f ef       	ldi	r25, 0xFF	; 255
 8aa:	a6 c0       	rjmp	.+332    	; 0x9f8 <__stack+0x199>
 8ac:	21 e0       	ldi	r18, 0x01	; 1
 8ae:	30 e0       	ldi	r19, 0x00	; 0
 8b0:	91 11       	cpse	r25, r1
 8b2:	02 c0       	rjmp	.+4      	; 0x8b8 <__stack+0x59>
 8b4:	20 e0       	ldi	r18, 0x00	; 0
 8b6:	30 e0       	ldi	r19, 0x00	; 0
 8b8:	16 16       	cp	r1, r22
 8ba:	17 06       	cpc	r1, r23
 8bc:	1c f4       	brge	.+6      	; 0x8c4 <__stack+0x65>
 8be:	fb 01       	movw	r30, r22
 8c0:	31 96       	adiw	r30, 0x01	; 1
 8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <__stack+0x69>
 8c4:	e1 e0       	ldi	r30, 0x01	; 1
 8c6:	f0 e0       	ldi	r31, 0x00	; 0
 8c8:	2e 0f       	add	r18, r30
 8ca:	3f 1f       	adc	r19, r31
 8cc:	bb 20       	and	r11, r11
 8ce:	21 f0       	breq	.+8      	; 0x8d8 <__stack+0x79>
 8d0:	eb 2d       	mov	r30, r11
 8d2:	f0 e0       	ldi	r31, 0x00	; 0
 8d4:	31 96       	adiw	r30, 0x01	; 1
 8d6:	02 c0       	rjmp	.+4      	; 0x8dc <__stack+0x7d>
 8d8:	e0 e0       	ldi	r30, 0x00	; 0
 8da:	f0 e0       	ldi	r31, 0x00	; 0
 8dc:	2e 0f       	add	r18, r30
 8de:	3f 1f       	adc	r19, r31
 8e0:	e1 2f       	mov	r30, r17
 8e2:	f0 e0       	ldi	r31, 0x00	; 0
 8e4:	2e 17       	cp	r18, r30
 8e6:	3f 07       	cpc	r19, r31
 8e8:	1c f4       	brge	.+6      	; 0x8f0 <__stack+0x91>
 8ea:	12 1b       	sub	r17, r18
 8ec:	21 2f       	mov	r18, r17
 8ee:	01 c0       	rjmp	.+2      	; 0x8f2 <__stack+0x93>
 8f0:	20 e0       	ldi	r18, 0x00	; 0
 8f2:	8e 2d       	mov	r24, r14
 8f4:	88 71       	andi	r24, 0x18	; 24
 8f6:	59 f4       	brne	.+22     	; 0x90e <__stack+0xaf>
 8f8:	f6 01       	movw	r30, r12
 8fa:	82 2f       	mov	r24, r18
 8fc:	30 e2       	ldi	r19, 0x20	; 32
 8fe:	88 23       	and	r24, r24
 900:	19 f0       	breq	.+6      	; 0x908 <__stack+0xa9>
 902:	31 93       	st	Z+, r19
 904:	81 50       	subi	r24, 0x01	; 1
 906:	fb cf       	rjmp	.-10     	; 0x8fe <__stack+0x9f>
 908:	c2 0e       	add	r12, r18
 90a:	d1 1c       	adc	r13, r1
 90c:	20 e0       	ldi	r18, 0x00	; 0
 90e:	99 23       	and	r25, r25
 910:	29 f0       	breq	.+10     	; 0x91c <__stack+0xbd>
 912:	d6 01       	movw	r26, r12
 914:	9c 93       	st	X, r25
 916:	f6 01       	movw	r30, r12
 918:	31 96       	adiw	r30, 0x01	; 1
 91a:	6f 01       	movw	r12, r30
 91c:	51 11       	cpse	r21, r1
 91e:	0b c0       	rjmp	.+22     	; 0x936 <__stack+0xd7>
 920:	f6 01       	movw	r30, r12
 922:	82 2f       	mov	r24, r18
 924:	90 e3       	ldi	r25, 0x30	; 48
 926:	88 23       	and	r24, r24
 928:	19 f0       	breq	.+6      	; 0x930 <__stack+0xd1>
 92a:	91 93       	st	Z+, r25
 92c:	81 50       	subi	r24, 0x01	; 1
 92e:	fb cf       	rjmp	.-10     	; 0x926 <__stack+0xc7>
 930:	c2 0e       	add	r12, r18
 932:	d1 1c       	adc	r13, r1
 934:	20 e0       	ldi	r18, 0x00	; 0
 936:	0f 2d       	mov	r16, r15
 938:	06 0f       	add	r16, r22
 93a:	9a 81       	ldd	r25, Y+2	; 0x02
 93c:	34 2f       	mov	r19, r20
 93e:	30 71       	andi	r19, 0x10	; 16
 940:	44 ff       	sbrs	r20, 4
 942:	03 c0       	rjmp	.+6      	; 0x94a <__stack+0xeb>
 944:	91 33       	cpi	r25, 0x31	; 49
 946:	09 f4       	brne	.+2      	; 0x94a <__stack+0xeb>
 948:	01 50       	subi	r16, 0x01	; 1
 94a:	10 16       	cp	r1, r16
 94c:	24 f4       	brge	.+8      	; 0x956 <__stack+0xf7>
 94e:	09 30       	cpi	r16, 0x09	; 9
 950:	18 f0       	brcs	.+6      	; 0x958 <__stack+0xf9>
 952:	08 e0       	ldi	r16, 0x08	; 8
 954:	01 c0       	rjmp	.+2      	; 0x958 <__stack+0xf9>
 956:	01 e0       	ldi	r16, 0x01	; 1
 958:	ab 01       	movw	r20, r22
 95a:	77 ff       	sbrs	r23, 7
 95c:	02 c0       	rjmp	.+4      	; 0x962 <__stack+0x103>
 95e:	40 e0       	ldi	r20, 0x00	; 0
 960:	50 e0       	ldi	r21, 0x00	; 0
 962:	fb 01       	movw	r30, r22
 964:	e4 1b       	sub	r30, r20
 966:	f5 0b       	sbc	r31, r21
 968:	a1 e0       	ldi	r26, 0x01	; 1
 96a:	b0 e0       	ldi	r27, 0x00	; 0
 96c:	ac 0f       	add	r26, r28
 96e:	bd 1f       	adc	r27, r29
 970:	ea 0f       	add	r30, r26
 972:	fb 1f       	adc	r31, r27
 974:	8e e2       	ldi	r24, 0x2E	; 46
 976:	a8 2e       	mov	r10, r24
 978:	4b 01       	movw	r8, r22
 97a:	80 1a       	sub	r8, r16
 97c:	91 08       	sbc	r9, r1
 97e:	0b 2d       	mov	r16, r11
 980:	10 e0       	ldi	r17, 0x00	; 0
 982:	11 95       	neg	r17
 984:	01 95       	neg	r16
 986:	11 09       	sbc	r17, r1
 988:	4f 3f       	cpi	r20, 0xFF	; 255
 98a:	bf ef       	ldi	r27, 0xFF	; 255
 98c:	5b 07       	cpc	r21, r27
 98e:	21 f4       	brne	.+8      	; 0x998 <__stack+0x139>
 990:	d6 01       	movw	r26, r12
 992:	ac 92       	st	X, r10
 994:	11 96       	adiw	r26, 0x01	; 1
 996:	6d 01       	movw	r12, r26
 998:	64 17       	cp	r22, r20
 99a:	75 07       	cpc	r23, r21
 99c:	2c f0       	brlt	.+10     	; 0x9a8 <__stack+0x149>
 99e:	84 16       	cp	r8, r20
 9a0:	95 06       	cpc	r9, r21
 9a2:	14 f4       	brge	.+4      	; 0x9a8 <__stack+0x149>
 9a4:	81 81       	ldd	r24, Z+1	; 0x01
 9a6:	01 c0       	rjmp	.+2      	; 0x9aa <__stack+0x14b>
 9a8:	80 e3       	ldi	r24, 0x30	; 48
 9aa:	41 50       	subi	r20, 0x01	; 1
 9ac:	51 09       	sbc	r21, r1
 9ae:	31 96       	adiw	r30, 0x01	; 1
 9b0:	d6 01       	movw	r26, r12
 9b2:	11 96       	adiw	r26, 0x01	; 1
 9b4:	7d 01       	movw	r14, r26
 9b6:	40 17       	cp	r20, r16
 9b8:	51 07       	cpc	r21, r17
 9ba:	24 f0       	brlt	.+8      	; 0x9c4 <__stack+0x165>
 9bc:	d6 01       	movw	r26, r12
 9be:	8c 93       	st	X, r24
 9c0:	67 01       	movw	r12, r14
 9c2:	e2 cf       	rjmp	.-60     	; 0x988 <__stack+0x129>
 9c4:	64 17       	cp	r22, r20
 9c6:	75 07       	cpc	r23, r21
 9c8:	39 f4       	brne	.+14     	; 0x9d8 <__stack+0x179>
 9ca:	96 33       	cpi	r25, 0x36	; 54
 9cc:	20 f4       	brcc	.+8      	; 0x9d6 <__stack+0x177>
 9ce:	95 33       	cpi	r25, 0x35	; 53
 9d0:	19 f4       	brne	.+6      	; 0x9d8 <__stack+0x179>
 9d2:	31 11       	cpse	r19, r1
 9d4:	01 c0       	rjmp	.+2      	; 0x9d8 <__stack+0x179>
 9d6:	81 e3       	ldi	r24, 0x31	; 49
 9d8:	f6 01       	movw	r30, r12
 9da:	80 83       	st	Z, r24
 9dc:	f7 01       	movw	r30, r14
 9de:	82 2f       	mov	r24, r18
 9e0:	90 e2       	ldi	r25, 0x20	; 32
 9e2:	88 23       	and	r24, r24
 9e4:	19 f0       	breq	.+6      	; 0x9ec <__stack+0x18d>
 9e6:	91 93       	st	Z+, r25
 9e8:	81 50       	subi	r24, 0x01	; 1
 9ea:	fb cf       	rjmp	.-10     	; 0x9e2 <__stack+0x183>
 9ec:	f7 01       	movw	r30, r14
 9ee:	e2 0f       	add	r30, r18
 9f0:	f1 1d       	adc	r31, r1
 9f2:	10 82       	st	Z, r1
 9f4:	80 e0       	ldi	r24, 0x00	; 0
 9f6:	90 e0       	ldi	r25, 0x00	; 0
 9f8:	29 96       	adiw	r28, 0x09	; 9
 9fa:	ec e0       	ldi	r30, 0x0C	; 12
 9fc:	0c 94 fa 05 	jmp	0xbf4	; 0xbf4 <__epilogue_restores__+0xc>

00000a00 <__ftoa_engine>:
 a00:	28 30       	cpi	r18, 0x08	; 8
 a02:	08 f0       	brcs	.+2      	; 0xa06 <__ftoa_engine+0x6>
 a04:	27 e0       	ldi	r18, 0x07	; 7
 a06:	33 27       	eor	r19, r19
 a08:	da 01       	movw	r26, r20
 a0a:	99 0f       	add	r25, r25
 a0c:	31 1d       	adc	r19, r1
 a0e:	87 fd       	sbrc	r24, 7
 a10:	91 60       	ori	r25, 0x01	; 1
 a12:	00 96       	adiw	r24, 0x00	; 0
 a14:	61 05       	cpc	r22, r1
 a16:	71 05       	cpc	r23, r1
 a18:	39 f4       	brne	.+14     	; 0xa28 <__ftoa_engine+0x28>
 a1a:	32 60       	ori	r19, 0x02	; 2
 a1c:	2e 5f       	subi	r18, 0xFE	; 254
 a1e:	3d 93       	st	X+, r19
 a20:	30 e3       	ldi	r19, 0x30	; 48
 a22:	2a 95       	dec	r18
 a24:	e1 f7       	brne	.-8      	; 0xa1e <__ftoa_engine+0x1e>
 a26:	08 95       	ret
 a28:	9f 3f       	cpi	r25, 0xFF	; 255
 a2a:	30 f0       	brcs	.+12     	; 0xa38 <__ftoa_engine+0x38>
 a2c:	80 38       	cpi	r24, 0x80	; 128
 a2e:	71 05       	cpc	r23, r1
 a30:	61 05       	cpc	r22, r1
 a32:	09 f0       	breq	.+2      	; 0xa36 <__ftoa_engine+0x36>
 a34:	3c 5f       	subi	r19, 0xFC	; 252
 a36:	3c 5f       	subi	r19, 0xFC	; 252
 a38:	3d 93       	st	X+, r19
 a3a:	91 30       	cpi	r25, 0x01	; 1
 a3c:	08 f0       	brcs	.+2      	; 0xa40 <__ftoa_engine+0x40>
 a3e:	80 68       	ori	r24, 0x80	; 128
 a40:	91 1d       	adc	r25, r1
 a42:	df 93       	push	r29
 a44:	cf 93       	push	r28
 a46:	1f 93       	push	r17
 a48:	0f 93       	push	r16
 a4a:	ff 92       	push	r15
 a4c:	ef 92       	push	r14
 a4e:	19 2f       	mov	r17, r25
 a50:	98 7f       	andi	r25, 0xF8	; 248
 a52:	96 95       	lsr	r25
 a54:	e9 2f       	mov	r30, r25
 a56:	96 95       	lsr	r25
 a58:	96 95       	lsr	r25
 a5a:	e9 0f       	add	r30, r25
 a5c:	ff 27       	eor	r31, r31
 a5e:	e2 55       	subi	r30, 0x52	; 82
 a60:	ff 4f       	sbci	r31, 0xFF	; 255
 a62:	99 27       	eor	r25, r25
 a64:	33 27       	eor	r19, r19
 a66:	ee 24       	eor	r14, r14
 a68:	ff 24       	eor	r15, r15
 a6a:	a7 01       	movw	r20, r14
 a6c:	e7 01       	movw	r28, r14
 a6e:	05 90       	lpm	r0, Z+
 a70:	08 94       	sec
 a72:	07 94       	ror	r0
 a74:	28 f4       	brcc	.+10     	; 0xa80 <__ftoa_engine+0x80>
 a76:	36 0f       	add	r19, r22
 a78:	e7 1e       	adc	r14, r23
 a7a:	f8 1e       	adc	r15, r24
 a7c:	49 1f       	adc	r20, r25
 a7e:	51 1d       	adc	r21, r1
 a80:	66 0f       	add	r22, r22
 a82:	77 1f       	adc	r23, r23
 a84:	88 1f       	adc	r24, r24
 a86:	99 1f       	adc	r25, r25
 a88:	06 94       	lsr	r0
 a8a:	a1 f7       	brne	.-24     	; 0xa74 <__ftoa_engine+0x74>
 a8c:	05 90       	lpm	r0, Z+
 a8e:	07 94       	ror	r0
 a90:	28 f4       	brcc	.+10     	; 0xa9c <__ftoa_engine+0x9c>
 a92:	e7 0e       	add	r14, r23
 a94:	f8 1e       	adc	r15, r24
 a96:	49 1f       	adc	r20, r25
 a98:	56 1f       	adc	r21, r22
 a9a:	c1 1d       	adc	r28, r1
 a9c:	77 0f       	add	r23, r23
 a9e:	88 1f       	adc	r24, r24
 aa0:	99 1f       	adc	r25, r25
 aa2:	66 1f       	adc	r22, r22
 aa4:	06 94       	lsr	r0
 aa6:	a1 f7       	brne	.-24     	; 0xa90 <__ftoa_engine+0x90>
 aa8:	05 90       	lpm	r0, Z+
 aaa:	07 94       	ror	r0
 aac:	28 f4       	brcc	.+10     	; 0xab8 <__ftoa_engine+0xb8>
 aae:	f8 0e       	add	r15, r24
 ab0:	49 1f       	adc	r20, r25
 ab2:	56 1f       	adc	r21, r22
 ab4:	c7 1f       	adc	r28, r23
 ab6:	d1 1d       	adc	r29, r1
 ab8:	88 0f       	add	r24, r24
 aba:	99 1f       	adc	r25, r25
 abc:	66 1f       	adc	r22, r22
 abe:	77 1f       	adc	r23, r23
 ac0:	06 94       	lsr	r0
 ac2:	a1 f7       	brne	.-24     	; 0xaac <__ftoa_engine+0xac>
 ac4:	05 90       	lpm	r0, Z+
 ac6:	07 94       	ror	r0
 ac8:	20 f4       	brcc	.+8      	; 0xad2 <__ftoa_engine+0xd2>
 aca:	49 0f       	add	r20, r25
 acc:	56 1f       	adc	r21, r22
 ace:	c7 1f       	adc	r28, r23
 ad0:	d8 1f       	adc	r29, r24
 ad2:	99 0f       	add	r25, r25
 ad4:	66 1f       	adc	r22, r22
 ad6:	77 1f       	adc	r23, r23
 ad8:	88 1f       	adc	r24, r24
 ada:	06 94       	lsr	r0
 adc:	a9 f7       	brne	.-22     	; 0xac8 <__ftoa_engine+0xc8>
 ade:	84 91       	lpm	r24, Z
 ae0:	10 95       	com	r17
 ae2:	17 70       	andi	r17, 0x07	; 7
 ae4:	41 f0       	breq	.+16     	; 0xaf6 <__ftoa_engine+0xf6>
 ae6:	d6 95       	lsr	r29
 ae8:	c7 95       	ror	r28
 aea:	57 95       	ror	r21
 aec:	47 95       	ror	r20
 aee:	f7 94       	ror	r15
 af0:	e7 94       	ror	r14
 af2:	1a 95       	dec	r17
 af4:	c1 f7       	brne	.-16     	; 0xae6 <__ftoa_engine+0xe6>
 af6:	e4 e5       	ldi	r30, 0x54	; 84
 af8:	f0 e0       	ldi	r31, 0x00	; 0
 afa:	68 94       	set
 afc:	15 90       	lpm	r1, Z+
 afe:	15 91       	lpm	r17, Z+
 b00:	35 91       	lpm	r19, Z+
 b02:	65 91       	lpm	r22, Z+
 b04:	95 91       	lpm	r25, Z+
 b06:	05 90       	lpm	r0, Z+
 b08:	7f e2       	ldi	r23, 0x2F	; 47
 b0a:	73 95       	inc	r23
 b0c:	e1 18       	sub	r14, r1
 b0e:	f1 0a       	sbc	r15, r17
 b10:	43 0b       	sbc	r20, r19
 b12:	56 0b       	sbc	r21, r22
 b14:	c9 0b       	sbc	r28, r25
 b16:	d0 09       	sbc	r29, r0
 b18:	c0 f7       	brcc	.-16     	; 0xb0a <__ftoa_engine+0x10a>
 b1a:	e1 0c       	add	r14, r1
 b1c:	f1 1e       	adc	r15, r17
 b1e:	43 1f       	adc	r20, r19
 b20:	56 1f       	adc	r21, r22
 b22:	c9 1f       	adc	r28, r25
 b24:	d0 1d       	adc	r29, r0
 b26:	7e f4       	brtc	.+30     	; 0xb46 <__ftoa_engine+0x146>
 b28:	70 33       	cpi	r23, 0x30	; 48
 b2a:	11 f4       	brne	.+4      	; 0xb30 <__ftoa_engine+0x130>
 b2c:	8a 95       	dec	r24
 b2e:	e6 cf       	rjmp	.-52     	; 0xafc <__ftoa_engine+0xfc>
 b30:	e8 94       	clt
 b32:	01 50       	subi	r16, 0x01	; 1
 b34:	30 f0       	brcs	.+12     	; 0xb42 <__ftoa_engine+0x142>
 b36:	08 0f       	add	r16, r24
 b38:	0a f4       	brpl	.+2      	; 0xb3c <__ftoa_engine+0x13c>
 b3a:	00 27       	eor	r16, r16
 b3c:	02 17       	cp	r16, r18
 b3e:	08 f4       	brcc	.+2      	; 0xb42 <__ftoa_engine+0x142>
 b40:	20 2f       	mov	r18, r16
 b42:	23 95       	inc	r18
 b44:	02 2f       	mov	r16, r18
 b46:	7a 33       	cpi	r23, 0x3A	; 58
 b48:	28 f0       	brcs	.+10     	; 0xb54 <__ftoa_engine+0x154>
 b4a:	79 e3       	ldi	r23, 0x39	; 57
 b4c:	7d 93       	st	X+, r23
 b4e:	2a 95       	dec	r18
 b50:	e9 f7       	brne	.-6      	; 0xb4c <__ftoa_engine+0x14c>
 b52:	10 c0       	rjmp	.+32     	; 0xb74 <__ftoa_engine+0x174>
 b54:	7d 93       	st	X+, r23
 b56:	2a 95       	dec	r18
 b58:	89 f6       	brne	.-94     	; 0xafc <__ftoa_engine+0xfc>
 b5a:	06 94       	lsr	r0
 b5c:	97 95       	ror	r25
 b5e:	67 95       	ror	r22
 b60:	37 95       	ror	r19
 b62:	17 95       	ror	r17
 b64:	17 94       	ror	r1
 b66:	e1 18       	sub	r14, r1
 b68:	f1 0a       	sbc	r15, r17
 b6a:	43 0b       	sbc	r20, r19
 b6c:	56 0b       	sbc	r21, r22
 b6e:	c9 0b       	sbc	r28, r25
 b70:	d0 09       	sbc	r29, r0
 b72:	98 f0       	brcs	.+38     	; 0xb9a <__ftoa_engine+0x19a>
 b74:	23 95       	inc	r18
 b76:	7e 91       	ld	r23, -X
 b78:	73 95       	inc	r23
 b7a:	7a 33       	cpi	r23, 0x3A	; 58
 b7c:	08 f0       	brcs	.+2      	; 0xb80 <__ftoa_engine+0x180>
 b7e:	70 e3       	ldi	r23, 0x30	; 48
 b80:	7c 93       	st	X, r23
 b82:	20 13       	cpse	r18, r16
 b84:	b8 f7       	brcc	.-18     	; 0xb74 <__ftoa_engine+0x174>
 b86:	7e 91       	ld	r23, -X
 b88:	70 61       	ori	r23, 0x10	; 16
 b8a:	7d 93       	st	X+, r23
 b8c:	30 f0       	brcs	.+12     	; 0xb9a <__ftoa_engine+0x19a>
 b8e:	83 95       	inc	r24
 b90:	71 e3       	ldi	r23, 0x31	; 49
 b92:	7d 93       	st	X+, r23
 b94:	70 e3       	ldi	r23, 0x30	; 48
 b96:	2a 95       	dec	r18
 b98:	e1 f7       	brne	.-8      	; 0xb92 <__ftoa_engine+0x192>
 b9a:	11 24       	eor	r1, r1
 b9c:	ef 90       	pop	r14
 b9e:	ff 90       	pop	r15
 ba0:	0f 91       	pop	r16
 ba2:	1f 91       	pop	r17
 ba4:	cf 91       	pop	r28
 ba6:	df 91       	pop	r29
 ba8:	99 27       	eor	r25, r25
 baa:	87 fd       	sbrc	r24, 7
 bac:	90 95       	com	r25
 bae:	08 95       	ret

00000bb0 <__prologue_saves__>:
 bb0:	2f 92       	push	r2
 bb2:	3f 92       	push	r3
 bb4:	4f 92       	push	r4
 bb6:	5f 92       	push	r5
 bb8:	6f 92       	push	r6
 bba:	7f 92       	push	r7
 bbc:	8f 92       	push	r8
 bbe:	9f 92       	push	r9
 bc0:	af 92       	push	r10
 bc2:	bf 92       	push	r11
 bc4:	cf 92       	push	r12
 bc6:	df 92       	push	r13
 bc8:	ef 92       	push	r14
 bca:	ff 92       	push	r15
 bcc:	0f 93       	push	r16
 bce:	1f 93       	push	r17
 bd0:	cf 93       	push	r28
 bd2:	df 93       	push	r29
 bd4:	cd b7       	in	r28, 0x3d	; 61
 bd6:	de b7       	in	r29, 0x3e	; 62
 bd8:	ca 1b       	sub	r28, r26
 bda:	db 0b       	sbc	r29, r27
 bdc:	0f b6       	in	r0, 0x3f	; 63
 bde:	f8 94       	cli
 be0:	de bf       	out	0x3e, r29	; 62
 be2:	0f be       	out	0x3f, r0	; 63
 be4:	cd bf       	out	0x3d, r28	; 61
 be6:	09 94       	ijmp

00000be8 <__epilogue_restores__>:
 be8:	2a 88       	ldd	r2, Y+18	; 0x12
 bea:	39 88       	ldd	r3, Y+17	; 0x11
 bec:	48 88       	ldd	r4, Y+16	; 0x10
 bee:	5f 84       	ldd	r5, Y+15	; 0x0f
 bf0:	6e 84       	ldd	r6, Y+14	; 0x0e
 bf2:	7d 84       	ldd	r7, Y+13	; 0x0d
 bf4:	8c 84       	ldd	r8, Y+12	; 0x0c
 bf6:	9b 84       	ldd	r9, Y+11	; 0x0b
 bf8:	aa 84       	ldd	r10, Y+10	; 0x0a
 bfa:	b9 84       	ldd	r11, Y+9	; 0x09
 bfc:	c8 84       	ldd	r12, Y+8	; 0x08
 bfe:	df 80       	ldd	r13, Y+7	; 0x07
 c00:	ee 80       	ldd	r14, Y+6	; 0x06
 c02:	fd 80       	ldd	r15, Y+5	; 0x05
 c04:	0c 81       	ldd	r16, Y+4	; 0x04
 c06:	1b 81       	ldd	r17, Y+3	; 0x03
 c08:	aa 81       	ldd	r26, Y+2	; 0x02
 c0a:	b9 81       	ldd	r27, Y+1	; 0x01
 c0c:	ce 0f       	add	r28, r30
 c0e:	d1 1d       	adc	r29, r1
 c10:	0f b6       	in	r0, 0x3f	; 63
 c12:	f8 94       	cli
 c14:	de bf       	out	0x3e, r29	; 62
 c16:	0f be       	out	0x3f, r0	; 63
 c18:	cd bf       	out	0x3d, r28	; 61
 c1a:	ed 01       	movw	r28, r26
 c1c:	08 95       	ret

00000c1e <_exit>:
 c1e:	f8 94       	cli

00000c20 <__stop_program>:
 c20:	ff cf       	rjmp	.-2      	; 0xc20 <__stop_program>
