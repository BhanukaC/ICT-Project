
WIFI_32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c0a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000002c8  00800060  00001c0a  00001c9e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000ab  00800328  00800328  00001f66  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f66  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001fc4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00002000  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016e6  00000000  00000000  000020d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000847  00000000  00000000  000037be  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000901  00000000  00000000  00004005  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000035c  00000000  00000000  00004908  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000876  00000000  00000000  00004c64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d20  00000000  00000000  000054da  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  000061fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       8:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      20:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 9f 04 	jmp	0x93e	; 0x93e <__vector_13>
      38:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d8 e0       	ldi	r29, 0x08	; 8
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	13 e0       	ldi	r17, 0x03	; 3
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	ea e0       	ldi	r30, 0x0A	; 10
     16a:	fc e1       	ldi	r31, 0x1C	; 28
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	a8 32       	cpi	r26, 0x28	; 40
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	23 e0       	ldi	r18, 0x03	; 3
     17a:	a8 e2       	ldi	r26, 0x28	; 40
     17c:	b3 e0       	ldi	r27, 0x03	; 3
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	a3 3d       	cpi	r26, 0xD3	; 211
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 d6 04 	call	0x9ac	; 0x9ac <main>
     18c:	0c 94 03 0e 	jmp	0x1c06	; 0x1c06 <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <USART_Init>:
}

bool ESP8266_Close()
{
	return SendATandExpectResponse("AT+CIPCLOSE=1", "\r\nOK\r\n");
}
     194:	59 9a       	sbi	0x0b, 1	; 11
     196:	2a b1       	in	r18, 0x0a	; 10
     198:	28 69       	ori	r18, 0x98	; 152
     19a:	2a b9       	out	0x0a, r18	; 10
     19c:	20 b5       	in	r18, 0x20	; 32
     19e:	26 68       	ori	r18, 0x86	; 134
     1a0:	20 bd       	out	0x20, r18	; 32
     1a2:	0e 94 ee 06 	call	0xddc	; 0xddc <__floatunsisf>
     1a6:	20 e0       	ldi	r18, 0x00	; 0
     1a8:	30 e0       	ldi	r19, 0x00	; 0
     1aa:	40 e0       	ldi	r20, 0x00	; 0
     1ac:	51 e4       	ldi	r21, 0x41	; 65
     1ae:	0e 94 7c 07 	call	0xef8	; 0xef8 <__mulsf3>
     1b2:	9b 01       	movw	r18, r22
     1b4:	ac 01       	movw	r20, r24
     1b6:	60 e0       	ldi	r22, 0x00	; 0
     1b8:	74 e2       	ldi	r23, 0x24	; 36
     1ba:	84 e7       	ldi	r24, 0x74	; 116
     1bc:	9b e4       	ldi	r25, 0x4B	; 75
     1be:	0e 94 46 06 	call	0xc8c	; 0xc8c <__divsf3>
     1c2:	20 e0       	ldi	r18, 0x00	; 0
     1c4:	30 e0       	ldi	r19, 0x00	; 0
     1c6:	40 e8       	ldi	r20, 0x80	; 128
     1c8:	5f e3       	ldi	r21, 0x3F	; 63
     1ca:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <__subsf3>
     1ce:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <round>
     1d2:	0e 94 b8 06 	call	0xd70	; 0xd70 <__fixsfsi>
     1d6:	69 b9       	out	0x09, r22	; 9
     1d8:	70 bd       	out	0x20, r23	; 32
     1da:	08 95       	ret

000001dc <USART_TxChar>:
     1dc:	8c b9       	out	0x0c, r24	; 12
     1de:	5d 9b       	sbis	0x0b, 5	; 11
     1e0:	fe cf       	rjmp	.-4      	; 0x1de <USART_TxChar+0x2>
     1e2:	08 95       	ret

000001e4 <USART_SendString>:
     1e4:	cf 93       	push	r28
     1e6:	df 93       	push	r29
     1e8:	ec 01       	movw	r28, r24
     1ea:	88 81       	ld	r24, Y
     1ec:	88 23       	and	r24, r24
     1ee:	31 f0       	breq	.+12     	; 0x1fc <USART_SendString+0x18>
     1f0:	21 96       	adiw	r28, 0x01	; 1
     1f2:	0e 94 ee 00 	call	0x1dc	; 0x1dc <USART_TxChar>
     1f6:	89 91       	ld	r24, Y+
     1f8:	81 11       	cpse	r24, r1
     1fa:	fb cf       	rjmp	.-10     	; 0x1f2 <USART_SendString+0xe>
     1fc:	df 91       	pop	r29
     1fe:	cf 91       	pop	r28
     200:	08 95       	ret

00000202 <Read_Response>:
     202:	2f 92       	push	r2
     204:	3f 92       	push	r3
     206:	4f 92       	push	r4
     208:	5f 92       	push	r5
     20a:	6f 92       	push	r6
     20c:	7f 92       	push	r7
     20e:	8f 92       	push	r8
     210:	9f 92       	push	r9
     212:	af 92       	push	r10
     214:	bf 92       	push	r11
     216:	cf 92       	push	r12
     218:	df 92       	push	r13
     21a:	ef 92       	push	r14
     21c:	ff 92       	push	r15
     21e:	0f 93       	push	r16
     220:	1f 93       	push	r17
     222:	cf 93       	push	r28
     224:	df 93       	push	r29
     226:	cd b7       	in	r28, 0x3d	; 61
     228:	de b7       	in	r29, 0x3e	; 62
     22a:	2c 97       	sbiw	r28, 0x0c	; 12
     22c:	0f b6       	in	r0, 0x3f	; 63
     22e:	f8 94       	cli
     230:	de bf       	out	0x3e, r29	; 62
     232:	0f be       	out	0x3f, r0	; 63
     234:	cd bf       	out	0x3d, r28	; 61
     236:	9e 83       	std	Y+6, r25	; 0x06
     238:	8d 83       	std	Y+5, r24	; 0x05
     23a:	2d b7       	in	r18, 0x3d	; 61
     23c:	3e b7       	in	r19, 0x3e	; 62
     23e:	3c 87       	std	Y+12, r19	; 0x0c
     240:	2b 87       	std	Y+11, r18	; 0x0b
     242:	fc 01       	movw	r30, r24
     244:	01 90       	ld	r0, Z+
     246:	00 20       	and	r0, r0
     248:	e9 f7       	brne	.-6      	; 0x244 <Read_Response+0x42>
     24a:	31 97       	sbiw	r30, 0x01	; 1
     24c:	5f 01       	movw	r10, r30
     24e:	a8 1a       	sub	r10, r24
     250:	b9 0a       	sbc	r11, r25
     252:	bb 24       	eor	r11, r11
     254:	a5 01       	movw	r20, r10
     256:	41 50       	subi	r20, 0x01	; 1
     258:	51 09       	sbc	r21, r1
     25a:	58 87       	std	Y+8, r21	; 0x08
     25c:	4f 83       	std	Y+7, r20	; 0x07
     25e:	8d b7       	in	r24, 0x3d	; 61
     260:	9e b7       	in	r25, 0x3e	; 62
     262:	8a 19       	sub	r24, r10
     264:	9b 09       	sbc	r25, r11
     266:	0f b6       	in	r0, 0x3f	; 63
     268:	f8 94       	cli
     26a:	9e bf       	out	0x3e, r25	; 62
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	8d bf       	out	0x3d, r24	; 61
     270:	ad b7       	in	r26, 0x3d	; 61
     272:	be b7       	in	r27, 0x3e	; 62
     274:	11 96       	adiw	r26, 0x01	; 1
     276:	4d 01       	movw	r8, r26
     278:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <TimeOut>
     27c:	90 91 2b 03 	lds	r25, 0x032B	; 0x80032b <TimeOut+0x1>
     280:	a0 91 2c 03 	lds	r26, 0x032C	; 0x80032c <TimeOut+0x2>
     284:	b0 91 2d 03 	lds	r27, 0x032D	; 0x80032d <TimeOut+0x3>
     288:	80 3f       	cpi	r24, 0xF0	; 240
     28a:	98 4d       	sbci	r25, 0xD8	; 216
     28c:	af 4f       	sbci	r26, 0xFF	; 255
     28e:	bf 4f       	sbci	r27, 0xFF	; 255
     290:	61 f4       	brne	.+24     	; 0x2aa <Read_Response+0xa8>
     292:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <TimeOut>
     296:	10 92 2b 03 	sts	0x032B, r1	; 0x80032b <TimeOut+0x1>
     29a:	10 92 2c 03 	sts	0x032C, r1	; 0x80032c <TimeOut+0x2>
     29e:	10 92 2d 03 	sts	0x032D, r1	; 0x80032d <TimeOut+0x3>
     2a2:	82 e0       	ldi	r24, 0x02	; 2
     2a4:	80 93 d2 03 	sts	0x03D2, r24	; 0x8003d2 <Response_Status>
     2a8:	9b c0       	rjmp	.+310    	; 0x3e0 <Read_Response+0x1de>
     2aa:	19 82       	std	Y+1, r1	; 0x01
     2ac:	1a 82       	std	Y+2, r1	; 0x02
     2ae:	1b 82       	std	Y+3, r1	; 0x03
     2b0:	1c 82       	std	Y+4, r1	; 0x04
     2b2:	2f 80       	ldd	r2, Y+7	; 0x07
     2b4:	38 84       	ldd	r3, Y+8	; 0x08
     2b6:	28 0c       	add	r2, r8
     2b8:	39 1c       	adc	r3, r9
     2ba:	94 01       	movw	r18, r8
     2bc:	2f 5f       	subi	r18, 0xFF	; 255
     2be:	3f 4f       	sbci	r19, 0xFF	; 255
     2c0:	3a 87       	std	Y+10, r19	; 0x0a
     2c2:	29 87       	std	Y+9, r18	; 0x09
     2c4:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <Response_Status>
     2c8:	84 30       	cpi	r24, 0x04	; 4
     2ca:	11 f4       	brne	.+4      	; 0x2d0 <Read_Response+0xce>
     2cc:	10 92 d2 03 	sts	0x03D2, r1	; 0x8003d2 <Response_Status>
     2d0:	e2 e3       	ldi	r30, 0x32	; 50
     2d2:	f3 e0       	ldi	r31, 0x03	; 3
     2d4:	01 90       	ld	r0, Z+
     2d6:	00 20       	and	r0, r0
     2d8:	e9 f7       	brne	.-6      	; 0x2d4 <Read_Response+0xd2>
     2da:	31 97       	sbiw	r30, 0x01	; 1
     2dc:	cf 01       	movw	r24, r30
     2de:	82 53       	subi	r24, 0x32	; 50
     2e0:	93 40       	sbci	r25, 0x03	; 3
     2e2:	6c 01       	movw	r12, r24
     2e4:	e1 2c       	mov	r14, r1
     2e6:	f1 2c       	mov	r15, r1
     2e8:	c1 14       	cp	r12, r1
     2ea:	d1 04       	cpc	r13, r1
     2ec:	e1 04       	cpc	r14, r1
     2ee:	f1 04       	cpc	r15, r1
     2f0:	09 f4       	brne	.+2      	; 0x2f4 <Read_Response+0xf2>
     2f2:	51 c0       	rjmp	.+162    	; 0x396 <Read_Response+0x194>
     2f4:	8f e9       	ldi	r24, 0x9F	; 159
     2f6:	9f e0       	ldi	r25, 0x0F	; 15
     2f8:	01 97       	sbiw	r24, 0x01	; 1
     2fa:	f1 f7       	brne	.-4      	; 0x2f8 <Read_Response+0xf6>
     2fc:	00 c0       	rjmp	.+0      	; 0x2fe <Read_Response+0xfc>
     2fe:	00 00       	nop
     300:	29 81       	ldd	r18, Y+1	; 0x01
     302:	3a 81       	ldd	r19, Y+2	; 0x02
     304:	4b 81       	ldd	r20, Y+3	; 0x03
     306:	5c 81       	ldd	r21, Y+4	; 0x04
     308:	2f 5f       	subi	r18, 0xFF	; 255
     30a:	3f 4f       	sbci	r19, 0xFF	; 255
     30c:	4f 4f       	sbci	r20, 0xFF	; 255
     30e:	5f 4f       	sbci	r21, 0xFF	; 255
     310:	29 83       	std	Y+1, r18	; 0x01
     312:	3a 83       	std	Y+2, r19	; 0x02
     314:	4b 83       	std	Y+3, r20	; 0x03
     316:	5c 83       	std	Y+4, r21	; 0x04
     318:	e2 e3       	ldi	r30, 0x32	; 50
     31a:	f3 e0       	ldi	r31, 0x03	; 3
     31c:	01 90       	ld	r0, Z+
     31e:	00 20       	and	r0, r0
     320:	e9 f7       	brne	.-6      	; 0x31c <Read_Response+0x11a>
     322:	31 97       	sbiw	r30, 0x01	; 1
     324:	cf 01       	movw	r24, r30
     326:	82 53       	subi	r24, 0x32	; 50
     328:	93 40       	sbci	r25, 0x03	; 3
     32a:	a0 e0       	ldi	r26, 0x00	; 0
     32c:	b0 e0       	ldi	r27, 0x00	; 0
     32e:	c8 16       	cp	r12, r24
     330:	d9 06       	cpc	r13, r25
     332:	ea 06       	cpc	r14, r26
     334:	fb 06       	cpc	r15, r27
     336:	79 f5       	brne	.+94     	; 0x396 <Read_Response+0x194>
     338:	02 e3       	ldi	r16, 0x32	; 50
     33a:	13 e0       	ldi	r17, 0x03	; 3
     33c:	41 2c       	mov	r4, r1
     33e:	51 2c       	mov	r5, r1
     340:	32 01       	movw	r6, r4
     342:	4f 81       	ldd	r20, Y+7	; 0x07
     344:	58 85       	ldd	r21, Y+8	; 0x08
     346:	69 85       	ldd	r22, Y+9	; 0x09
     348:	7a 85       	ldd	r23, Y+10	; 0x0a
     34a:	c4 01       	movw	r24, r8
     34c:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <memmove>
     350:	d8 01       	movw	r26, r16
     352:	8d 91       	ld	r24, X+
     354:	8d 01       	movw	r16, r26
     356:	f1 01       	movw	r30, r2
     358:	80 83       	st	Z, r24
     35a:	a5 01       	movw	r20, r10
     35c:	6d 81       	ldd	r22, Y+5	; 0x05
     35e:	7e 81       	ldd	r23, Y+6	; 0x06
     360:	c4 01       	movw	r24, r8
     362:	0e 94 ed 0c 	call	0x19da	; 0x19da <strncmp>
     366:	89 2b       	or	r24, r25
     368:	61 f4       	brne	.+24     	; 0x382 <Read_Response+0x180>
     36a:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <TimeOut>
     36e:	10 92 2b 03 	sts	0x032B, r1	; 0x80032b <TimeOut+0x1>
     372:	10 92 2c 03 	sts	0x032C, r1	; 0x80032c <TimeOut+0x2>
     376:	10 92 2d 03 	sts	0x032D, r1	; 0x80032d <TimeOut+0x3>
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	80 93 d2 03 	sts	0x03D2, r24	; 0x8003d2 <Response_Status>
     380:	2f c0       	rjmp	.+94     	; 0x3e0 <Read_Response+0x1de>
     382:	ff ef       	ldi	r31, 0xFF	; 255
     384:	4f 1a       	sub	r4, r31
     386:	5f 0a       	sbc	r5, r31
     388:	6f 0a       	sbc	r6, r31
     38a:	7f 0a       	sbc	r7, r31
     38c:	4c 14       	cp	r4, r12
     38e:	5d 04       	cpc	r5, r13
     390:	6e 04       	cpc	r6, r14
     392:	7f 04       	cpc	r7, r15
     394:	b1 f6       	brne	.-84     	; 0x342 <Read_Response+0x140>
     396:	8f e9       	ldi	r24, 0x9F	; 159
     398:	9f e0       	ldi	r25, 0x0F	; 15
     39a:	01 97       	sbiw	r24, 0x01	; 1
     39c:	f1 f7       	brne	.-4      	; 0x39a <Read_Response+0x198>
     39e:	00 c0       	rjmp	.+0      	; 0x3a0 <Read_Response+0x19e>
     3a0:	00 00       	nop
     3a2:	29 81       	ldd	r18, Y+1	; 0x01
     3a4:	3a 81       	ldd	r19, Y+2	; 0x02
     3a6:	4b 81       	ldd	r20, Y+3	; 0x03
     3a8:	5c 81       	ldd	r21, Y+4	; 0x04
     3aa:	2f 5f       	subi	r18, 0xFF	; 255
     3ac:	3f 4f       	sbci	r19, 0xFF	; 255
     3ae:	4f 4f       	sbci	r20, 0xFF	; 255
     3b0:	5f 4f       	sbci	r21, 0xFF	; 255
     3b2:	29 83       	std	Y+1, r18	; 0x01
     3b4:	3a 83       	std	Y+2, r19	; 0x02
     3b6:	4b 83       	std	Y+3, r20	; 0x03
     3b8:	5c 83       	std	Y+4, r21	; 0x04
     3ba:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <TimeOut>
     3be:	90 91 2b 03 	lds	r25, 0x032B	; 0x80032b <TimeOut+0x1>
     3c2:	a0 91 2c 03 	lds	r26, 0x032C	; 0x80032c <TimeOut+0x2>
     3c6:	b0 91 2d 03 	lds	r27, 0x032D	; 0x80032d <TimeOut+0x3>
     3ca:	80 5f       	subi	r24, 0xF0	; 240
     3cc:	98 4d       	sbci	r25, 0xD8	; 216
     3ce:	af 4f       	sbci	r26, 0xFF	; 255
     3d0:	bf 4f       	sbci	r27, 0xFF	; 255
     3d2:	28 17       	cp	r18, r24
     3d4:	39 07       	cpc	r19, r25
     3d6:	4a 07       	cpc	r20, r26
     3d8:	5b 07       	cpc	r21, r27
     3da:	08 f4       	brcc	.+2      	; 0x3de <Read_Response+0x1dc>
     3dc:	73 cf       	rjmp	.-282    	; 0x2c4 <Read_Response+0xc2>
     3de:	59 cf       	rjmp	.-334    	; 0x292 <Read_Response+0x90>
     3e0:	4b 85       	ldd	r20, Y+11	; 0x0b
     3e2:	5c 85       	ldd	r21, Y+12	; 0x0c
     3e4:	0f b6       	in	r0, 0x3f	; 63
     3e6:	f8 94       	cli
     3e8:	5e bf       	out	0x3e, r21	; 62
     3ea:	0f be       	out	0x3f, r0	; 63
     3ec:	4d bf       	out	0x3d, r20	; 61
     3ee:	2c 96       	adiw	r28, 0x0c	; 12
     3f0:	0f b6       	in	r0, 0x3f	; 63
     3f2:	f8 94       	cli
     3f4:	de bf       	out	0x3e, r29	; 62
     3f6:	0f be       	out	0x3f, r0	; 63
     3f8:	cd bf       	out	0x3d, r28	; 61
     3fa:	df 91       	pop	r29
     3fc:	cf 91       	pop	r28
     3fe:	1f 91       	pop	r17
     400:	0f 91       	pop	r16
     402:	ff 90       	pop	r15
     404:	ef 90       	pop	r14
     406:	df 90       	pop	r13
     408:	cf 90       	pop	r12
     40a:	bf 90       	pop	r11
     40c:	af 90       	pop	r10
     40e:	9f 90       	pop	r9
     410:	8f 90       	pop	r8
     412:	7f 90       	pop	r7
     414:	6f 90       	pop	r6
     416:	5f 90       	pop	r5
     418:	4f 90       	pop	r4
     41a:	3f 90       	pop	r3
     41c:	2f 90       	pop	r2
     41e:	08 95       	ret

00000420 <ESP8266_Clear>:
     420:	80 ea       	ldi	r24, 0xA0	; 160
     422:	e2 e3       	ldi	r30, 0x32	; 50
     424:	f3 e0       	ldi	r31, 0x03	; 3
     426:	df 01       	movw	r26, r30
     428:	1d 92       	st	X+, r1
     42a:	8a 95       	dec	r24
     42c:	e9 f7       	brne	.-6      	; 0x428 <ESP8266_Clear+0x8>
     42e:	10 92 31 03 	sts	0x0331, r1	; 0x800331 <Counter+0x1>
     432:	10 92 30 03 	sts	0x0330, r1	; 0x800330 <Counter>
     436:	10 92 2f 03 	sts	0x032F, r1	; 0x80032f <pointer+0x1>
     43a:	10 92 2e 03 	sts	0x032E, r1	; 0x80032e <pointer>
     43e:	08 95       	ret

00000440 <Start_Read_Response>:
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
     444:	ec 01       	movw	r28, r24
     446:	84 e0       	ldi	r24, 0x04	; 4
     448:	80 93 d2 03 	sts	0x03D2, r24	; 0x8003d2 <Response_Status>
     44c:	ce 01       	movw	r24, r28
     44e:	0e 94 01 01 	call	0x202	; 0x202 <Read_Response>
     452:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <Response_Status>
     456:	88 23       	and	r24, r24
     458:	c9 f3       	breq	.-14     	; 0x44c <Start_Read_Response+0xc>
     45a:	df 91       	pop	r29
     45c:	cf 91       	pop	r28
     45e:	08 95       	ret

00000460 <WaitForExpectedResponse>:
     460:	0e 94 20 02 	call	0x440	; 0x440 <Start_Read_Response>
     464:	81 e0       	ldi	r24, 0x01	; 1
     466:	90 91 d2 03 	lds	r25, 0x03D2	; 0x8003d2 <Response_Status>
     46a:	92 30       	cpi	r25, 0x02	; 2
     46c:	09 f4       	brne	.+2      	; 0x470 <WaitForExpectedResponse+0x10>
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	08 95       	ret

00000472 <SendATandExpectResponse>:
     472:	0f 93       	push	r16
     474:	1f 93       	push	r17
     476:	cf 93       	push	r28
     478:	df 93       	push	r29
     47a:	8c 01       	movw	r16, r24
     47c:	eb 01       	movw	r28, r22
     47e:	0e 94 10 02 	call	0x420	; 0x420 <ESP8266_Clear>
     482:	c8 01       	movw	r24, r16
     484:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <USART_SendString>
     488:	8b ec       	ldi	r24, 0xCB	; 203
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <USART_SendString>
     490:	ce 01       	movw	r24, r28
     492:	0e 94 30 02 	call	0x460	; 0x460 <WaitForExpectedResponse>
     496:	df 91       	pop	r29
     498:	cf 91       	pop	r28
     49a:	1f 91       	pop	r17
     49c:	0f 91       	pop	r16
     49e:	08 95       	ret

000004a0 <ESP8266_ApplicationMode>:
     4a0:	0f 93       	push	r16
     4a2:	1f 93       	push	r17
     4a4:	cf 93       	push	r28
     4a6:	df 93       	push	r29
     4a8:	cd b7       	in	r28, 0x3d	; 61
     4aa:	de b7       	in	r29, 0x3e	; 62
     4ac:	64 97       	sbiw	r28, 0x14	; 20
     4ae:	0f b6       	in	r0, 0x3f	; 63
     4b0:	f8 94       	cli
     4b2:	de bf       	out	0x3e, r29	; 62
     4b4:	0f be       	out	0x3f, r0	; 63
     4b6:	cd bf       	out	0x3d, r28	; 61
     4b8:	8e 01       	movw	r16, r28
     4ba:	0f 5f       	subi	r16, 0xFF	; 255
     4bc:	1f 4f       	sbci	r17, 0xFF	; 255
     4be:	94 e1       	ldi	r25, 0x14	; 20
     4c0:	f8 01       	movw	r30, r16
     4c2:	11 92       	st	Z+, r1
     4c4:	9a 95       	dec	r25
     4c6:	e9 f7       	brne	.-6      	; 0x4c2 <ESP8266_ApplicationMode+0x22>
     4c8:	1f 92       	push	r1
     4ca:	8f 93       	push	r24
     4cc:	87 e6       	ldi	r24, 0x67	; 103
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	9f 93       	push	r25
     4d2:	8f 93       	push	r24
     4d4:	1f 93       	push	r17
     4d6:	0f 93       	push	r16
     4d8:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
     4dc:	1c 8a       	std	Y+20, r1	; 0x14
     4de:	60 e6       	ldi	r22, 0x60	; 96
     4e0:	70 e0       	ldi	r23, 0x00	; 0
     4e2:	c8 01       	movw	r24, r16
     4e4:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
     4e8:	0f 90       	pop	r0
     4ea:	0f 90       	pop	r0
     4ec:	0f 90       	pop	r0
     4ee:	0f 90       	pop	r0
     4f0:	0f 90       	pop	r0
     4f2:	0f 90       	pop	r0
     4f4:	64 96       	adiw	r28, 0x14	; 20
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	f8 94       	cli
     4fa:	de bf       	out	0x3e, r29	; 62
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	cd bf       	out	0x3d, r28	; 61
     500:	df 91       	pop	r29
     502:	cf 91       	pop	r28
     504:	1f 91       	pop	r17
     506:	0f 91       	pop	r16
     508:	08 95       	ret

0000050a <ESP8266_ConnectionMode>:
     50a:	0f 93       	push	r16
     50c:	1f 93       	push	r17
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	cd b7       	in	r28, 0x3d	; 61
     514:	de b7       	in	r29, 0x3e	; 62
     516:	64 97       	sbiw	r28, 0x14	; 20
     518:	0f b6       	in	r0, 0x3f	; 63
     51a:	f8 94       	cli
     51c:	de bf       	out	0x3e, r29	; 62
     51e:	0f be       	out	0x3f, r0	; 63
     520:	cd bf       	out	0x3d, r28	; 61
     522:	8e 01       	movw	r16, r28
     524:	0f 5f       	subi	r16, 0xFF	; 255
     526:	1f 4f       	sbci	r17, 0xFF	; 255
     528:	94 e1       	ldi	r25, 0x14	; 20
     52a:	f8 01       	movw	r30, r16
     52c:	11 92       	st	Z+, r1
     52e:	9a 95       	dec	r25
     530:	e9 f7       	brne	.-6      	; 0x52c <ESP8266_ConnectionMode+0x22>
     532:	1f 92       	push	r1
     534:	8f 93       	push	r24
     536:	85 e7       	ldi	r24, 0x75	; 117
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	9f 93       	push	r25
     53c:	8f 93       	push	r24
     53e:	1f 93       	push	r17
     540:	0f 93       	push	r16
     542:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
     546:	1c 8a       	std	Y+20, r1	; 0x14
     548:	60 e6       	ldi	r22, 0x60	; 96
     54a:	70 e0       	ldi	r23, 0x00	; 0
     54c:	c8 01       	movw	r24, r16
     54e:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
     552:	0f 90       	pop	r0
     554:	0f 90       	pop	r0
     556:	0f 90       	pop	r0
     558:	0f 90       	pop	r0
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	64 96       	adiw	r28, 0x14	; 20
     560:	0f b6       	in	r0, 0x3f	; 63
     562:	f8 94       	cli
     564:	de bf       	out	0x3e, r29	; 62
     566:	0f be       	out	0x3f, r0	; 63
     568:	cd bf       	out	0x3d, r28	; 61
     56a:	df 91       	pop	r29
     56c:	cf 91       	pop	r28
     56e:	1f 91       	pop	r17
     570:	0f 91       	pop	r16
     572:	08 95       	ret

00000574 <ESP8266_Begin>:
     574:	62 e8       	ldi	r22, 0x82	; 130
     576:	70 e0       	ldi	r23, 0x00	; 0
     578:	85 e8       	ldi	r24, 0x85	; 133
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
     580:	81 11       	cpse	r24, r1
     582:	06 c0       	rjmp	.+12     	; 0x590 <ESP8266_Begin+0x1c>
     584:	62 e8       	ldi	r22, 0x82	; 130
     586:	70 e0       	ldi	r23, 0x00	; 0
     588:	8a e8       	ldi	r24, 0x8A	; 138
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
     590:	08 95       	ret

00000592 <ESP8266_WIFIMode>:

bool ESP8266_WIFIMode(uint8_t _mode)
{
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	cd b7       	in	r28, 0x3d	; 61
     59c:	de b7       	in	r29, 0x3e	; 62
     59e:	64 97       	sbiw	r28, 0x14	; 20
     5a0:	0f b6       	in	r0, 0x3f	; 63
     5a2:	f8 94       	cli
     5a4:	de bf       	out	0x3e, r29	; 62
     5a6:	0f be       	out	0x3f, r0	; 63
     5a8:	cd bf       	out	0x3d, r28	; 61
	char _atCommand[20];
	memset(_atCommand, 0, 20);
     5aa:	8e 01       	movw	r16, r28
     5ac:	0f 5f       	subi	r16, 0xFF	; 255
     5ae:	1f 4f       	sbci	r17, 0xFF	; 255
     5b0:	94 e1       	ldi	r25, 0x14	; 20
     5b2:	f8 01       	movw	r30, r16
     5b4:	11 92       	st	Z+, r1
     5b6:	9a 95       	dec	r25
     5b8:	e9 f7       	brne	.-6      	; 0x5b4 <ESP8266_WIFIMode+0x22>
	sprintf(_atCommand, "AT+CWMODE=%d", _mode);
     5ba:	1f 92       	push	r1
     5bc:	8f 93       	push	r24
     5be:	8b e9       	ldi	r24, 0x9B	; 155
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	9f 93       	push	r25
     5c4:	8f 93       	push	r24
     5c6:	1f 93       	push	r17
     5c8:	0f 93       	push	r16
     5ca:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
	_atCommand[19] = 0;
     5ce:	1c 8a       	std	Y+20, r1	; 0x14
	return SendATandExpectResponse(_atCommand, "\r\nOK\r\n");
     5d0:	60 e6       	ldi	r22, 0x60	; 96
     5d2:	70 e0       	ldi	r23, 0x00	; 0
     5d4:	c8 01       	movw	r24, r16
     5d6:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
     5da:	0f 90       	pop	r0
     5dc:	0f 90       	pop	r0
     5de:	0f 90       	pop	r0
     5e0:	0f 90       	pop	r0
     5e2:	0f 90       	pop	r0
     5e4:	0f 90       	pop	r0
}
     5e6:	64 96       	adiw	r28, 0x14	; 20
     5e8:	0f b6       	in	r0, 0x3f	; 63
     5ea:	f8 94       	cli
     5ec:	de bf       	out	0x3e, r29	; 62
     5ee:	0f be       	out	0x3f, r0	; 63
     5f0:	cd bf       	out	0x3d, r28	; 61
     5f2:	df 91       	pop	r29
     5f4:	cf 91       	pop	r28
     5f6:	1f 91       	pop	r17
     5f8:	0f 91       	pop	r16
     5fa:	08 95       	ret

000005fc <ESP8266_JoinAccessPoint>:

uint8_t ESP8266_JoinAccessPoint(char* _SSID, char* _PASSWORD)
{
     5fc:	0f 93       	push	r16
     5fe:	1f 93       	push	r17
     600:	cf 93       	push	r28
     602:	df 93       	push	r29
     604:	cd b7       	in	r28, 0x3d	; 61
     606:	de b7       	in	r29, 0x3e	; 62
     608:	ec 97       	sbiw	r28, 0x3c	; 60
     60a:	0f b6       	in	r0, 0x3f	; 63
     60c:	f8 94       	cli
     60e:	de bf       	out	0x3e, r29	; 62
     610:	0f be       	out	0x3f, r0	; 63
     612:	cd bf       	out	0x3d, r28	; 61
	char _atCommand[60];
	memset(_atCommand, 0, 60);
     614:	8e 01       	movw	r16, r28
     616:	0f 5f       	subi	r16, 0xFF	; 255
     618:	1f 4f       	sbci	r17, 0xFF	; 255
     61a:	2c e3       	ldi	r18, 0x3C	; 60
     61c:	f8 01       	movw	r30, r16
     61e:	11 92       	st	Z+, r1
     620:	2a 95       	dec	r18
     622:	e9 f7       	brne	.-6      	; 0x61e <ESP8266_JoinAccessPoint+0x22>
	sprintf(_atCommand, "AT+CWJAP=\"%s\",\"%s\"", _SSID, _PASSWORD);
     624:	7f 93       	push	r23
     626:	6f 93       	push	r22
     628:	9f 93       	push	r25
     62a:	8f 93       	push	r24
     62c:	88 ea       	ldi	r24, 0xA8	; 168
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	9f 93       	push	r25
     632:	8f 93       	push	r24
     634:	1f 93       	push	r17
     636:	0f 93       	push	r16
     638:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
	_atCommand[59] = 0;
     63c:	1c ae       	std	Y+60, r1	; 0x3c
	if(SendATandExpectResponse(_atCommand, "\r\nWIFI CONNECTED\r\n"))
     63e:	6b eb       	ldi	r22, 0xBB	; 187
     640:	70 e0       	ldi	r23, 0x00	; 0
     642:	c8 01       	movw	r24, r16
     644:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
     648:	0f b6       	in	r0, 0x3f	; 63
     64a:	f8 94       	cli
     64c:	de bf       	out	0x3e, r29	; 62
     64e:	0f be       	out	0x3f, r0	; 63
     650:	cd bf       	out	0x3d, r28	; 61
     652:	81 11       	cpse	r24, r1
     654:	22 c0       	rjmp	.+68     	; 0x69a <ESP8266_JoinAccessPoint+0x9e>
	return ESP8266_WIFI_CONNECTED;
	else{
		if(strstr(RESPONSE_BUFFER, "+CWJAP:1"))
     656:	6e ec       	ldi	r22, 0xCE	; 206
     658:	70 e0       	ldi	r23, 0x00	; 0
     65a:	82 e3       	ldi	r24, 0x32	; 50
     65c:	93 e0       	ldi	r25, 0x03	; 3
     65e:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <strstr>
     662:	89 2b       	or	r24, r25
     664:	e1 f4       	brne	.+56     	; 0x69e <ESP8266_JoinAccessPoint+0xa2>
		return ESP8266_CONNECTION_TIMEOUT;
		else if(strstr(RESPONSE_BUFFER, "+CWJAP:2"))
     666:	67 ed       	ldi	r22, 0xD7	; 215
     668:	70 e0       	ldi	r23, 0x00	; 0
     66a:	82 e3       	ldi	r24, 0x32	; 50
     66c:	93 e0       	ldi	r25, 0x03	; 3
     66e:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <strstr>
     672:	89 2b       	or	r24, r25
     674:	b1 f4       	brne	.+44     	; 0x6a2 <ESP8266_JoinAccessPoint+0xa6>
		return ESP8266_WRONG_PASSWORD;
		else if(strstr(RESPONSE_BUFFER, "+CWJAP:3"))
     676:	60 ee       	ldi	r22, 0xE0	; 224
     678:	70 e0       	ldi	r23, 0x00	; 0
     67a:	82 e3       	ldi	r24, 0x32	; 50
     67c:	93 e0       	ldi	r25, 0x03	; 3
     67e:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <strstr>
     682:	89 2b       	or	r24, r25
     684:	81 f4       	brne	.+32     	; 0x6a6 <ESP8266_JoinAccessPoint+0xaa>
		return ESP8266_NOT_FOUND_TARGET_AP;
		else if(strstr(RESPONSE_BUFFER, "+CWJAP:4"))
     686:	69 ee       	ldi	r22, 0xE9	; 233
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	82 e3       	ldi	r24, 0x32	; 50
     68c:	93 e0       	ldi	r25, 0x03	; 3
     68e:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <strstr>
     692:	89 2b       	or	r24, r25
     694:	51 f4       	brne	.+20     	; 0x6aa <ESP8266_JoinAccessPoint+0xae>
		return ESP8266_CONNECTION_FAILED;
		else
		return ESP8266_JOIN_UNKNOWN_ERROR;
     696:	85 e0       	ldi	r24, 0x05	; 5
     698:	09 c0       	rjmp	.+18     	; 0x6ac <ESP8266_JoinAccessPoint+0xb0>
	char _atCommand[60];
	memset(_atCommand, 0, 60);
	sprintf(_atCommand, "AT+CWJAP=\"%s\",\"%s\"", _SSID, _PASSWORD);
	_atCommand[59] = 0;
	if(SendATandExpectResponse(_atCommand, "\r\nWIFI CONNECTED\r\n"))
	return ESP8266_WIFI_CONNECTED;
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	07 c0       	rjmp	.+14     	; 0x6ac <ESP8266_JoinAccessPoint+0xb0>
	else{
		if(strstr(RESPONSE_BUFFER, "+CWJAP:1"))
		return ESP8266_CONNECTION_TIMEOUT;
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	05 c0       	rjmp	.+10     	; 0x6ac <ESP8266_JoinAccessPoint+0xb0>
		else if(strstr(RESPONSE_BUFFER, "+CWJAP:2"))
		return ESP8266_WRONG_PASSWORD;
     6a2:	82 e0       	ldi	r24, 0x02	; 2
     6a4:	03 c0       	rjmp	.+6      	; 0x6ac <ESP8266_JoinAccessPoint+0xb0>
		else if(strstr(RESPONSE_BUFFER, "+CWJAP:3"))
		return ESP8266_NOT_FOUND_TARGET_AP;
     6a6:	83 e0       	ldi	r24, 0x03	; 3
     6a8:	01 c0       	rjmp	.+2      	; 0x6ac <ESP8266_JoinAccessPoint+0xb0>
		else if(strstr(RESPONSE_BUFFER, "+CWJAP:4"))
		return ESP8266_CONNECTION_FAILED;
     6aa:	84 e0       	ldi	r24, 0x04	; 4
		else
		return ESP8266_JOIN_UNKNOWN_ERROR;
	}
}
     6ac:	ec 96       	adiw	r28, 0x3c	; 60
     6ae:	0f b6       	in	r0, 0x3f	; 63
     6b0:	f8 94       	cli
     6b2:	de bf       	out	0x3e, r29	; 62
     6b4:	0f be       	out	0x3f, r0	; 63
     6b6:	cd bf       	out	0x3d, r28	; 61
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	1f 91       	pop	r17
     6be:	0f 91       	pop	r16
     6c0:	08 95       	ret

000006c2 <ESP8266_connected>:

uint8_t ESP8266_connected()
{
	SendATandExpectResponse("AT+CIPSTATUS", "\r\nOK\r\n");
     6c2:	60 e6       	ldi	r22, 0x60	; 96
     6c4:	70 e0       	ldi	r23, 0x00	; 0
     6c6:	82 ef       	ldi	r24, 0xF2	; 242
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
	if(strstr(RESPONSE_BUFFER, "STATUS:2"))
     6ce:	6f ef       	ldi	r22, 0xFF	; 255
     6d0:	70 e0       	ldi	r23, 0x00	; 0
     6d2:	82 e3       	ldi	r24, 0x32	; 50
     6d4:	93 e0       	ldi	r25, 0x03	; 3
     6d6:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <strstr>
     6da:	89 2b       	or	r24, r25
     6dc:	d1 f4       	brne	.+52     	; 0x712 <ESP8266_connected+0x50>
	return ESP8266_CONNECTED_TO_AP;
	else if(strstr(RESPONSE_BUFFER, "STATUS:3"))
     6de:	68 e0       	ldi	r22, 0x08	; 8
     6e0:	71 e0       	ldi	r23, 0x01	; 1
     6e2:	82 e3       	ldi	r24, 0x32	; 50
     6e4:	93 e0       	ldi	r25, 0x03	; 3
     6e6:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <strstr>
     6ea:	89 2b       	or	r24, r25
     6ec:	a1 f4       	brne	.+40     	; 0x716 <ESP8266_connected+0x54>
	return ESP8266_CREATED_TRANSMISSION;
	else if(strstr(RESPONSE_BUFFER, "STATUS:4"))
     6ee:	61 e1       	ldi	r22, 0x11	; 17
     6f0:	71 e0       	ldi	r23, 0x01	; 1
     6f2:	82 e3       	ldi	r24, 0x32	; 50
     6f4:	93 e0       	ldi	r25, 0x03	; 3
     6f6:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <strstr>
     6fa:	89 2b       	or	r24, r25
     6fc:	71 f4       	brne	.+28     	; 0x71a <ESP8266_connected+0x58>
	return ESP8266_TRANSMISSION_DISCONNECTED;
	else if(strstr(RESPONSE_BUFFER, "STATUS:5"))
     6fe:	6a e1       	ldi	r22, 0x1A	; 26
     700:	71 e0       	ldi	r23, 0x01	; 1
     702:	82 e3       	ldi	r24, 0x32	; 50
     704:	93 e0       	ldi	r25, 0x03	; 3
     706:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <strstr>
     70a:	89 2b       	or	r24, r25
     70c:	41 f4       	brne	.+16     	; 0x71e <ESP8266_connected+0x5c>
	return ESP8266_NOT_CONNECTED_TO_AP;
	else
	return ESP8266_CONNECT_UNKNOWN_ERROR;
     70e:	84 e0       	ldi	r24, 0x04	; 4
     710:	08 95       	ret

uint8_t ESP8266_connected()
{
	SendATandExpectResponse("AT+CIPSTATUS", "\r\nOK\r\n");
	if(strstr(RESPONSE_BUFFER, "STATUS:2"))
	return ESP8266_CONNECTED_TO_AP;
     712:	80 e0       	ldi	r24, 0x00	; 0
     714:	08 95       	ret
	else if(strstr(RESPONSE_BUFFER, "STATUS:3"))
	return ESP8266_CREATED_TRANSMISSION;
     716:	81 e0       	ldi	r24, 0x01	; 1
     718:	08 95       	ret
	else if(strstr(RESPONSE_BUFFER, "STATUS:4"))
	return ESP8266_TRANSMISSION_DISCONNECTED;
     71a:	82 e0       	ldi	r24, 0x02	; 2
     71c:	08 95       	ret
	else if(strstr(RESPONSE_BUFFER, "STATUS:5"))
	return ESP8266_NOT_CONNECTED_TO_AP;
     71e:	83 e0       	ldi	r24, 0x03	; 3
	else
	return ESP8266_CONNECT_UNKNOWN_ERROR;
}
     720:	08 95       	ret

00000722 <ESP8266_Start>:

uint8_t ESP8266_Start(uint8_t _ConnectionNumber, char* Domain, char* Port)
{
     722:	df 92       	push	r13
     724:	ef 92       	push	r14
     726:	ff 92       	push	r15
     728:	0f 93       	push	r16
     72a:	1f 93       	push	r17
     72c:	cf 93       	push	r28
     72e:	df 93       	push	r29
     730:	cd b7       	in	r28, 0x3d	; 61
     732:	de b7       	in	r29, 0x3e	; 62
     734:	c0 55       	subi	r28, 0x50	; 80
     736:	d1 09       	sbc	r29, r1
     738:	0f b6       	in	r0, 0x3f	; 63
     73a:	f8 94       	cli
     73c:	de bf       	out	0x3e, r29	; 62
     73e:	0f be       	out	0x3f, r0	; 63
     740:	cd bf       	out	0x3d, r28	; 61
     742:	d8 2e       	mov	r13, r24
     744:	16 2f       	mov	r17, r22
     746:	07 2f       	mov	r16, r23
     748:	f4 2e       	mov	r15, r20
     74a:	e5 2e       	mov	r14, r21
	bool _startResponse;
	char _atCommand[80];
	memset(_atCommand, 0, 60);
     74c:	fe 01       	movw	r30, r28
     74e:	31 96       	adiw	r30, 0x01	; 1
     750:	8c e3       	ldi	r24, 0x3C	; 60
     752:	df 01       	movw	r26, r30
     754:	1d 92       	st	X+, r1
     756:	8a 95       	dec	r24
     758:	e9 f7       	brne	.-6      	; 0x754 <ESP8266_Start+0x32>
	_atCommand[79] = 0;
     75a:	61 96       	adiw	r28, 0x11	; 17
     75c:	1f ae       	std	Y+63, r1	; 0x3f
     75e:	61 97       	sbiw	r28, 0x11	; 17

	if(SendATandExpectResponse("AT+CIPMUX?", "CIPMUX:0"))
     760:	63 e2       	ldi	r22, 0x23	; 35
     762:	71 e0       	ldi	r23, 0x01	; 1
     764:	8c e2       	ldi	r24, 0x2C	; 44
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
     76c:	88 23       	and	r24, r24
     76e:	a1 f0       	breq	.+40     	; 0x798 <ESP8266_Start+0x76>
	sprintf(_atCommand, "AT+CIPSTART=\"TCP\",\"%s\",%s", Domain, Port);
     770:	ef 92       	push	r14
     772:	ff 92       	push	r15
     774:	0f 93       	push	r16
     776:	1f 93       	push	r17
     778:	87 e3       	ldi	r24, 0x37	; 55
     77a:	91 e0       	ldi	r25, 0x01	; 1
     77c:	9f 93       	push	r25
     77e:	8f 93       	push	r24
     780:	ce 01       	movw	r24, r28
     782:	01 96       	adiw	r24, 0x01	; 1
     784:	9f 93       	push	r25
     786:	8f 93       	push	r24
     788:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
     78c:	0f b6       	in	r0, 0x3f	; 63
     78e:	f8 94       	cli
     790:	de bf       	out	0x3e, r29	; 62
     792:	0f be       	out	0x3f, r0	; 63
     794:	cd bf       	out	0x3d, r28	; 61
     796:	15 c0       	rjmp	.+42     	; 0x7c2 <ESP8266_Start+0xa0>
	else
	sprintf(_atCommand, "AT+CIPSTART=\"%d\",\"TCP\",\"%s\",%s", _ConnectionNumber, Domain, Port);
     798:	ef 92       	push	r14
     79a:	ff 92       	push	r15
     79c:	0f 93       	push	r16
     79e:	1f 93       	push	r17
     7a0:	1f 92       	push	r1
     7a2:	df 92       	push	r13
     7a4:	81 e5       	ldi	r24, 0x51	; 81
     7a6:	91 e0       	ldi	r25, 0x01	; 1
     7a8:	9f 93       	push	r25
     7aa:	8f 93       	push	r24
     7ac:	ce 01       	movw	r24, r28
     7ae:	01 96       	adiw	r24, 0x01	; 1
     7b0:	9f 93       	push	r25
     7b2:	8f 93       	push	r24
     7b4:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
     7b8:	0f b6       	in	r0, 0x3f	; 63
     7ba:	f8 94       	cli
     7bc:	de bf       	out	0x3e, r29	; 62
     7be:	0f be       	out	0x3f, r0	; 63
     7c0:	cd bf       	out	0x3d, r28	; 61

	_startResponse = SendATandExpectResponse(_atCommand, "CONNECT\r\n");
     7c2:	60 e7       	ldi	r22, 0x70	; 112
     7c4:	71 e0       	ldi	r23, 0x01	; 1
     7c6:	ce 01       	movw	r24, r28
     7c8:	01 96       	adiw	r24, 0x01	; 1
     7ca:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
	if(!_startResponse)
     7ce:	81 11       	cpse	r24, r1
     7d0:	06 c0       	rjmp	.+12     	; 0x7de <ESP8266_Start+0xbc>
	{
		if(Response_Status == ESP8266_RESPONSE_TIMEOUT)
     7d2:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <Response_Status>
     7d6:	82 30       	cpi	r24, 0x02	; 2
     7d8:	21 f0       	breq	.+8      	; 0x7e2 <ESP8266_Start+0xc0>
		return ESP8266_RESPONSE_TIMEOUT;
		return ESP8266_RESPONSE_ERROR;
     7da:	85 e0       	ldi	r24, 0x05	; 5
     7dc:	03 c0       	rjmp	.+6      	; 0x7e4 <ESP8266_Start+0xc2>
	}
	return ESP8266_RESPONSE_FINISHED;
     7de:	81 e0       	ldi	r24, 0x01	; 1
     7e0:	01 c0       	rjmp	.+2      	; 0x7e4 <ESP8266_Start+0xc2>

	_startResponse = SendATandExpectResponse(_atCommand, "CONNECT\r\n");
	if(!_startResponse)
	{
		if(Response_Status == ESP8266_RESPONSE_TIMEOUT)
		return ESP8266_RESPONSE_TIMEOUT;
     7e2:	82 e0       	ldi	r24, 0x02	; 2
		return ESP8266_RESPONSE_ERROR;
	}
	return ESP8266_RESPONSE_FINISHED;
}
     7e4:	c0 5b       	subi	r28, 0xB0	; 176
     7e6:	df 4f       	sbci	r29, 0xFF	; 255
     7e8:	0f b6       	in	r0, 0x3f	; 63
     7ea:	f8 94       	cli
     7ec:	de bf       	out	0x3e, r29	; 62
     7ee:	0f be       	out	0x3f, r0	; 63
     7f0:	cd bf       	out	0x3d, r28	; 61
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	1f 91       	pop	r17
     7f8:	0f 91       	pop	r16
     7fa:	ff 90       	pop	r15
     7fc:	ef 90       	pop	r14
     7fe:	df 90       	pop	r13
     800:	08 95       	ret

00000802 <ESP8266_Send>:

uint8_t ESP8266_Send(char* Data)
{
     802:	ef 92       	push	r14
     804:	ff 92       	push	r15
     806:	0f 93       	push	r16
     808:	1f 93       	push	r17
     80a:	cf 93       	push	r28
     80c:	df 93       	push	r29
     80e:	cd b7       	in	r28, 0x3d	; 61
     810:	de b7       	in	r29, 0x3e	; 62
     812:	64 97       	sbiw	r28, 0x14	; 20
     814:	0f b6       	in	r0, 0x3f	; 63
     816:	f8 94       	cli
     818:	de bf       	out	0x3e, r29	; 62
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	cd bf       	out	0x3d, r28	; 61
     81e:	8c 01       	movw	r16, r24
	char _atCommand[20];
	memset(_atCommand, 0, 20);
     820:	ce 01       	movw	r24, r28
     822:	01 96       	adiw	r24, 0x01	; 1
     824:	7c 01       	movw	r14, r24
     826:	84 e1       	ldi	r24, 0x14	; 20
     828:	f7 01       	movw	r30, r14
     82a:	11 92       	st	Z+, r1
     82c:	8a 95       	dec	r24
     82e:	e9 f7       	brne	.-6      	; 0x82a <ESP8266_Send+0x28>
	sprintf(_atCommand, "AT+CIPSEND=%d", (strlen(Data)+2));
     830:	f8 01       	movw	r30, r16
     832:	01 90       	ld	r0, Z+
     834:	00 20       	and	r0, r0
     836:	e9 f7       	brne	.-6      	; 0x832 <ESP8266_Send+0x30>
     838:	cf 01       	movw	r24, r30
     83a:	80 1b       	sub	r24, r16
     83c:	91 0b       	sbc	r25, r17
     83e:	01 96       	adiw	r24, 0x01	; 1
     840:	9f 93       	push	r25
     842:	8f 93       	push	r24
     844:	8a e7       	ldi	r24, 0x7A	; 122
     846:	91 e0       	ldi	r25, 0x01	; 1
     848:	9f 93       	push	r25
     84a:	8f 93       	push	r24
     84c:	ff 92       	push	r15
     84e:	ef 92       	push	r14
     850:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
	_atCommand[19] = 0;
     854:	1c 8a       	std	Y+20, r1	; 0x14
	SendATandExpectResponse(_atCommand, "\r\nOK\r\n>");
     856:	68 e8       	ldi	r22, 0x88	; 136
     858:	71 e0       	ldi	r23, 0x01	; 1
     85a:	c7 01       	movw	r24, r14
     85c:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
	if(!SendATandExpectResponse(Data, "\r\nSEND OK\r\n"))
     860:	60 e9       	ldi	r22, 0x90	; 144
     862:	71 e0       	ldi	r23, 0x01	; 1
     864:	c8 01       	movw	r24, r16
     866:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
     86a:	0f 90       	pop	r0
     86c:	0f 90       	pop	r0
     86e:	0f 90       	pop	r0
     870:	0f 90       	pop	r0
     872:	0f 90       	pop	r0
     874:	0f 90       	pop	r0
     876:	81 11       	cpse	r24, r1
     878:	06 c0       	rjmp	.+12     	; 0x886 <__stack+0x27>
	{
		if(Response_Status == ESP8266_RESPONSE_TIMEOUT)
     87a:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <Response_Status>
     87e:	82 30       	cpi	r24, 0x02	; 2
     880:	21 f0       	breq	.+8      	; 0x88a <__stack+0x2b>
		return ESP8266_RESPONSE_TIMEOUT;
		return ESP8266_RESPONSE_ERROR;
     882:	85 e0       	ldi	r24, 0x05	; 5
     884:	03 c0       	rjmp	.+6      	; 0x88c <__stack+0x2d>
	}
	return ESP8266_RESPONSE_FINISHED;
     886:	81 e0       	ldi	r24, 0x01	; 1
     888:	01 c0       	rjmp	.+2      	; 0x88c <__stack+0x2d>
	_atCommand[19] = 0;
	SendATandExpectResponse(_atCommand, "\r\nOK\r\n>");
	if(!SendATandExpectResponse(Data, "\r\nSEND OK\r\n"))
	{
		if(Response_Status == ESP8266_RESPONSE_TIMEOUT)
		return ESP8266_RESPONSE_TIMEOUT;
     88a:	82 e0       	ldi	r24, 0x02	; 2
		return ESP8266_RESPONSE_ERROR;
	}
	return ESP8266_RESPONSE_FINISHED;
}
     88c:	64 96       	adiw	r28, 0x14	; 20
     88e:	0f b6       	in	r0, 0x3f	; 63
     890:	f8 94       	cli
     892:	de bf       	out	0x3e, r29	; 62
     894:	0f be       	out	0x3f, r0	; 63
     896:	cd bf       	out	0x3d, r28	; 61
     898:	df 91       	pop	r29
     89a:	cf 91       	pop	r28
     89c:	1f 91       	pop	r17
     89e:	0f 91       	pop	r16
     8a0:	ff 90       	pop	r15
     8a2:	ef 90       	pop	r14
     8a4:	08 95       	ret

000008a6 <ESP8266_DataAvailable>:

int16_t ESP8266_DataAvailable()
{
	return (Counter - pointer);
     8a6:	80 91 30 03 	lds	r24, 0x0330	; 0x800330 <Counter>
     8aa:	90 91 31 03 	lds	r25, 0x0331	; 0x800331 <Counter+0x1>
     8ae:	20 91 2e 03 	lds	r18, 0x032E	; 0x80032e <pointer>
     8b2:	30 91 2f 03 	lds	r19, 0x032F	; 0x80032f <pointer+0x1>
}
     8b6:	82 1b       	sub	r24, r18
     8b8:	93 0b       	sbc	r25, r19
     8ba:	08 95       	ret

000008bc <ESP8266_DataRead>:

uint8_t ESP8266_DataRead()
{
	if(pointer < Counter)
     8bc:	20 91 2e 03 	lds	r18, 0x032E	; 0x80032e <pointer>
     8c0:	30 91 2f 03 	lds	r19, 0x032F	; 0x80032f <pointer+0x1>
     8c4:	80 91 30 03 	lds	r24, 0x0330	; 0x800330 <Counter>
     8c8:	90 91 31 03 	lds	r25, 0x0331	; 0x800331 <Counter+0x1>
     8cc:	28 17       	cp	r18, r24
     8ce:	39 07       	cpc	r19, r25
     8d0:	84 f4       	brge	.+32     	; 0x8f2 <ESP8266_DataRead+0x36>
	return RESPONSE_BUFFER[pointer++];
     8d2:	80 91 2e 03 	lds	r24, 0x032E	; 0x80032e <pointer>
     8d6:	90 91 2f 03 	lds	r25, 0x032F	; 0x80032f <pointer+0x1>
     8da:	9c 01       	movw	r18, r24
     8dc:	2f 5f       	subi	r18, 0xFF	; 255
     8de:	3f 4f       	sbci	r19, 0xFF	; 255
     8e0:	30 93 2f 03 	sts	0x032F, r19	; 0x80032f <pointer+0x1>
     8e4:	20 93 2e 03 	sts	0x032E, r18	; 0x80032e <pointer>
     8e8:	fc 01       	movw	r30, r24
     8ea:	ee 5c       	subi	r30, 0xCE	; 206
     8ec:	fc 4f       	sbci	r31, 0xFC	; 252
     8ee:	80 81       	ld	r24, Z
     8f0:	08 95       	ret
	else{
		ESP8266_Clear();
     8f2:	0e 94 10 02 	call	0x420	; 0x420 <ESP8266_Clear>
		return 0;
     8f6:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     8f8:	08 95       	ret

000008fa <Read_Data>:

uint16_t Read_Data(char* _buffer)
{
     8fa:	0f 93       	push	r16
     8fc:	1f 93       	push	r17
     8fe:	cf 93       	push	r28
     900:	df 93       	push	r29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     902:	2f ef       	ldi	r18, 0xFF	; 255
     904:	31 ee       	ldi	r19, 0xE1	; 225
     906:	44 e0       	ldi	r20, 0x04	; 4
     908:	21 50       	subi	r18, 0x01	; 1
     90a:	30 40       	sbci	r19, 0x00	; 0
     90c:	40 40       	sbci	r20, 0x00	; 0
     90e:	e1 f7       	brne	.-8      	; 0x908 <Read_Data+0xe>
     910:	00 c0       	rjmp	.+0      	; 0x912 <Read_Data+0x18>
     912:	00 00       	nop
     914:	c8 2f       	mov	r28, r24
     916:	d9 2f       	mov	r29, r25
	uint16_t len = 0;
     918:	00 e0       	ldi	r16, 0x00	; 0
     91a:	10 e0       	ldi	r17, 0x00	; 0
     91c:	05 c0       	rjmp	.+10     	; 0x928 <Read_Data+0x2e>
	_delay_ms(100);
	while(ESP8266_DataAvailable() > 0)
	_buffer[len++] = ESP8266_DataRead();
     91e:	0f 5f       	subi	r16, 0xFF	; 255
     920:	1f 4f       	sbci	r17, 0xFF	; 255
     922:	0e 94 5e 04 	call	0x8bc	; 0x8bc <ESP8266_DataRead>
     926:	89 93       	st	Y+, r24

uint16_t Read_Data(char* _buffer)
{
	uint16_t len = 0;
	_delay_ms(100);
	while(ESP8266_DataAvailable() > 0)
     928:	0e 94 53 04 	call	0x8a6	; 0x8a6 <ESP8266_DataAvailable>
     92c:	18 16       	cp	r1, r24
     92e:	19 06       	cpc	r1, r25
     930:	b4 f3       	brlt	.-20     	; 0x91e <Read_Data+0x24>
	_buffer[len++] = ESP8266_DataRead();
	return len;
}
     932:	c8 01       	movw	r24, r16
     934:	df 91       	pop	r29
     936:	cf 91       	pop	r28
     938:	1f 91       	pop	r17
     93a:	0f 91       	pop	r16
     93c:	08 95       	ret

0000093e <__vector_13>:

ISR (USART_RXC_vect)
{
     93e:	1f 92       	push	r1
     940:	0f 92       	push	r0
     942:	0f b6       	in	r0, 0x3f	; 63
     944:	0f 92       	push	r0
     946:	11 24       	eor	r1, r1
     948:	2f 93       	push	r18
     94a:	8f 93       	push	r24
     94c:	9f 93       	push	r25
     94e:	ef 93       	push	r30
     950:	ff 93       	push	r31
	uint8_t oldsrg = SREG;
     952:	2f b7       	in	r18, 0x3f	; 63
	cli();
     954:	f8 94       	cli
	RESPONSE_BUFFER[Counter] = UDR;
     956:	e0 91 30 03 	lds	r30, 0x0330	; 0x800330 <Counter>
     95a:	f0 91 31 03 	lds	r31, 0x0331	; 0x800331 <Counter+0x1>
     95e:	8c b1       	in	r24, 0x0c	; 12
     960:	ee 5c       	subi	r30, 0xCE	; 206
     962:	fc 4f       	sbci	r31, 0xFC	; 252
     964:	80 83       	st	Z, r24
	Counter++;
     966:	80 91 30 03 	lds	r24, 0x0330	; 0x800330 <Counter>
     96a:	90 91 31 03 	lds	r25, 0x0331	; 0x800331 <Counter+0x1>
     96e:	01 96       	adiw	r24, 0x01	; 1
     970:	90 93 31 03 	sts	0x0331, r25	; 0x800331 <Counter+0x1>
     974:	80 93 30 03 	sts	0x0330, r24	; 0x800330 <Counter>
	if(Counter == DEFAULT_BUFFER_SIZE){
     978:	80 91 30 03 	lds	r24, 0x0330	; 0x800330 <Counter>
     97c:	90 91 31 03 	lds	r25, 0x0331	; 0x800331 <Counter+0x1>
     980:	80 3a       	cpi	r24, 0xA0	; 160
     982:	91 05       	cpc	r25, r1
     984:	41 f4       	brne	.+16     	; 0x996 <__vector_13+0x58>
		Counter = 0; pointer = 0;
     986:	10 92 31 03 	sts	0x0331, r1	; 0x800331 <Counter+0x1>
     98a:	10 92 30 03 	sts	0x0330, r1	; 0x800330 <Counter>
     98e:	10 92 2f 03 	sts	0x032F, r1	; 0x80032f <pointer+0x1>
     992:	10 92 2e 03 	sts	0x032E, r1	; 0x80032e <pointer>
	}
	SREG = oldsrg;
     996:	2f bf       	out	0x3f, r18	; 63
}
     998:	ff 91       	pop	r31
     99a:	ef 91       	pop	r30
     99c:	9f 91       	pop	r25
     99e:	8f 91       	pop	r24
     9a0:	2f 91       	pop	r18
     9a2:	0f 90       	pop	r0
     9a4:	0f be       	out	0x3f, r0	; 63
     9a6:	0f 90       	pop	r0
     9a8:	1f 90       	pop	r1
     9aa:	18 95       	reti

000009ac <main>:

int main(void)
{
     9ac:	cf 93       	push	r28
     9ae:	df 93       	push	r29
     9b0:	cd b7       	in	r28, 0x3d	; 61
     9b2:	de b7       	in	r29, 0x3e	; 62
     9b4:	ce 5e       	subi	r28, 0xEE	; 238
     9b6:	d2 40       	sbci	r29, 0x02	; 2
     9b8:	0f b6       	in	r0, 0x3f	; 63
     9ba:	f8 94       	cli
     9bc:	de bf       	out	0x3e, r29	; 62
     9be:	0f be       	out	0x3f, r0	; 63
     9c0:	cd bf       	out	0x3d, r28	; 61
	
	DDRD |=(1<<3);     /* Define PD3 Pin as a Output */
     9c2:	8b 9a       	sbi	0x11, 3	; 17
	PORTD |=(1<<3);
     9c4:	93 9a       	sbi	0x12, 3	; 18
	char _buffer5[150];
	
	
	uint8_t Connect_Status;

	USART_Init(9600);			/* Initiate USART with 115200 baud rate */
     9c6:	60 e8       	ldi	r22, 0x80	; 128
     9c8:	75 e2       	ldi	r23, 0x25	; 37
     9ca:	80 e0       	ldi	r24, 0x00	; 0
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	0e 94 ca 00 	call	0x194	; 0x194 <USART_Init>
	sei();					/* Start global interrupt */
     9d2:	78 94       	sei

	while(!ESP8266_Begin());
     9d4:	0e 94 ba 02 	call	0x574	; 0x574 <ESP8266_Begin>
     9d8:	88 23       	and	r24, r24
     9da:	e1 f3       	breq	.-8      	; 0x9d4 <main+0x28>
	ESP8266_WIFIMode(BOTH_STATION_AND_ACCESPOINT);/* 3 = Both (AP and STA) */
     9dc:	83 e0       	ldi	r24, 0x03	; 3
     9de:	0e 94 c9 02 	call	0x592	; 0x592 <ESP8266_WIFIMode>
	ESP8266_ConnectionMode(SINGLE);		/* 0 = Single; 1 = Multi */
     9e2:	80 e0       	ldi	r24, 0x00	; 0
     9e4:	0e 94 85 02 	call	0x50a	; 0x50a <ESP8266_ConnectionMode>
	ESP8266_ApplicationMode(NORMAL);	/* 0 = Normal Mode; 1 = Transperant Mode */
     9e8:	80 e0       	ldi	r24, 0x00	; 0
     9ea:	0e 94 50 02 	call	0x4a0	; 0x4a0 <ESP8266_ApplicationMode>
	if(ESP8266_connected() == ESP8266_NOT_CONNECTED_TO_AP)
     9ee:	0e 94 61 03 	call	0x6c2	; 0x6c2 <ESP8266_connected>
     9f2:	83 30       	cpi	r24, 0x03	; 3
     9f4:	31 f4       	brne	.+12     	; 0xa02 <main+0x56>
	ESP8266_JoinAccessPoint(SSID, PASSWORD);
     9f6:	6c e9       	ldi	r22, 0x9C	; 156
     9f8:	71 e0       	ldi	r23, 0x01	; 1
     9fa:	85 ea       	ldi	r24, 0xA5	; 165
     9fc:	91 e0       	ldi	r25, 0x01	; 1
     9fe:	0e 94 fe 02 	call	0x5fc	; 0x5fc <ESP8266_JoinAccessPoint>
	ESP8266_Start(0, DOMAIN, PORT);
     a02:	43 eb       	ldi	r20, 0xB3	; 179
     a04:	51 e0       	ldi	r21, 0x01	; 1
     a06:	67 eb       	ldi	r22, 0xB7	; 183
     a08:	71 e0       	ldi	r23, 0x01	; 1
     a0a:	80 e0       	ldi	r24, 0x00	; 0
     a0c:	0e 94 91 03 	call	0x722	; 0x722 <ESP8266_Start>
		ESP8266_Start(0, DOMAIN, PORT);
		

		
		#ifdef RECEIVE_DATA
		memset(_buffer, 0, 150);
     a10:	0f 2e       	mov	r0, r31
     a12:	f6 e9       	ldi	r31, 0x96	; 150
     a14:	5f 2e       	mov	r5, r31
     a16:	f0 2d       	mov	r31, r0
     a18:	ce 01       	movw	r24, r28
     a1a:	01 96       	adiw	r24, 0x01	; 1
     a1c:	4c 01       	movw	r8, r24
		sprintf(_buffer, "POST https://juice-buddy-d4fd4.firebaseio.com/Orders/lastOrder.json");
		ESP8266_Send(_buffer);
		Read_Data(_buffer);
		 char * order_id = strtok(_buffer, " ");
		
		memset(_buffer2, 0, 150);
     a1e:	5e 01       	movw	r10, r28
     a20:	97 e9       	ldi	r25, 0x97	; 151
     a22:	a9 0e       	add	r10, r25
     a24:	b1 1c       	adc	r11, r1
		sprintf(_buffer2, "POST https://juice-buddy-d4fd4.firebaseio.com/Orders/%s/Apple.json",order_id);
     a26:	0f 2e       	mov	r0, r31
     a28:	fe e1       	ldi	r31, 0x1E	; 30
     a2a:	6f 2e       	mov	r6, r31
     a2c:	f2 e0       	ldi	r31, 0x02	; 2
     a2e:	7f 2e       	mov	r7, r31
     a30:	f0 2d       	mov	r31, r0
		   char * token2 = strtok(_buffer2, " ");
		   
		SendATandExpectResponse(token2, "OK");
		
		
		memset(_buffer3, 0, 150);
     a32:	6e 01       	movw	r12, r28
     a34:	e3 ed       	ldi	r30, 0xD3	; 211
     a36:	ce 1a       	sub	r12, r30
     a38:	ee ef       	ldi	r30, 0xFE	; 254
     a3a:	de 0a       	sbc	r13, r30
		Read_Data(_buffer3);
		 char * token3 = strtok(_buffer3, " ");
		 SendATandExpectResponse(token3, "OK");
		
		
		memset(_buffer4, 0, 150);
     a3c:	7e 01       	movw	r14, r28
     a3e:	fd e3       	ldi	r31, 0x3D	; 61
     a40:	ef 1a       	sub	r14, r31
     a42:	fe ef       	ldi	r31, 0xFE	; 254
     a44:	ff 0a       	sbc	r15, r31
		ESP8266_Send(_buffer4);
		Read_Data(_buffer4);
		 char * token4 = strtok(_buffer4, " ");
		 SendATandExpectResponse(token4, "OK");
		
		memset(_buffer5, 0, 150);
     a46:	8e 01       	movw	r16, r28
     a48:	07 5a       	subi	r16, 0xA7	; 167
     a4a:	1d 4f       	sbci	r17, 0xFD	; 253
	ESP8266_JoinAccessPoint(SSID, PASSWORD);
	ESP8266_Start(0, DOMAIN, PORT);
	while(1)
	{
		
		Connect_Status = ESP8266_connected();
     a4c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <ESP8266_connected>
		if(Connect_Status == ESP8266_NOT_CONNECTED_TO_AP)
     a50:	83 30       	cpi	r24, 0x03	; 3
     a52:	39 f4       	brne	.+14     	; 0xa62 <main+0xb6>
		ESP8266_JoinAccessPoint(SSID, PASSWORD);
     a54:	6c e9       	ldi	r22, 0x9C	; 156
     a56:	71 e0       	ldi	r23, 0x01	; 1
     a58:	85 ea       	ldi	r24, 0xA5	; 165
     a5a:	91 e0       	ldi	r25, 0x01	; 1
     a5c:	0e 94 fe 02 	call	0x5fc	; 0x5fc <ESP8266_JoinAccessPoint>
     a60:	09 c0       	rjmp	.+18     	; 0xa74 <main+0xc8>
		if(Connect_Status == ESP8266_TRANSMISSION_DISCONNECTED)
     a62:	82 30       	cpi	r24, 0x02	; 2
     a64:	39 f4       	brne	.+14     	; 0xa74 <main+0xc8>
		ESP8266_Start(0, DOMAIN, PORT);
     a66:	43 eb       	ldi	r20, 0xB3	; 179
     a68:	51 e0       	ldi	r21, 0x01	; 1
     a6a:	67 eb       	ldi	r22, 0xB7	; 183
     a6c:	71 e0       	ldi	r23, 0x01	; 1
     a6e:	80 e0       	ldi	r24, 0x00	; 0
     a70:	0e 94 91 03 	call	0x722	; 0x722 <ESP8266_Start>
		

		
		#ifdef RECEIVE_DATA
		memset(_buffer, 0, 150);
     a74:	f4 01       	movw	r30, r8
     a76:	25 2d       	mov	r18, r5
     a78:	11 92       	st	Z+, r1
     a7a:	2a 95       	dec	r18
     a7c:	e9 f7       	brne	.-6      	; 0xa78 <main+0xcc>
		sprintf(_buffer, "POST https://juice-buddy-d4fd4.firebaseio.com/Orders/lastOrder.json");
     a7e:	84 e4       	ldi	r24, 0x44	; 68
     a80:	e8 ed       	ldi	r30, 0xD8	; 216
     a82:	f1 e0       	ldi	r31, 0x01	; 1
     a84:	d4 01       	movw	r26, r8
     a86:	01 90       	ld	r0, Z+
     a88:	0d 92       	st	X+, r0
     a8a:	8a 95       	dec	r24
     a8c:	e1 f7       	brne	.-8      	; 0xa86 <main+0xda>
		ESP8266_Send(_buffer);
     a8e:	c4 01       	movw	r24, r8
     a90:	0e 94 01 04 	call	0x802	; 0x802 <ESP8266_Send>
		Read_Data(_buffer);
     a94:	c4 01       	movw	r24, r8
     a96:	0e 94 7d 04 	call	0x8fa	; 0x8fa <Read_Data>
		 char * order_id = strtok(_buffer, " ");
     a9a:	6c e1       	ldi	r22, 0x1C	; 28
     a9c:	72 e0       	ldi	r23, 0x02	; 2
     a9e:	c4 01       	movw	r24, r8
     aa0:	0e 94 cd 0c 	call	0x199a	; 0x199a <strtok>
     aa4:	48 2e       	mov	r4, r24
     aa6:	39 2e       	mov	r3, r25
		
		memset(_buffer2, 0, 150);
     aa8:	f5 01       	movw	r30, r10
     aaa:	25 2d       	mov	r18, r5
     aac:	11 92       	st	Z+, r1
     aae:	2a 95       	dec	r18
     ab0:	e9 f7       	brne	.-6      	; 0xaac <main+0x100>
		sprintf(_buffer2, "POST https://juice-buddy-d4fd4.firebaseio.com/Orders/%s/Apple.json",order_id);
     ab2:	9f 93       	push	r25
     ab4:	8f 93       	push	r24
     ab6:	7f 92       	push	r7
     ab8:	6f 92       	push	r6
     aba:	bf 92       	push	r11
     abc:	af 92       	push	r10
     abe:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
		ESP8266_Send(_buffer2);
     ac2:	c5 01       	movw	r24, r10
     ac4:	0e 94 01 04 	call	0x802	; 0x802 <ESP8266_Send>
		Read_Data(_buffer2);
     ac8:	c5 01       	movw	r24, r10
     aca:	0e 94 7d 04 	call	0x8fa	; 0x8fa <Read_Data>
		   char * token2 = strtok(_buffer2, " ");
     ace:	6c e1       	ldi	r22, 0x1C	; 28
     ad0:	72 e0       	ldi	r23, 0x02	; 2
     ad2:	c5 01       	movw	r24, r10
     ad4:	0e 94 cd 0c 	call	0x199a	; 0x199a <strtok>
		   
		SendATandExpectResponse(token2, "OK");
     ad8:	62 e8       	ldi	r22, 0x82	; 130
     ada:	70 e0       	ldi	r23, 0x00	; 0
     adc:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
		
		
		memset(_buffer3, 0, 150);
     ae0:	f6 01       	movw	r30, r12
     ae2:	25 2d       	mov	r18, r5
     ae4:	11 92       	st	Z+, r1
     ae6:	2a 95       	dec	r18
     ae8:	e9 f7       	brne	.-6      	; 0xae4 <main+0x138>
		sprintf(_buffer3, "POST https://juice-buddy-d4fd4.firebaseio.com/Orders/%s/Ice.json",order_id);
     aea:	3f 92       	push	r3
     aec:	4f 92       	push	r4
     aee:	81 e6       	ldi	r24, 0x61	; 97
     af0:	92 e0       	ldi	r25, 0x02	; 2
     af2:	9f 93       	push	r25
     af4:	8f 93       	push	r24
     af6:	df 92       	push	r13
     af8:	cf 92       	push	r12
     afa:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
		ESP8266_Send(_buffer3);
     afe:	c6 01       	movw	r24, r12
     b00:	0e 94 01 04 	call	0x802	; 0x802 <ESP8266_Send>
		Read_Data(_buffer3);
     b04:	c6 01       	movw	r24, r12
     b06:	0e 94 7d 04 	call	0x8fa	; 0x8fa <Read_Data>
		 char * token3 = strtok(_buffer3, " ");
     b0a:	6c e1       	ldi	r22, 0x1C	; 28
     b0c:	72 e0       	ldi	r23, 0x02	; 2
     b0e:	c6 01       	movw	r24, r12
     b10:	0e 94 cd 0c 	call	0x199a	; 0x199a <strtok>
		 SendATandExpectResponse(token3, "OK");
     b14:	62 e8       	ldi	r22, 0x82	; 130
     b16:	70 e0       	ldi	r23, 0x00	; 0
     b18:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
		
		
		memset(_buffer4, 0, 150);
     b1c:	f7 01       	movw	r30, r14
     b1e:	25 2d       	mov	r18, r5
     b20:	11 92       	st	Z+, r1
     b22:	2a 95       	dec	r18
     b24:	e9 f7       	brne	.-6      	; 0xb20 <main+0x174>
		sprintf(_buffer4, "POST https://juice-buddy-d4fd4.firebaseio.com/Orders/%s/Lime.json",order_id);
     b26:	3f 92       	push	r3
     b28:	4f 92       	push	r4
     b2a:	82 ea       	ldi	r24, 0xA2	; 162
     b2c:	92 e0       	ldi	r25, 0x02	; 2
     b2e:	9f 93       	push	r25
     b30:	8f 93       	push	r24
     b32:	ff 92       	push	r15
     b34:	ef 92       	push	r14
     b36:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
		ESP8266_Send(_buffer4);
     b3a:	c7 01       	movw	r24, r14
     b3c:	0e 94 01 04 	call	0x802	; 0x802 <ESP8266_Send>
		Read_Data(_buffer4);
     b40:	c7 01       	movw	r24, r14
     b42:	0e 94 7d 04 	call	0x8fa	; 0x8fa <Read_Data>
		 char * token4 = strtok(_buffer4, " ");
     b46:	6c e1       	ldi	r22, 0x1C	; 28
     b48:	72 e0       	ldi	r23, 0x02	; 2
     b4a:	c7 01       	movw	r24, r14
     b4c:	0e 94 cd 0c 	call	0x199a	; 0x199a <strtok>
		 SendATandExpectResponse(token4, "OK");
     b50:	62 e8       	ldi	r22, 0x82	; 130
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
		
		memset(_buffer5, 0, 150);
     b58:	f8 01       	movw	r30, r16
     b5a:	25 2d       	mov	r18, r5
     b5c:	11 92       	st	Z+, r1
     b5e:	2a 95       	dec	r18
     b60:	e9 f7       	brne	.-6      	; 0xb5c <main+0x1b0>
		sprintf(_buffer5, "POST https://juice-buddy-d4fd4.firebaseio.com/Orders/%s/Orange.json",order_id);
     b62:	3f 92       	push	r3
     b64:	4f 92       	push	r4
     b66:	84 ee       	ldi	r24, 0xE4	; 228
     b68:	92 e0       	ldi	r25, 0x02	; 2
     b6a:	9f 93       	push	r25
     b6c:	8f 93       	push	r24
     b6e:	1f 93       	push	r17
     b70:	0f 93       	push	r16
     b72:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <sprintf>
		ESP8266_Send(_buffer5);
     b76:	c8 01       	movw	r24, r16
     b78:	0e 94 01 04 	call	0x802	; 0x802 <ESP8266_Send>
		Read_Data(_buffer5);
     b7c:	c8 01       	movw	r24, r16
     b7e:	0e 94 7d 04 	call	0x8fa	; 0x8fa <Read_Data>
		 char * token5 = strtok(_buffer5, " ");
     b82:	6c e1       	ldi	r22, 0x1C	; 28
     b84:	72 e0       	ldi	r23, 0x02	; 2
     b86:	c8 01       	movw	r24, r16
     b88:	0e 94 cd 0c 	call	0x199a	; 0x199a <strtok>
		 SendATandExpectResponse(token5, "OK");
     b8c:	62 e8       	ldi	r22, 0x82	; 130
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	0e 94 39 02 	call	0x472	; 0x472 <SendATandExpectResponse>
     b94:	ff ef       	ldi	r31, 0xFF	; 255
     b96:	2b e4       	ldi	r18, 0x4B	; 75
     b98:	8d e1       	ldi	r24, 0x1D	; 29
     b9a:	f1 50       	subi	r31, 0x01	; 1
     b9c:	20 40       	sbci	r18, 0x00	; 0
     b9e:	80 40       	sbci	r24, 0x00	; 0
     ba0:	e1 f7       	brne	.-8      	; 0xb9a <main+0x1ee>
     ba2:	00 c0       	rjmp	.+0      	; 0xba4 <main+0x1f8>
     ba4:	00 00       	nop
     ba6:	0f b6       	in	r0, 0x3f	; 63
     ba8:	f8 94       	cli
     baa:	de bf       	out	0x3e, r29	; 62
     bac:	0f be       	out	0x3f, r0	; 63
     bae:	cd bf       	out	0x3d, r28	; 61
     bb0:	4d cf       	rjmp	.-358    	; 0xa4c <main+0xa0>

00000bb2 <__subsf3>:
     bb2:	50 58       	subi	r21, 0x80	; 128

00000bb4 <__addsf3>:
     bb4:	bb 27       	eor	r27, r27
     bb6:	aa 27       	eor	r26, r26
     bb8:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <__addsf3x>
     bbc:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_round>
     bc0:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_pscA>
     bc4:	38 f0       	brcs	.+14     	; 0xbd4 <__addsf3+0x20>
     bc6:	0e 94 3b 07 	call	0xe76	; 0xe76 <__fp_pscB>
     bca:	20 f0       	brcs	.+8      	; 0xbd4 <__addsf3+0x20>
     bcc:	39 f4       	brne	.+14     	; 0xbdc <__addsf3+0x28>
     bce:	9f 3f       	cpi	r25, 0xFF	; 255
     bd0:	19 f4       	brne	.+6      	; 0xbd8 <__addsf3+0x24>
     bd2:	26 f4       	brtc	.+8      	; 0xbdc <__addsf3+0x28>
     bd4:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_nan>
     bd8:	0e f4       	brtc	.+2      	; 0xbdc <__addsf3+0x28>
     bda:	e0 95       	com	r30
     bdc:	e7 fb       	bst	r30, 7
     bde:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>

00000be2 <__addsf3x>:
     be2:	e9 2f       	mov	r30, r25
     be4:	0e 94 53 07 	call	0xea6	; 0xea6 <__fp_split3>
     be8:	58 f3       	brcs	.-42     	; 0xbc0 <__addsf3+0xc>
     bea:	ba 17       	cp	r27, r26
     bec:	62 07       	cpc	r22, r18
     bee:	73 07       	cpc	r23, r19
     bf0:	84 07       	cpc	r24, r20
     bf2:	95 07       	cpc	r25, r21
     bf4:	20 f0       	brcs	.+8      	; 0xbfe <__addsf3x+0x1c>
     bf6:	79 f4       	brne	.+30     	; 0xc16 <__addsf3x+0x34>
     bf8:	a6 f5       	brtc	.+104    	; 0xc62 <__addsf3x+0x80>
     bfa:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_zero>
     bfe:	0e f4       	brtc	.+2      	; 0xc02 <__addsf3x+0x20>
     c00:	e0 95       	com	r30
     c02:	0b 2e       	mov	r0, r27
     c04:	ba 2f       	mov	r27, r26
     c06:	a0 2d       	mov	r26, r0
     c08:	0b 01       	movw	r0, r22
     c0a:	b9 01       	movw	r22, r18
     c0c:	90 01       	movw	r18, r0
     c0e:	0c 01       	movw	r0, r24
     c10:	ca 01       	movw	r24, r20
     c12:	a0 01       	movw	r20, r0
     c14:	11 24       	eor	r1, r1
     c16:	ff 27       	eor	r31, r31
     c18:	59 1b       	sub	r21, r25
     c1a:	99 f0       	breq	.+38     	; 0xc42 <__addsf3x+0x60>
     c1c:	59 3f       	cpi	r21, 0xF9	; 249
     c1e:	50 f4       	brcc	.+20     	; 0xc34 <__addsf3x+0x52>
     c20:	50 3e       	cpi	r21, 0xE0	; 224
     c22:	68 f1       	brcs	.+90     	; 0xc7e <__addsf3x+0x9c>
     c24:	1a 16       	cp	r1, r26
     c26:	f0 40       	sbci	r31, 0x00	; 0
     c28:	a2 2f       	mov	r26, r18
     c2a:	23 2f       	mov	r18, r19
     c2c:	34 2f       	mov	r19, r20
     c2e:	44 27       	eor	r20, r20
     c30:	58 5f       	subi	r21, 0xF8	; 248
     c32:	f3 cf       	rjmp	.-26     	; 0xc1a <__addsf3x+0x38>
     c34:	46 95       	lsr	r20
     c36:	37 95       	ror	r19
     c38:	27 95       	ror	r18
     c3a:	a7 95       	ror	r26
     c3c:	f0 40       	sbci	r31, 0x00	; 0
     c3e:	53 95       	inc	r21
     c40:	c9 f7       	brne	.-14     	; 0xc34 <__addsf3x+0x52>
     c42:	7e f4       	brtc	.+30     	; 0xc62 <__addsf3x+0x80>
     c44:	1f 16       	cp	r1, r31
     c46:	ba 0b       	sbc	r27, r26
     c48:	62 0b       	sbc	r22, r18
     c4a:	73 0b       	sbc	r23, r19
     c4c:	84 0b       	sbc	r24, r20
     c4e:	ba f0       	brmi	.+46     	; 0xc7e <__addsf3x+0x9c>
     c50:	91 50       	subi	r25, 0x01	; 1
     c52:	a1 f0       	breq	.+40     	; 0xc7c <__addsf3x+0x9a>
     c54:	ff 0f       	add	r31, r31
     c56:	bb 1f       	adc	r27, r27
     c58:	66 1f       	adc	r22, r22
     c5a:	77 1f       	adc	r23, r23
     c5c:	88 1f       	adc	r24, r24
     c5e:	c2 f7       	brpl	.-16     	; 0xc50 <__addsf3x+0x6e>
     c60:	0e c0       	rjmp	.+28     	; 0xc7e <__addsf3x+0x9c>
     c62:	ba 0f       	add	r27, r26
     c64:	62 1f       	adc	r22, r18
     c66:	73 1f       	adc	r23, r19
     c68:	84 1f       	adc	r24, r20
     c6a:	48 f4       	brcc	.+18     	; 0xc7e <__addsf3x+0x9c>
     c6c:	87 95       	ror	r24
     c6e:	77 95       	ror	r23
     c70:	67 95       	ror	r22
     c72:	b7 95       	ror	r27
     c74:	f7 95       	ror	r31
     c76:	9e 3f       	cpi	r25, 0xFE	; 254
     c78:	08 f0       	brcs	.+2      	; 0xc7c <__addsf3x+0x9a>
     c7a:	b0 cf       	rjmp	.-160    	; 0xbdc <__addsf3+0x28>
     c7c:	93 95       	inc	r25
     c7e:	88 0f       	add	r24, r24
     c80:	08 f0       	brcs	.+2      	; 0xc84 <__addsf3x+0xa2>
     c82:	99 27       	eor	r25, r25
     c84:	ee 0f       	add	r30, r30
     c86:	97 95       	ror	r25
     c88:	87 95       	ror	r24
     c8a:	08 95       	ret

00000c8c <__divsf3>:
     c8c:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <__divsf3x>
     c90:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_round>
     c94:	0e 94 3b 07 	call	0xe76	; 0xe76 <__fp_pscB>
     c98:	58 f0       	brcs	.+22     	; 0xcb0 <__divsf3+0x24>
     c9a:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_pscA>
     c9e:	40 f0       	brcs	.+16     	; 0xcb0 <__divsf3+0x24>
     ca0:	29 f4       	brne	.+10     	; 0xcac <__divsf3+0x20>
     ca2:	5f 3f       	cpi	r21, 0xFF	; 255
     ca4:	29 f0       	breq	.+10     	; 0xcb0 <__divsf3+0x24>
     ca6:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>
     caa:	51 11       	cpse	r21, r1
     cac:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>
     cb0:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_nan>

00000cb4 <__divsf3x>:
     cb4:	0e 94 53 07 	call	0xea6	; 0xea6 <__fp_split3>
     cb8:	68 f3       	brcs	.-38     	; 0xc94 <__divsf3+0x8>

00000cba <__divsf3_pse>:
     cba:	99 23       	and	r25, r25
     cbc:	b1 f3       	breq	.-20     	; 0xcaa <__divsf3+0x1e>
     cbe:	55 23       	and	r21, r21
     cc0:	91 f3       	breq	.-28     	; 0xca6 <__divsf3+0x1a>
     cc2:	95 1b       	sub	r25, r21
     cc4:	55 0b       	sbc	r21, r21
     cc6:	bb 27       	eor	r27, r27
     cc8:	aa 27       	eor	r26, r26
     cca:	62 17       	cp	r22, r18
     ccc:	73 07       	cpc	r23, r19
     cce:	84 07       	cpc	r24, r20
     cd0:	38 f0       	brcs	.+14     	; 0xce0 <__divsf3_pse+0x26>
     cd2:	9f 5f       	subi	r25, 0xFF	; 255
     cd4:	5f 4f       	sbci	r21, 0xFF	; 255
     cd6:	22 0f       	add	r18, r18
     cd8:	33 1f       	adc	r19, r19
     cda:	44 1f       	adc	r20, r20
     cdc:	aa 1f       	adc	r26, r26
     cde:	a9 f3       	breq	.-22     	; 0xcca <__divsf3_pse+0x10>
     ce0:	35 d0       	rcall	.+106    	; 0xd4c <__divsf3_pse+0x92>
     ce2:	0e 2e       	mov	r0, r30
     ce4:	3a f0       	brmi	.+14     	; 0xcf4 <__divsf3_pse+0x3a>
     ce6:	e0 e8       	ldi	r30, 0x80	; 128
     ce8:	32 d0       	rcall	.+100    	; 0xd4e <__divsf3_pse+0x94>
     cea:	91 50       	subi	r25, 0x01	; 1
     cec:	50 40       	sbci	r21, 0x00	; 0
     cee:	e6 95       	lsr	r30
     cf0:	00 1c       	adc	r0, r0
     cf2:	ca f7       	brpl	.-14     	; 0xce6 <__divsf3_pse+0x2c>
     cf4:	2b d0       	rcall	.+86     	; 0xd4c <__divsf3_pse+0x92>
     cf6:	fe 2f       	mov	r31, r30
     cf8:	29 d0       	rcall	.+82     	; 0xd4c <__divsf3_pse+0x92>
     cfa:	66 0f       	add	r22, r22
     cfc:	77 1f       	adc	r23, r23
     cfe:	88 1f       	adc	r24, r24
     d00:	bb 1f       	adc	r27, r27
     d02:	26 17       	cp	r18, r22
     d04:	37 07       	cpc	r19, r23
     d06:	48 07       	cpc	r20, r24
     d08:	ab 07       	cpc	r26, r27
     d0a:	b0 e8       	ldi	r27, 0x80	; 128
     d0c:	09 f0       	breq	.+2      	; 0xd10 <__divsf3_pse+0x56>
     d0e:	bb 0b       	sbc	r27, r27
     d10:	80 2d       	mov	r24, r0
     d12:	bf 01       	movw	r22, r30
     d14:	ff 27       	eor	r31, r31
     d16:	93 58       	subi	r25, 0x83	; 131
     d18:	5f 4f       	sbci	r21, 0xFF	; 255
     d1a:	3a f0       	brmi	.+14     	; 0xd2a <__divsf3_pse+0x70>
     d1c:	9e 3f       	cpi	r25, 0xFE	; 254
     d1e:	51 05       	cpc	r21, r1
     d20:	78 f0       	brcs	.+30     	; 0xd40 <__divsf3_pse+0x86>
     d22:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>
     d26:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>
     d2a:	5f 3f       	cpi	r21, 0xFF	; 255
     d2c:	e4 f3       	brlt	.-8      	; 0xd26 <__divsf3_pse+0x6c>
     d2e:	98 3e       	cpi	r25, 0xE8	; 232
     d30:	d4 f3       	brlt	.-12     	; 0xd26 <__divsf3_pse+0x6c>
     d32:	86 95       	lsr	r24
     d34:	77 95       	ror	r23
     d36:	67 95       	ror	r22
     d38:	b7 95       	ror	r27
     d3a:	f7 95       	ror	r31
     d3c:	9f 5f       	subi	r25, 0xFF	; 255
     d3e:	c9 f7       	brne	.-14     	; 0xd32 <__divsf3_pse+0x78>
     d40:	88 0f       	add	r24, r24
     d42:	91 1d       	adc	r25, r1
     d44:	96 95       	lsr	r25
     d46:	87 95       	ror	r24
     d48:	97 f9       	bld	r25, 7
     d4a:	08 95       	ret
     d4c:	e1 e0       	ldi	r30, 0x01	; 1
     d4e:	66 0f       	add	r22, r22
     d50:	77 1f       	adc	r23, r23
     d52:	88 1f       	adc	r24, r24
     d54:	bb 1f       	adc	r27, r27
     d56:	62 17       	cp	r22, r18
     d58:	73 07       	cpc	r23, r19
     d5a:	84 07       	cpc	r24, r20
     d5c:	ba 07       	cpc	r27, r26
     d5e:	20 f0       	brcs	.+8      	; 0xd68 <__divsf3_pse+0xae>
     d60:	62 1b       	sub	r22, r18
     d62:	73 0b       	sbc	r23, r19
     d64:	84 0b       	sbc	r24, r20
     d66:	ba 0b       	sbc	r27, r26
     d68:	ee 1f       	adc	r30, r30
     d6a:	88 f7       	brcc	.-30     	; 0xd4e <__divsf3_pse+0x94>
     d6c:	e0 95       	com	r30
     d6e:	08 95       	ret

00000d70 <__fixsfsi>:
     d70:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__fixunssfsi>
     d74:	68 94       	set
     d76:	b1 11       	cpse	r27, r1
     d78:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>
     d7c:	08 95       	ret

00000d7e <__fixunssfsi>:
     d7e:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__fp_splitA>
     d82:	88 f0       	brcs	.+34     	; 0xda6 <__fixunssfsi+0x28>
     d84:	9f 57       	subi	r25, 0x7F	; 127
     d86:	98 f0       	brcs	.+38     	; 0xdae <__fixunssfsi+0x30>
     d88:	b9 2f       	mov	r27, r25
     d8a:	99 27       	eor	r25, r25
     d8c:	b7 51       	subi	r27, 0x17	; 23
     d8e:	b0 f0       	brcs	.+44     	; 0xdbc <__fixunssfsi+0x3e>
     d90:	e1 f0       	breq	.+56     	; 0xdca <__fixunssfsi+0x4c>
     d92:	66 0f       	add	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	88 1f       	adc	r24, r24
     d98:	99 1f       	adc	r25, r25
     d9a:	1a f0       	brmi	.+6      	; 0xda2 <__fixunssfsi+0x24>
     d9c:	ba 95       	dec	r27
     d9e:	c9 f7       	brne	.-14     	; 0xd92 <__fixunssfsi+0x14>
     da0:	14 c0       	rjmp	.+40     	; 0xdca <__fixunssfsi+0x4c>
     da2:	b1 30       	cpi	r27, 0x01	; 1
     da4:	91 f0       	breq	.+36     	; 0xdca <__fixunssfsi+0x4c>
     da6:	0e 94 75 07 	call	0xeea	; 0xeea <__fp_zero>
     daa:	b1 e0       	ldi	r27, 0x01	; 1
     dac:	08 95       	ret
     dae:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_zero>
     db2:	67 2f       	mov	r22, r23
     db4:	78 2f       	mov	r23, r24
     db6:	88 27       	eor	r24, r24
     db8:	b8 5f       	subi	r27, 0xF8	; 248
     dba:	39 f0       	breq	.+14     	; 0xdca <__fixunssfsi+0x4c>
     dbc:	b9 3f       	cpi	r27, 0xF9	; 249
     dbe:	cc f3       	brlt	.-14     	; 0xdb2 <__fixunssfsi+0x34>
     dc0:	86 95       	lsr	r24
     dc2:	77 95       	ror	r23
     dc4:	67 95       	ror	r22
     dc6:	b3 95       	inc	r27
     dc8:	d9 f7       	brne	.-10     	; 0xdc0 <__fixunssfsi+0x42>
     dca:	3e f4       	brtc	.+14     	; 0xdda <__fixunssfsi+0x5c>
     dcc:	90 95       	com	r25
     dce:	80 95       	com	r24
     dd0:	70 95       	com	r23
     dd2:	61 95       	neg	r22
     dd4:	7f 4f       	sbci	r23, 0xFF	; 255
     dd6:	8f 4f       	sbci	r24, 0xFF	; 255
     dd8:	9f 4f       	sbci	r25, 0xFF	; 255
     dda:	08 95       	ret

00000ddc <__floatunsisf>:
     ddc:	e8 94       	clt
     dde:	09 c0       	rjmp	.+18     	; 0xdf2 <__floatsisf+0x12>

00000de0 <__floatsisf>:
     de0:	97 fb       	bst	r25, 7
     de2:	3e f4       	brtc	.+14     	; 0xdf2 <__floatsisf+0x12>
     de4:	90 95       	com	r25
     de6:	80 95       	com	r24
     de8:	70 95       	com	r23
     dea:	61 95       	neg	r22
     dec:	7f 4f       	sbci	r23, 0xFF	; 255
     dee:	8f 4f       	sbci	r24, 0xFF	; 255
     df0:	9f 4f       	sbci	r25, 0xFF	; 255
     df2:	99 23       	and	r25, r25
     df4:	a9 f0       	breq	.+42     	; 0xe20 <__floatsisf+0x40>
     df6:	f9 2f       	mov	r31, r25
     df8:	96 e9       	ldi	r25, 0x96	; 150
     dfa:	bb 27       	eor	r27, r27
     dfc:	93 95       	inc	r25
     dfe:	f6 95       	lsr	r31
     e00:	87 95       	ror	r24
     e02:	77 95       	ror	r23
     e04:	67 95       	ror	r22
     e06:	b7 95       	ror	r27
     e08:	f1 11       	cpse	r31, r1
     e0a:	f8 cf       	rjmp	.-16     	; 0xdfc <__floatsisf+0x1c>
     e0c:	fa f4       	brpl	.+62     	; 0xe4c <__floatsisf+0x6c>
     e0e:	bb 0f       	add	r27, r27
     e10:	11 f4       	brne	.+4      	; 0xe16 <__floatsisf+0x36>
     e12:	60 ff       	sbrs	r22, 0
     e14:	1b c0       	rjmp	.+54     	; 0xe4c <__floatsisf+0x6c>
     e16:	6f 5f       	subi	r22, 0xFF	; 255
     e18:	7f 4f       	sbci	r23, 0xFF	; 255
     e1a:	8f 4f       	sbci	r24, 0xFF	; 255
     e1c:	9f 4f       	sbci	r25, 0xFF	; 255
     e1e:	16 c0       	rjmp	.+44     	; 0xe4c <__floatsisf+0x6c>
     e20:	88 23       	and	r24, r24
     e22:	11 f0       	breq	.+4      	; 0xe28 <__floatsisf+0x48>
     e24:	96 e9       	ldi	r25, 0x96	; 150
     e26:	11 c0       	rjmp	.+34     	; 0xe4a <__floatsisf+0x6a>
     e28:	77 23       	and	r23, r23
     e2a:	21 f0       	breq	.+8      	; 0xe34 <__floatsisf+0x54>
     e2c:	9e e8       	ldi	r25, 0x8E	; 142
     e2e:	87 2f       	mov	r24, r23
     e30:	76 2f       	mov	r23, r22
     e32:	05 c0       	rjmp	.+10     	; 0xe3e <__floatsisf+0x5e>
     e34:	66 23       	and	r22, r22
     e36:	71 f0       	breq	.+28     	; 0xe54 <__floatsisf+0x74>
     e38:	96 e8       	ldi	r25, 0x86	; 134
     e3a:	86 2f       	mov	r24, r22
     e3c:	70 e0       	ldi	r23, 0x00	; 0
     e3e:	60 e0       	ldi	r22, 0x00	; 0
     e40:	2a f0       	brmi	.+10     	; 0xe4c <__floatsisf+0x6c>
     e42:	9a 95       	dec	r25
     e44:	66 0f       	add	r22, r22
     e46:	77 1f       	adc	r23, r23
     e48:	88 1f       	adc	r24, r24
     e4a:	da f7       	brpl	.-10     	; 0xe42 <__floatsisf+0x62>
     e4c:	88 0f       	add	r24, r24
     e4e:	96 95       	lsr	r25
     e50:	87 95       	ror	r24
     e52:	97 f9       	bld	r25, 7
     e54:	08 95       	ret

00000e56 <__fp_inf>:
     e56:	97 f9       	bld	r25, 7
     e58:	9f 67       	ori	r25, 0x7F	; 127
     e5a:	80 e8       	ldi	r24, 0x80	; 128
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	60 e0       	ldi	r22, 0x00	; 0
     e60:	08 95       	ret

00000e62 <__fp_nan>:
     e62:	9f ef       	ldi	r25, 0xFF	; 255
     e64:	80 ec       	ldi	r24, 0xC0	; 192
     e66:	08 95       	ret

00000e68 <__fp_pscA>:
     e68:	00 24       	eor	r0, r0
     e6a:	0a 94       	dec	r0
     e6c:	16 16       	cp	r1, r22
     e6e:	17 06       	cpc	r1, r23
     e70:	18 06       	cpc	r1, r24
     e72:	09 06       	cpc	r0, r25
     e74:	08 95       	ret

00000e76 <__fp_pscB>:
     e76:	00 24       	eor	r0, r0
     e78:	0a 94       	dec	r0
     e7a:	12 16       	cp	r1, r18
     e7c:	13 06       	cpc	r1, r19
     e7e:	14 06       	cpc	r1, r20
     e80:	05 06       	cpc	r0, r21
     e82:	08 95       	ret

00000e84 <__fp_round>:
     e84:	09 2e       	mov	r0, r25
     e86:	03 94       	inc	r0
     e88:	00 0c       	add	r0, r0
     e8a:	11 f4       	brne	.+4      	; 0xe90 <__fp_round+0xc>
     e8c:	88 23       	and	r24, r24
     e8e:	52 f0       	brmi	.+20     	; 0xea4 <__fp_round+0x20>
     e90:	bb 0f       	add	r27, r27
     e92:	40 f4       	brcc	.+16     	; 0xea4 <__fp_round+0x20>
     e94:	bf 2b       	or	r27, r31
     e96:	11 f4       	brne	.+4      	; 0xe9c <__fp_round+0x18>
     e98:	60 ff       	sbrs	r22, 0
     e9a:	04 c0       	rjmp	.+8      	; 0xea4 <__fp_round+0x20>
     e9c:	6f 5f       	subi	r22, 0xFF	; 255
     e9e:	7f 4f       	sbci	r23, 0xFF	; 255
     ea0:	8f 4f       	sbci	r24, 0xFF	; 255
     ea2:	9f 4f       	sbci	r25, 0xFF	; 255
     ea4:	08 95       	ret

00000ea6 <__fp_split3>:
     ea6:	57 fd       	sbrc	r21, 7
     ea8:	90 58       	subi	r25, 0x80	; 128
     eaa:	44 0f       	add	r20, r20
     eac:	55 1f       	adc	r21, r21
     eae:	59 f0       	breq	.+22     	; 0xec6 <__fp_splitA+0x10>
     eb0:	5f 3f       	cpi	r21, 0xFF	; 255
     eb2:	71 f0       	breq	.+28     	; 0xed0 <__fp_splitA+0x1a>
     eb4:	47 95       	ror	r20

00000eb6 <__fp_splitA>:
     eb6:	88 0f       	add	r24, r24
     eb8:	97 fb       	bst	r25, 7
     eba:	99 1f       	adc	r25, r25
     ebc:	61 f0       	breq	.+24     	; 0xed6 <__fp_splitA+0x20>
     ebe:	9f 3f       	cpi	r25, 0xFF	; 255
     ec0:	79 f0       	breq	.+30     	; 0xee0 <__fp_splitA+0x2a>
     ec2:	87 95       	ror	r24
     ec4:	08 95       	ret
     ec6:	12 16       	cp	r1, r18
     ec8:	13 06       	cpc	r1, r19
     eca:	14 06       	cpc	r1, r20
     ecc:	55 1f       	adc	r21, r21
     ece:	f2 cf       	rjmp	.-28     	; 0xeb4 <__fp_split3+0xe>
     ed0:	46 95       	lsr	r20
     ed2:	f1 df       	rcall	.-30     	; 0xeb6 <__fp_splitA>
     ed4:	08 c0       	rjmp	.+16     	; 0xee6 <__fp_splitA+0x30>
     ed6:	16 16       	cp	r1, r22
     ed8:	17 06       	cpc	r1, r23
     eda:	18 06       	cpc	r1, r24
     edc:	99 1f       	adc	r25, r25
     ede:	f1 cf       	rjmp	.-30     	; 0xec2 <__fp_splitA+0xc>
     ee0:	86 95       	lsr	r24
     ee2:	71 05       	cpc	r23, r1
     ee4:	61 05       	cpc	r22, r1
     ee6:	08 94       	sec
     ee8:	08 95       	ret

00000eea <__fp_zero>:
     eea:	e8 94       	clt

00000eec <__fp_szero>:
     eec:	bb 27       	eor	r27, r27
     eee:	66 27       	eor	r22, r22
     ef0:	77 27       	eor	r23, r23
     ef2:	cb 01       	movw	r24, r22
     ef4:	97 f9       	bld	r25, 7
     ef6:	08 95       	ret

00000ef8 <__mulsf3>:
     ef8:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3x>
     efc:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_round>
     f00:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_pscA>
     f04:	38 f0       	brcs	.+14     	; 0xf14 <__mulsf3+0x1c>
     f06:	0e 94 3b 07 	call	0xe76	; 0xe76 <__fp_pscB>
     f0a:	20 f0       	brcs	.+8      	; 0xf14 <__mulsf3+0x1c>
     f0c:	95 23       	and	r25, r21
     f0e:	11 f0       	breq	.+4      	; 0xf14 <__mulsf3+0x1c>
     f10:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>
     f14:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_nan>
     f18:	11 24       	eor	r1, r1
     f1a:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>

00000f1e <__mulsf3x>:
     f1e:	0e 94 53 07 	call	0xea6	; 0xea6 <__fp_split3>
     f22:	70 f3       	brcs	.-36     	; 0xf00 <__mulsf3+0x8>

00000f24 <__mulsf3_pse>:
     f24:	95 9f       	mul	r25, r21
     f26:	c1 f3       	breq	.-16     	; 0xf18 <__mulsf3+0x20>
     f28:	95 0f       	add	r25, r21
     f2a:	50 e0       	ldi	r21, 0x00	; 0
     f2c:	55 1f       	adc	r21, r21
     f2e:	62 9f       	mul	r22, r18
     f30:	f0 01       	movw	r30, r0
     f32:	72 9f       	mul	r23, r18
     f34:	bb 27       	eor	r27, r27
     f36:	f0 0d       	add	r31, r0
     f38:	b1 1d       	adc	r27, r1
     f3a:	63 9f       	mul	r22, r19
     f3c:	aa 27       	eor	r26, r26
     f3e:	f0 0d       	add	r31, r0
     f40:	b1 1d       	adc	r27, r1
     f42:	aa 1f       	adc	r26, r26
     f44:	64 9f       	mul	r22, r20
     f46:	66 27       	eor	r22, r22
     f48:	b0 0d       	add	r27, r0
     f4a:	a1 1d       	adc	r26, r1
     f4c:	66 1f       	adc	r22, r22
     f4e:	82 9f       	mul	r24, r18
     f50:	22 27       	eor	r18, r18
     f52:	b0 0d       	add	r27, r0
     f54:	a1 1d       	adc	r26, r1
     f56:	62 1f       	adc	r22, r18
     f58:	73 9f       	mul	r23, r19
     f5a:	b0 0d       	add	r27, r0
     f5c:	a1 1d       	adc	r26, r1
     f5e:	62 1f       	adc	r22, r18
     f60:	83 9f       	mul	r24, r19
     f62:	a0 0d       	add	r26, r0
     f64:	61 1d       	adc	r22, r1
     f66:	22 1f       	adc	r18, r18
     f68:	74 9f       	mul	r23, r20
     f6a:	33 27       	eor	r19, r19
     f6c:	a0 0d       	add	r26, r0
     f6e:	61 1d       	adc	r22, r1
     f70:	23 1f       	adc	r18, r19
     f72:	84 9f       	mul	r24, r20
     f74:	60 0d       	add	r22, r0
     f76:	21 1d       	adc	r18, r1
     f78:	82 2f       	mov	r24, r18
     f7a:	76 2f       	mov	r23, r22
     f7c:	6a 2f       	mov	r22, r26
     f7e:	11 24       	eor	r1, r1
     f80:	9f 57       	subi	r25, 0x7F	; 127
     f82:	50 40       	sbci	r21, 0x00	; 0
     f84:	9a f0       	brmi	.+38     	; 0xfac <__mulsf3_pse+0x88>
     f86:	f1 f0       	breq	.+60     	; 0xfc4 <__mulsf3_pse+0xa0>
     f88:	88 23       	and	r24, r24
     f8a:	4a f0       	brmi	.+18     	; 0xf9e <__mulsf3_pse+0x7a>
     f8c:	ee 0f       	add	r30, r30
     f8e:	ff 1f       	adc	r31, r31
     f90:	bb 1f       	adc	r27, r27
     f92:	66 1f       	adc	r22, r22
     f94:	77 1f       	adc	r23, r23
     f96:	88 1f       	adc	r24, r24
     f98:	91 50       	subi	r25, 0x01	; 1
     f9a:	50 40       	sbci	r21, 0x00	; 0
     f9c:	a9 f7       	brne	.-22     	; 0xf88 <__mulsf3_pse+0x64>
     f9e:	9e 3f       	cpi	r25, 0xFE	; 254
     fa0:	51 05       	cpc	r21, r1
     fa2:	80 f0       	brcs	.+32     	; 0xfc4 <__mulsf3_pse+0xa0>
     fa4:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>
     fa8:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>
     fac:	5f 3f       	cpi	r21, 0xFF	; 255
     fae:	e4 f3       	brlt	.-8      	; 0xfa8 <__mulsf3_pse+0x84>
     fb0:	98 3e       	cpi	r25, 0xE8	; 232
     fb2:	d4 f3       	brlt	.-12     	; 0xfa8 <__mulsf3_pse+0x84>
     fb4:	86 95       	lsr	r24
     fb6:	77 95       	ror	r23
     fb8:	67 95       	ror	r22
     fba:	b7 95       	ror	r27
     fbc:	f7 95       	ror	r31
     fbe:	e7 95       	ror	r30
     fc0:	9f 5f       	subi	r25, 0xFF	; 255
     fc2:	c1 f7       	brne	.-16     	; 0xfb4 <__mulsf3_pse+0x90>
     fc4:	fe 2b       	or	r31, r30
     fc6:	88 0f       	add	r24, r24
     fc8:	91 1d       	adc	r25, r1
     fca:	96 95       	lsr	r25
     fcc:	87 95       	ror	r24
     fce:	97 f9       	bld	r25, 7
     fd0:	08 95       	ret

00000fd2 <round>:
     fd2:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__fp_splitA>
     fd6:	e8 f0       	brcs	.+58     	; 0x1012 <round+0x40>
     fd8:	9e 37       	cpi	r25, 0x7E	; 126
     fda:	e8 f0       	brcs	.+58     	; 0x1016 <round+0x44>
     fdc:	96 39       	cpi	r25, 0x96	; 150
     fde:	b8 f4       	brcc	.+46     	; 0x100e <round+0x3c>
     fe0:	9e 38       	cpi	r25, 0x8E	; 142
     fe2:	48 f4       	brcc	.+18     	; 0xff6 <round+0x24>
     fe4:	67 2f       	mov	r22, r23
     fe6:	78 2f       	mov	r23, r24
     fe8:	88 27       	eor	r24, r24
     fea:	98 5f       	subi	r25, 0xF8	; 248
     fec:	f9 cf       	rjmp	.-14     	; 0xfe0 <round+0xe>
     fee:	86 95       	lsr	r24
     ff0:	77 95       	ror	r23
     ff2:	67 95       	ror	r22
     ff4:	93 95       	inc	r25
     ff6:	95 39       	cpi	r25, 0x95	; 149
     ff8:	d0 f3       	brcs	.-12     	; 0xfee <round+0x1c>
     ffa:	b6 2f       	mov	r27, r22
     ffc:	b1 70       	andi	r27, 0x01	; 1
     ffe:	6b 0f       	add	r22, r27
    1000:	71 1d       	adc	r23, r1
    1002:	81 1d       	adc	r24, r1
    1004:	20 f4       	brcc	.+8      	; 0x100e <round+0x3c>
    1006:	87 95       	ror	r24
    1008:	77 95       	ror	r23
    100a:	67 95       	ror	r22
    100c:	93 95       	inc	r25
    100e:	0c 94 0d 08 	jmp	0x101a	; 0x101a <__fp_mintl>
    1012:	0c 94 28 08 	jmp	0x1050	; 0x1050 <__fp_mpack>
    1016:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>

0000101a <__fp_mintl>:
    101a:	88 23       	and	r24, r24
    101c:	71 f4       	brne	.+28     	; 0x103a <__fp_mintl+0x20>
    101e:	77 23       	and	r23, r23
    1020:	21 f0       	breq	.+8      	; 0x102a <__fp_mintl+0x10>
    1022:	98 50       	subi	r25, 0x08	; 8
    1024:	87 2b       	or	r24, r23
    1026:	76 2f       	mov	r23, r22
    1028:	07 c0       	rjmp	.+14     	; 0x1038 <__fp_mintl+0x1e>
    102a:	66 23       	and	r22, r22
    102c:	11 f4       	brne	.+4      	; 0x1032 <__fp_mintl+0x18>
    102e:	99 27       	eor	r25, r25
    1030:	0d c0       	rjmp	.+26     	; 0x104c <__fp_mintl+0x32>
    1032:	90 51       	subi	r25, 0x10	; 16
    1034:	86 2b       	or	r24, r22
    1036:	70 e0       	ldi	r23, 0x00	; 0
    1038:	60 e0       	ldi	r22, 0x00	; 0
    103a:	2a f0       	brmi	.+10     	; 0x1046 <__fp_mintl+0x2c>
    103c:	9a 95       	dec	r25
    103e:	66 0f       	add	r22, r22
    1040:	77 1f       	adc	r23, r23
    1042:	88 1f       	adc	r24, r24
    1044:	da f7       	brpl	.-10     	; 0x103c <__fp_mintl+0x22>
    1046:	88 0f       	add	r24, r24
    1048:	96 95       	lsr	r25
    104a:	87 95       	ror	r24
    104c:	97 f9       	bld	r25, 7
    104e:	08 95       	ret

00001050 <__fp_mpack>:
    1050:	9f 3f       	cpi	r25, 0xFF	; 255
    1052:	31 f0       	breq	.+12     	; 0x1060 <__fp_mpack_finite+0xc>

00001054 <__fp_mpack_finite>:
    1054:	91 50       	subi	r25, 0x01	; 1
    1056:	20 f4       	brcc	.+8      	; 0x1060 <__fp_mpack_finite+0xc>
    1058:	87 95       	ror	r24
    105a:	77 95       	ror	r23
    105c:	67 95       	ror	r22
    105e:	b7 95       	ror	r27
    1060:	88 0f       	add	r24, r24
    1062:	91 1d       	adc	r25, r1
    1064:	96 95       	lsr	r25
    1066:	87 95       	ror	r24
    1068:	97 f9       	bld	r25, 7
    106a:	08 95       	ret

0000106c <vfprintf>:
    106c:	a0 e1       	ldi	r26, 0x10	; 16
    106e:	b0 e0       	ldi	r27, 0x00	; 0
    1070:	ec e3       	ldi	r30, 0x3C	; 60
    1072:	f8 e0       	ldi	r31, 0x08	; 8
    1074:	0c 94 b3 0b 	jmp	0x1766	; 0x1766 <__prologue_saves__>
    1078:	7c 01       	movw	r14, r24
    107a:	1b 01       	movw	r2, r22
    107c:	6a 01       	movw	r12, r20
    107e:	fc 01       	movw	r30, r24
    1080:	17 82       	std	Z+7, r1	; 0x07
    1082:	16 82       	std	Z+6, r1	; 0x06
    1084:	83 81       	ldd	r24, Z+3	; 0x03
    1086:	81 ff       	sbrs	r24, 1
    1088:	44 c3       	rjmp	.+1672   	; 0x1712 <vfprintf+0x6a6>
    108a:	9e 01       	movw	r18, r28
    108c:	2f 5f       	subi	r18, 0xFF	; 255
    108e:	3f 4f       	sbci	r19, 0xFF	; 255
    1090:	39 01       	movw	r6, r18
    1092:	f7 01       	movw	r30, r14
    1094:	93 81       	ldd	r25, Z+3	; 0x03
    1096:	f1 01       	movw	r30, r2
    1098:	93 fd       	sbrc	r25, 3
    109a:	85 91       	lpm	r24, Z+
    109c:	93 ff       	sbrs	r25, 3
    109e:	81 91       	ld	r24, Z+
    10a0:	1f 01       	movw	r2, r30
    10a2:	88 23       	and	r24, r24
    10a4:	09 f4       	brne	.+2      	; 0x10a8 <vfprintf+0x3c>
    10a6:	31 c3       	rjmp	.+1634   	; 0x170a <vfprintf+0x69e>
    10a8:	85 32       	cpi	r24, 0x25	; 37
    10aa:	39 f4       	brne	.+14     	; 0x10ba <vfprintf+0x4e>
    10ac:	93 fd       	sbrc	r25, 3
    10ae:	85 91       	lpm	r24, Z+
    10b0:	93 ff       	sbrs	r25, 3
    10b2:	81 91       	ld	r24, Z+
    10b4:	1f 01       	movw	r2, r30
    10b6:	85 32       	cpi	r24, 0x25	; 37
    10b8:	39 f4       	brne	.+14     	; 0x10c8 <vfprintf+0x5c>
    10ba:	b7 01       	movw	r22, r14
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    10c2:	56 01       	movw	r10, r12
    10c4:	65 01       	movw	r12, r10
    10c6:	e5 cf       	rjmp	.-54     	; 0x1092 <vfprintf+0x26>
    10c8:	10 e0       	ldi	r17, 0x00	; 0
    10ca:	51 2c       	mov	r5, r1
    10cc:	91 2c       	mov	r9, r1
    10ce:	ff e1       	ldi	r31, 0x1F	; 31
    10d0:	f9 15       	cp	r31, r9
    10d2:	d8 f0       	brcs	.+54     	; 0x110a <vfprintf+0x9e>
    10d4:	8b 32       	cpi	r24, 0x2B	; 43
    10d6:	79 f0       	breq	.+30     	; 0x10f6 <vfprintf+0x8a>
    10d8:	38 f4       	brcc	.+14     	; 0x10e8 <vfprintf+0x7c>
    10da:	80 32       	cpi	r24, 0x20	; 32
    10dc:	79 f0       	breq	.+30     	; 0x10fc <vfprintf+0x90>
    10de:	83 32       	cpi	r24, 0x23	; 35
    10e0:	a1 f4       	brne	.+40     	; 0x110a <vfprintf+0x9e>
    10e2:	f9 2d       	mov	r31, r9
    10e4:	f0 61       	ori	r31, 0x10	; 16
    10e6:	2e c0       	rjmp	.+92     	; 0x1144 <vfprintf+0xd8>
    10e8:	8d 32       	cpi	r24, 0x2D	; 45
    10ea:	61 f0       	breq	.+24     	; 0x1104 <vfprintf+0x98>
    10ec:	80 33       	cpi	r24, 0x30	; 48
    10ee:	69 f4       	brne	.+26     	; 0x110a <vfprintf+0x9e>
    10f0:	29 2d       	mov	r18, r9
    10f2:	21 60       	ori	r18, 0x01	; 1
    10f4:	2d c0       	rjmp	.+90     	; 0x1150 <vfprintf+0xe4>
    10f6:	39 2d       	mov	r19, r9
    10f8:	32 60       	ori	r19, 0x02	; 2
    10fa:	93 2e       	mov	r9, r19
    10fc:	89 2d       	mov	r24, r9
    10fe:	84 60       	ori	r24, 0x04	; 4
    1100:	98 2e       	mov	r9, r24
    1102:	2a c0       	rjmp	.+84     	; 0x1158 <vfprintf+0xec>
    1104:	e9 2d       	mov	r30, r9
    1106:	e8 60       	ori	r30, 0x08	; 8
    1108:	15 c0       	rjmp	.+42     	; 0x1134 <vfprintf+0xc8>
    110a:	97 fc       	sbrc	r9, 7
    110c:	2d c0       	rjmp	.+90     	; 0x1168 <vfprintf+0xfc>
    110e:	20 ed       	ldi	r18, 0xD0	; 208
    1110:	28 0f       	add	r18, r24
    1112:	2a 30       	cpi	r18, 0x0A	; 10
    1114:	88 f4       	brcc	.+34     	; 0x1138 <vfprintf+0xcc>
    1116:	96 fe       	sbrs	r9, 6
    1118:	06 c0       	rjmp	.+12     	; 0x1126 <vfprintf+0xba>
    111a:	3a e0       	ldi	r19, 0x0A	; 10
    111c:	13 9f       	mul	r17, r19
    111e:	20 0d       	add	r18, r0
    1120:	11 24       	eor	r1, r1
    1122:	12 2f       	mov	r17, r18
    1124:	19 c0       	rjmp	.+50     	; 0x1158 <vfprintf+0xec>
    1126:	8a e0       	ldi	r24, 0x0A	; 10
    1128:	58 9e       	mul	r5, r24
    112a:	20 0d       	add	r18, r0
    112c:	11 24       	eor	r1, r1
    112e:	52 2e       	mov	r5, r18
    1130:	e9 2d       	mov	r30, r9
    1132:	e0 62       	ori	r30, 0x20	; 32
    1134:	9e 2e       	mov	r9, r30
    1136:	10 c0       	rjmp	.+32     	; 0x1158 <vfprintf+0xec>
    1138:	8e 32       	cpi	r24, 0x2E	; 46
    113a:	31 f4       	brne	.+12     	; 0x1148 <vfprintf+0xdc>
    113c:	96 fc       	sbrc	r9, 6
    113e:	e5 c2       	rjmp	.+1482   	; 0x170a <vfprintf+0x69e>
    1140:	f9 2d       	mov	r31, r9
    1142:	f0 64       	ori	r31, 0x40	; 64
    1144:	9f 2e       	mov	r9, r31
    1146:	08 c0       	rjmp	.+16     	; 0x1158 <vfprintf+0xec>
    1148:	8c 36       	cpi	r24, 0x6C	; 108
    114a:	21 f4       	brne	.+8      	; 0x1154 <vfprintf+0xe8>
    114c:	29 2d       	mov	r18, r9
    114e:	20 68       	ori	r18, 0x80	; 128
    1150:	92 2e       	mov	r9, r18
    1152:	02 c0       	rjmp	.+4      	; 0x1158 <vfprintf+0xec>
    1154:	88 36       	cpi	r24, 0x68	; 104
    1156:	41 f4       	brne	.+16     	; 0x1168 <vfprintf+0xfc>
    1158:	f1 01       	movw	r30, r2
    115a:	93 fd       	sbrc	r25, 3
    115c:	85 91       	lpm	r24, Z+
    115e:	93 ff       	sbrs	r25, 3
    1160:	81 91       	ld	r24, Z+
    1162:	1f 01       	movw	r2, r30
    1164:	81 11       	cpse	r24, r1
    1166:	b3 cf       	rjmp	.-154    	; 0x10ce <vfprintf+0x62>
    1168:	9b eb       	ldi	r25, 0xBB	; 187
    116a:	98 0f       	add	r25, r24
    116c:	93 30       	cpi	r25, 0x03	; 3
    116e:	20 f4       	brcc	.+8      	; 0x1178 <vfprintf+0x10c>
    1170:	99 2d       	mov	r25, r9
    1172:	90 61       	ori	r25, 0x10	; 16
    1174:	80 5e       	subi	r24, 0xE0	; 224
    1176:	07 c0       	rjmp	.+14     	; 0x1186 <vfprintf+0x11a>
    1178:	9b e9       	ldi	r25, 0x9B	; 155
    117a:	98 0f       	add	r25, r24
    117c:	93 30       	cpi	r25, 0x03	; 3
    117e:	08 f0       	brcs	.+2      	; 0x1182 <vfprintf+0x116>
    1180:	66 c1       	rjmp	.+716    	; 0x144e <vfprintf+0x3e2>
    1182:	99 2d       	mov	r25, r9
    1184:	9f 7e       	andi	r25, 0xEF	; 239
    1186:	96 ff       	sbrs	r25, 6
    1188:	16 e0       	ldi	r17, 0x06	; 6
    118a:	9f 73       	andi	r25, 0x3F	; 63
    118c:	99 2e       	mov	r9, r25
    118e:	85 36       	cpi	r24, 0x65	; 101
    1190:	19 f4       	brne	.+6      	; 0x1198 <vfprintf+0x12c>
    1192:	90 64       	ori	r25, 0x40	; 64
    1194:	99 2e       	mov	r9, r25
    1196:	08 c0       	rjmp	.+16     	; 0x11a8 <vfprintf+0x13c>
    1198:	86 36       	cpi	r24, 0x66	; 102
    119a:	21 f4       	brne	.+8      	; 0x11a4 <vfprintf+0x138>
    119c:	39 2f       	mov	r19, r25
    119e:	30 68       	ori	r19, 0x80	; 128
    11a0:	93 2e       	mov	r9, r19
    11a2:	02 c0       	rjmp	.+4      	; 0x11a8 <vfprintf+0x13c>
    11a4:	11 11       	cpse	r17, r1
    11a6:	11 50       	subi	r17, 0x01	; 1
    11a8:	97 fe       	sbrs	r9, 7
    11aa:	07 c0       	rjmp	.+14     	; 0x11ba <vfprintf+0x14e>
    11ac:	1c 33       	cpi	r17, 0x3C	; 60
    11ae:	50 f4       	brcc	.+20     	; 0x11c4 <vfprintf+0x158>
    11b0:	44 24       	eor	r4, r4
    11b2:	43 94       	inc	r4
    11b4:	41 0e       	add	r4, r17
    11b6:	27 e0       	ldi	r18, 0x07	; 7
    11b8:	0b c0       	rjmp	.+22     	; 0x11d0 <vfprintf+0x164>
    11ba:	18 30       	cpi	r17, 0x08	; 8
    11bc:	38 f0       	brcs	.+14     	; 0x11cc <vfprintf+0x160>
    11be:	27 e0       	ldi	r18, 0x07	; 7
    11c0:	17 e0       	ldi	r17, 0x07	; 7
    11c2:	05 c0       	rjmp	.+10     	; 0x11ce <vfprintf+0x162>
    11c4:	27 e0       	ldi	r18, 0x07	; 7
    11c6:	9c e3       	ldi	r25, 0x3C	; 60
    11c8:	49 2e       	mov	r4, r25
    11ca:	02 c0       	rjmp	.+4      	; 0x11d0 <vfprintf+0x164>
    11cc:	21 2f       	mov	r18, r17
    11ce:	41 2c       	mov	r4, r1
    11d0:	56 01       	movw	r10, r12
    11d2:	84 e0       	ldi	r24, 0x04	; 4
    11d4:	a8 0e       	add	r10, r24
    11d6:	b1 1c       	adc	r11, r1
    11d8:	f6 01       	movw	r30, r12
    11da:	60 81       	ld	r22, Z
    11dc:	71 81       	ldd	r23, Z+1	; 0x01
    11de:	82 81       	ldd	r24, Z+2	; 0x02
    11e0:	93 81       	ldd	r25, Z+3	; 0x03
    11e2:	04 2d       	mov	r16, r4
    11e4:	a3 01       	movw	r20, r6
    11e6:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <__ftoa_engine>
    11ea:	6c 01       	movw	r12, r24
    11ec:	f9 81       	ldd	r31, Y+1	; 0x01
    11ee:	fc 87       	std	Y+12, r31	; 0x0c
    11f0:	f0 ff       	sbrs	r31, 0
    11f2:	02 c0       	rjmp	.+4      	; 0x11f8 <vfprintf+0x18c>
    11f4:	f3 ff       	sbrs	r31, 3
    11f6:	06 c0       	rjmp	.+12     	; 0x1204 <vfprintf+0x198>
    11f8:	91 fc       	sbrc	r9, 1
    11fa:	06 c0       	rjmp	.+12     	; 0x1208 <vfprintf+0x19c>
    11fc:	92 fe       	sbrs	r9, 2
    11fe:	06 c0       	rjmp	.+12     	; 0x120c <vfprintf+0x1a0>
    1200:	00 e2       	ldi	r16, 0x20	; 32
    1202:	05 c0       	rjmp	.+10     	; 0x120e <vfprintf+0x1a2>
    1204:	0d e2       	ldi	r16, 0x2D	; 45
    1206:	03 c0       	rjmp	.+6      	; 0x120e <vfprintf+0x1a2>
    1208:	0b e2       	ldi	r16, 0x2B	; 43
    120a:	01 c0       	rjmp	.+2      	; 0x120e <vfprintf+0x1a2>
    120c:	00 e0       	ldi	r16, 0x00	; 0
    120e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1210:	8c 70       	andi	r24, 0x0C	; 12
    1212:	19 f0       	breq	.+6      	; 0x121a <vfprintf+0x1ae>
    1214:	01 11       	cpse	r16, r1
    1216:	5a c2       	rjmp	.+1204   	; 0x16cc <vfprintf+0x660>
    1218:	9b c2       	rjmp	.+1334   	; 0x1750 <vfprintf+0x6e4>
    121a:	97 fe       	sbrs	r9, 7
    121c:	10 c0       	rjmp	.+32     	; 0x123e <vfprintf+0x1d2>
    121e:	4c 0c       	add	r4, r12
    1220:	fc 85       	ldd	r31, Y+12	; 0x0c
    1222:	f4 ff       	sbrs	r31, 4
    1224:	04 c0       	rjmp	.+8      	; 0x122e <vfprintf+0x1c2>
    1226:	8a 81       	ldd	r24, Y+2	; 0x02
    1228:	81 33       	cpi	r24, 0x31	; 49
    122a:	09 f4       	brne	.+2      	; 0x122e <vfprintf+0x1c2>
    122c:	4a 94       	dec	r4
    122e:	14 14       	cp	r1, r4
    1230:	74 f5       	brge	.+92     	; 0x128e <vfprintf+0x222>
    1232:	28 e0       	ldi	r18, 0x08	; 8
    1234:	24 15       	cp	r18, r4
    1236:	78 f5       	brcc	.+94     	; 0x1296 <vfprintf+0x22a>
    1238:	88 e0       	ldi	r24, 0x08	; 8
    123a:	48 2e       	mov	r4, r24
    123c:	2c c0       	rjmp	.+88     	; 0x1296 <vfprintf+0x22a>
    123e:	96 fc       	sbrc	r9, 6
    1240:	2a c0       	rjmp	.+84     	; 0x1296 <vfprintf+0x22a>
    1242:	81 2f       	mov	r24, r17
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	8c 15       	cp	r24, r12
    1248:	9d 05       	cpc	r25, r13
    124a:	9c f0       	brlt	.+38     	; 0x1272 <vfprintf+0x206>
    124c:	3c ef       	ldi	r19, 0xFC	; 252
    124e:	c3 16       	cp	r12, r19
    1250:	3f ef       	ldi	r19, 0xFF	; 255
    1252:	d3 06       	cpc	r13, r19
    1254:	74 f0       	brlt	.+28     	; 0x1272 <vfprintf+0x206>
    1256:	89 2d       	mov	r24, r9
    1258:	80 68       	ori	r24, 0x80	; 128
    125a:	98 2e       	mov	r9, r24
    125c:	0a c0       	rjmp	.+20     	; 0x1272 <vfprintf+0x206>
    125e:	e2 e0       	ldi	r30, 0x02	; 2
    1260:	f0 e0       	ldi	r31, 0x00	; 0
    1262:	ec 0f       	add	r30, r28
    1264:	fd 1f       	adc	r31, r29
    1266:	e1 0f       	add	r30, r17
    1268:	f1 1d       	adc	r31, r1
    126a:	80 81       	ld	r24, Z
    126c:	80 33       	cpi	r24, 0x30	; 48
    126e:	19 f4       	brne	.+6      	; 0x1276 <vfprintf+0x20a>
    1270:	11 50       	subi	r17, 0x01	; 1
    1272:	11 11       	cpse	r17, r1
    1274:	f4 cf       	rjmp	.-24     	; 0x125e <vfprintf+0x1f2>
    1276:	97 fe       	sbrs	r9, 7
    1278:	0e c0       	rjmp	.+28     	; 0x1296 <vfprintf+0x22a>
    127a:	44 24       	eor	r4, r4
    127c:	43 94       	inc	r4
    127e:	41 0e       	add	r4, r17
    1280:	81 2f       	mov	r24, r17
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	c8 16       	cp	r12, r24
    1286:	d9 06       	cpc	r13, r25
    1288:	2c f4       	brge	.+10     	; 0x1294 <vfprintf+0x228>
    128a:	1c 19       	sub	r17, r12
    128c:	04 c0       	rjmp	.+8      	; 0x1296 <vfprintf+0x22a>
    128e:	44 24       	eor	r4, r4
    1290:	43 94       	inc	r4
    1292:	01 c0       	rjmp	.+2      	; 0x1296 <vfprintf+0x22a>
    1294:	10 e0       	ldi	r17, 0x00	; 0
    1296:	97 fe       	sbrs	r9, 7
    1298:	06 c0       	rjmp	.+12     	; 0x12a6 <vfprintf+0x23a>
    129a:	1c 14       	cp	r1, r12
    129c:	1d 04       	cpc	r1, r13
    129e:	34 f4       	brge	.+12     	; 0x12ac <vfprintf+0x240>
    12a0:	c6 01       	movw	r24, r12
    12a2:	01 96       	adiw	r24, 0x01	; 1
    12a4:	05 c0       	rjmp	.+10     	; 0x12b0 <vfprintf+0x244>
    12a6:	85 e0       	ldi	r24, 0x05	; 5
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	02 c0       	rjmp	.+4      	; 0x12b0 <vfprintf+0x244>
    12ac:	81 e0       	ldi	r24, 0x01	; 1
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	01 11       	cpse	r16, r1
    12b2:	01 96       	adiw	r24, 0x01	; 1
    12b4:	11 23       	and	r17, r17
    12b6:	31 f0       	breq	.+12     	; 0x12c4 <vfprintf+0x258>
    12b8:	21 2f       	mov	r18, r17
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	2f 5f       	subi	r18, 0xFF	; 255
    12be:	3f 4f       	sbci	r19, 0xFF	; 255
    12c0:	82 0f       	add	r24, r18
    12c2:	93 1f       	adc	r25, r19
    12c4:	25 2d       	mov	r18, r5
    12c6:	30 e0       	ldi	r19, 0x00	; 0
    12c8:	82 17       	cp	r24, r18
    12ca:	93 07       	cpc	r25, r19
    12cc:	14 f4       	brge	.+4      	; 0x12d2 <vfprintf+0x266>
    12ce:	58 1a       	sub	r5, r24
    12d0:	01 c0       	rjmp	.+2      	; 0x12d4 <vfprintf+0x268>
    12d2:	51 2c       	mov	r5, r1
    12d4:	89 2d       	mov	r24, r9
    12d6:	89 70       	andi	r24, 0x09	; 9
    12d8:	49 f4       	brne	.+18     	; 0x12ec <vfprintf+0x280>
    12da:	55 20       	and	r5, r5
    12dc:	39 f0       	breq	.+14     	; 0x12ec <vfprintf+0x280>
    12de:	b7 01       	movw	r22, r14
    12e0:	80 e2       	ldi	r24, 0x20	; 32
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    12e8:	5a 94       	dec	r5
    12ea:	f7 cf       	rjmp	.-18     	; 0x12da <vfprintf+0x26e>
    12ec:	00 23       	and	r16, r16
    12ee:	29 f0       	breq	.+10     	; 0x12fa <vfprintf+0x28e>
    12f0:	b7 01       	movw	r22, r14
    12f2:	80 2f       	mov	r24, r16
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    12fa:	93 fc       	sbrc	r9, 3
    12fc:	09 c0       	rjmp	.+18     	; 0x1310 <vfprintf+0x2a4>
    12fe:	55 20       	and	r5, r5
    1300:	39 f0       	breq	.+14     	; 0x1310 <vfprintf+0x2a4>
    1302:	b7 01       	movw	r22, r14
    1304:	80 e3       	ldi	r24, 0x30	; 48
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    130c:	5a 94       	dec	r5
    130e:	f7 cf       	rjmp	.-18     	; 0x12fe <vfprintf+0x292>
    1310:	97 fe       	sbrs	r9, 7
    1312:	4c c0       	rjmp	.+152    	; 0x13ac <vfprintf+0x340>
    1314:	46 01       	movw	r8, r12
    1316:	d7 fe       	sbrs	r13, 7
    1318:	02 c0       	rjmp	.+4      	; 0x131e <vfprintf+0x2b2>
    131a:	81 2c       	mov	r8, r1
    131c:	91 2c       	mov	r9, r1
    131e:	c6 01       	movw	r24, r12
    1320:	88 19       	sub	r24, r8
    1322:	99 09       	sbc	r25, r9
    1324:	f3 01       	movw	r30, r6
    1326:	e8 0f       	add	r30, r24
    1328:	f9 1f       	adc	r31, r25
    132a:	fe 87       	std	Y+14, r31	; 0x0e
    132c:	ed 87       	std	Y+13, r30	; 0x0d
    132e:	96 01       	movw	r18, r12
    1330:	24 19       	sub	r18, r4
    1332:	31 09       	sbc	r19, r1
    1334:	38 8b       	std	Y+16, r19	; 0x10
    1336:	2f 87       	std	Y+15, r18	; 0x0f
    1338:	01 2f       	mov	r16, r17
    133a:	10 e0       	ldi	r17, 0x00	; 0
    133c:	11 95       	neg	r17
    133e:	01 95       	neg	r16
    1340:	11 09       	sbc	r17, r1
    1342:	3f ef       	ldi	r19, 0xFF	; 255
    1344:	83 16       	cp	r8, r19
    1346:	93 06       	cpc	r9, r19
    1348:	29 f4       	brne	.+10     	; 0x1354 <vfprintf+0x2e8>
    134a:	b7 01       	movw	r22, r14
    134c:	8e e2       	ldi	r24, 0x2E	; 46
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1354:	c8 14       	cp	r12, r8
    1356:	d9 04       	cpc	r13, r9
    1358:	4c f0       	brlt	.+18     	; 0x136c <vfprintf+0x300>
    135a:	8f 85       	ldd	r24, Y+15	; 0x0f
    135c:	98 89       	ldd	r25, Y+16	; 0x10
    135e:	88 15       	cp	r24, r8
    1360:	99 05       	cpc	r25, r9
    1362:	24 f4       	brge	.+8      	; 0x136c <vfprintf+0x300>
    1364:	ed 85       	ldd	r30, Y+13	; 0x0d
    1366:	fe 85       	ldd	r31, Y+14	; 0x0e
    1368:	81 81       	ldd	r24, Z+1	; 0x01
    136a:	01 c0       	rjmp	.+2      	; 0x136e <vfprintf+0x302>
    136c:	80 e3       	ldi	r24, 0x30	; 48
    136e:	f1 e0       	ldi	r31, 0x01	; 1
    1370:	8f 1a       	sub	r8, r31
    1372:	91 08       	sbc	r9, r1
    1374:	2d 85       	ldd	r18, Y+13	; 0x0d
    1376:	3e 85       	ldd	r19, Y+14	; 0x0e
    1378:	2f 5f       	subi	r18, 0xFF	; 255
    137a:	3f 4f       	sbci	r19, 0xFF	; 255
    137c:	3e 87       	std	Y+14, r19	; 0x0e
    137e:	2d 87       	std	Y+13, r18	; 0x0d
    1380:	80 16       	cp	r8, r16
    1382:	91 06       	cpc	r9, r17
    1384:	2c f0       	brlt	.+10     	; 0x1390 <vfprintf+0x324>
    1386:	b7 01       	movw	r22, r14
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    138e:	d9 cf       	rjmp	.-78     	; 0x1342 <vfprintf+0x2d6>
    1390:	c8 14       	cp	r12, r8
    1392:	d9 04       	cpc	r13, r9
    1394:	41 f4       	brne	.+16     	; 0x13a6 <vfprintf+0x33a>
    1396:	9a 81       	ldd	r25, Y+2	; 0x02
    1398:	96 33       	cpi	r25, 0x36	; 54
    139a:	20 f4       	brcc	.+8      	; 0x13a4 <vfprintf+0x338>
    139c:	95 33       	cpi	r25, 0x35	; 53
    139e:	19 f4       	brne	.+6      	; 0x13a6 <vfprintf+0x33a>
    13a0:	3c 85       	ldd	r19, Y+12	; 0x0c
    13a2:	34 ff       	sbrs	r19, 4
    13a4:	81 e3       	ldi	r24, 0x31	; 49
    13a6:	b7 01       	movw	r22, r14
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	4e c0       	rjmp	.+156    	; 0x1448 <vfprintf+0x3dc>
    13ac:	8a 81       	ldd	r24, Y+2	; 0x02
    13ae:	81 33       	cpi	r24, 0x31	; 49
    13b0:	19 f0       	breq	.+6      	; 0x13b8 <vfprintf+0x34c>
    13b2:	9c 85       	ldd	r25, Y+12	; 0x0c
    13b4:	9f 7e       	andi	r25, 0xEF	; 239
    13b6:	9c 87       	std	Y+12, r25	; 0x0c
    13b8:	b7 01       	movw	r22, r14
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    13c0:	11 11       	cpse	r17, r1
    13c2:	05 c0       	rjmp	.+10     	; 0x13ce <vfprintf+0x362>
    13c4:	94 fc       	sbrc	r9, 4
    13c6:	18 c0       	rjmp	.+48     	; 0x13f8 <vfprintf+0x38c>
    13c8:	85 e6       	ldi	r24, 0x65	; 101
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	17 c0       	rjmp	.+46     	; 0x13fc <vfprintf+0x390>
    13ce:	b7 01       	movw	r22, r14
    13d0:	8e e2       	ldi	r24, 0x2E	; 46
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    13d8:	1e 5f       	subi	r17, 0xFE	; 254
    13da:	82 e0       	ldi	r24, 0x02	; 2
    13dc:	01 e0       	ldi	r16, 0x01	; 1
    13de:	08 0f       	add	r16, r24
    13e0:	f3 01       	movw	r30, r6
    13e2:	e8 0f       	add	r30, r24
    13e4:	f1 1d       	adc	r31, r1
    13e6:	80 81       	ld	r24, Z
    13e8:	b7 01       	movw	r22, r14
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    13f0:	80 2f       	mov	r24, r16
    13f2:	01 13       	cpse	r16, r17
    13f4:	f3 cf       	rjmp	.-26     	; 0x13dc <vfprintf+0x370>
    13f6:	e6 cf       	rjmp	.-52     	; 0x13c4 <vfprintf+0x358>
    13f8:	85 e4       	ldi	r24, 0x45	; 69
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	b7 01       	movw	r22, r14
    13fe:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1402:	d7 fc       	sbrc	r13, 7
    1404:	06 c0       	rjmp	.+12     	; 0x1412 <vfprintf+0x3a6>
    1406:	c1 14       	cp	r12, r1
    1408:	d1 04       	cpc	r13, r1
    140a:	41 f4       	brne	.+16     	; 0x141c <vfprintf+0x3b0>
    140c:	ec 85       	ldd	r30, Y+12	; 0x0c
    140e:	e4 ff       	sbrs	r30, 4
    1410:	05 c0       	rjmp	.+10     	; 0x141c <vfprintf+0x3b0>
    1412:	d1 94       	neg	r13
    1414:	c1 94       	neg	r12
    1416:	d1 08       	sbc	r13, r1
    1418:	8d e2       	ldi	r24, 0x2D	; 45
    141a:	01 c0       	rjmp	.+2      	; 0x141e <vfprintf+0x3b2>
    141c:	8b e2       	ldi	r24, 0x2B	; 43
    141e:	b7 01       	movw	r22, r14
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1426:	80 e3       	ldi	r24, 0x30	; 48
    1428:	2a e0       	ldi	r18, 0x0A	; 10
    142a:	c2 16       	cp	r12, r18
    142c:	d1 04       	cpc	r13, r1
    142e:	2c f0       	brlt	.+10     	; 0x143a <vfprintf+0x3ce>
    1430:	8f 5f       	subi	r24, 0xFF	; 255
    1432:	fa e0       	ldi	r31, 0x0A	; 10
    1434:	cf 1a       	sub	r12, r31
    1436:	d1 08       	sbc	r13, r1
    1438:	f7 cf       	rjmp	.-18     	; 0x1428 <vfprintf+0x3bc>
    143a:	b7 01       	movw	r22, r14
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1442:	b7 01       	movw	r22, r14
    1444:	c6 01       	movw	r24, r12
    1446:	c0 96       	adiw	r24, 0x30	; 48
    1448:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    144c:	54 c1       	rjmp	.+680    	; 0x16f6 <vfprintf+0x68a>
    144e:	83 36       	cpi	r24, 0x63	; 99
    1450:	31 f0       	breq	.+12     	; 0x145e <vfprintf+0x3f2>
    1452:	83 37       	cpi	r24, 0x73	; 115
    1454:	79 f0       	breq	.+30     	; 0x1474 <vfprintf+0x408>
    1456:	83 35       	cpi	r24, 0x53	; 83
    1458:	09 f0       	breq	.+2      	; 0x145c <vfprintf+0x3f0>
    145a:	56 c0       	rjmp	.+172    	; 0x1508 <vfprintf+0x49c>
    145c:	20 c0       	rjmp	.+64     	; 0x149e <vfprintf+0x432>
    145e:	56 01       	movw	r10, r12
    1460:	32 e0       	ldi	r19, 0x02	; 2
    1462:	a3 0e       	add	r10, r19
    1464:	b1 1c       	adc	r11, r1
    1466:	f6 01       	movw	r30, r12
    1468:	80 81       	ld	r24, Z
    146a:	89 83       	std	Y+1, r24	; 0x01
    146c:	01 e0       	ldi	r16, 0x01	; 1
    146e:	10 e0       	ldi	r17, 0x00	; 0
    1470:	63 01       	movw	r12, r6
    1472:	12 c0       	rjmp	.+36     	; 0x1498 <vfprintf+0x42c>
    1474:	56 01       	movw	r10, r12
    1476:	f2 e0       	ldi	r31, 0x02	; 2
    1478:	af 0e       	add	r10, r31
    147a:	b1 1c       	adc	r11, r1
    147c:	f6 01       	movw	r30, r12
    147e:	c0 80       	ld	r12, Z
    1480:	d1 80       	ldd	r13, Z+1	; 0x01
    1482:	96 fe       	sbrs	r9, 6
    1484:	03 c0       	rjmp	.+6      	; 0x148c <vfprintf+0x420>
    1486:	61 2f       	mov	r22, r17
    1488:	70 e0       	ldi	r23, 0x00	; 0
    148a:	02 c0       	rjmp	.+4      	; 0x1490 <vfprintf+0x424>
    148c:	6f ef       	ldi	r22, 0xFF	; 255
    148e:	7f ef       	ldi	r23, 0xFF	; 255
    1490:	c6 01       	movw	r24, r12
    1492:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <strnlen>
    1496:	8c 01       	movw	r16, r24
    1498:	f9 2d       	mov	r31, r9
    149a:	ff 77       	andi	r31, 0x7F	; 127
    149c:	14 c0       	rjmp	.+40     	; 0x14c6 <vfprintf+0x45a>
    149e:	56 01       	movw	r10, r12
    14a0:	22 e0       	ldi	r18, 0x02	; 2
    14a2:	a2 0e       	add	r10, r18
    14a4:	b1 1c       	adc	r11, r1
    14a6:	f6 01       	movw	r30, r12
    14a8:	c0 80       	ld	r12, Z
    14aa:	d1 80       	ldd	r13, Z+1	; 0x01
    14ac:	96 fe       	sbrs	r9, 6
    14ae:	03 c0       	rjmp	.+6      	; 0x14b6 <vfprintf+0x44a>
    14b0:	61 2f       	mov	r22, r17
    14b2:	70 e0       	ldi	r23, 0x00	; 0
    14b4:	02 c0       	rjmp	.+4      	; 0x14ba <vfprintf+0x44e>
    14b6:	6f ef       	ldi	r22, 0xFF	; 255
    14b8:	7f ef       	ldi	r23, 0xFF	; 255
    14ba:	c6 01       	movw	r24, r12
    14bc:	0e 94 c2 0c 	call	0x1984	; 0x1984 <strnlen_P>
    14c0:	8c 01       	movw	r16, r24
    14c2:	f9 2d       	mov	r31, r9
    14c4:	f0 68       	ori	r31, 0x80	; 128
    14c6:	9f 2e       	mov	r9, r31
    14c8:	f3 fd       	sbrc	r31, 3
    14ca:	1a c0       	rjmp	.+52     	; 0x1500 <vfprintf+0x494>
    14cc:	85 2d       	mov	r24, r5
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	08 17       	cp	r16, r24
    14d2:	19 07       	cpc	r17, r25
    14d4:	a8 f4       	brcc	.+42     	; 0x1500 <vfprintf+0x494>
    14d6:	b7 01       	movw	r22, r14
    14d8:	80 e2       	ldi	r24, 0x20	; 32
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    14e0:	5a 94       	dec	r5
    14e2:	f4 cf       	rjmp	.-24     	; 0x14cc <vfprintf+0x460>
    14e4:	f6 01       	movw	r30, r12
    14e6:	97 fc       	sbrc	r9, 7
    14e8:	85 91       	lpm	r24, Z+
    14ea:	97 fe       	sbrs	r9, 7
    14ec:	81 91       	ld	r24, Z+
    14ee:	6f 01       	movw	r12, r30
    14f0:	b7 01       	movw	r22, r14
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    14f8:	51 10       	cpse	r5, r1
    14fa:	5a 94       	dec	r5
    14fc:	01 50       	subi	r16, 0x01	; 1
    14fe:	11 09       	sbc	r17, r1
    1500:	01 15       	cp	r16, r1
    1502:	11 05       	cpc	r17, r1
    1504:	79 f7       	brne	.-34     	; 0x14e4 <vfprintf+0x478>
    1506:	f7 c0       	rjmp	.+494    	; 0x16f6 <vfprintf+0x68a>
    1508:	84 36       	cpi	r24, 0x64	; 100
    150a:	11 f0       	breq	.+4      	; 0x1510 <vfprintf+0x4a4>
    150c:	89 36       	cpi	r24, 0x69	; 105
    150e:	61 f5       	brne	.+88     	; 0x1568 <vfprintf+0x4fc>
    1510:	56 01       	movw	r10, r12
    1512:	97 fe       	sbrs	r9, 7
    1514:	09 c0       	rjmp	.+18     	; 0x1528 <vfprintf+0x4bc>
    1516:	24 e0       	ldi	r18, 0x04	; 4
    1518:	a2 0e       	add	r10, r18
    151a:	b1 1c       	adc	r11, r1
    151c:	f6 01       	movw	r30, r12
    151e:	60 81       	ld	r22, Z
    1520:	71 81       	ldd	r23, Z+1	; 0x01
    1522:	82 81       	ldd	r24, Z+2	; 0x02
    1524:	93 81       	ldd	r25, Z+3	; 0x03
    1526:	0a c0       	rjmp	.+20     	; 0x153c <vfprintf+0x4d0>
    1528:	f2 e0       	ldi	r31, 0x02	; 2
    152a:	af 0e       	add	r10, r31
    152c:	b1 1c       	adc	r11, r1
    152e:	f6 01       	movw	r30, r12
    1530:	60 81       	ld	r22, Z
    1532:	71 81       	ldd	r23, Z+1	; 0x01
    1534:	07 2e       	mov	r0, r23
    1536:	00 0c       	add	r0, r0
    1538:	88 0b       	sbc	r24, r24
    153a:	99 0b       	sbc	r25, r25
    153c:	f9 2d       	mov	r31, r9
    153e:	ff 76       	andi	r31, 0x6F	; 111
    1540:	9f 2e       	mov	r9, r31
    1542:	97 ff       	sbrs	r25, 7
    1544:	09 c0       	rjmp	.+18     	; 0x1558 <vfprintf+0x4ec>
    1546:	90 95       	com	r25
    1548:	80 95       	com	r24
    154a:	70 95       	com	r23
    154c:	61 95       	neg	r22
    154e:	7f 4f       	sbci	r23, 0xFF	; 255
    1550:	8f 4f       	sbci	r24, 0xFF	; 255
    1552:	9f 4f       	sbci	r25, 0xFF	; 255
    1554:	f0 68       	ori	r31, 0x80	; 128
    1556:	9f 2e       	mov	r9, r31
    1558:	2a e0       	ldi	r18, 0x0A	; 10
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	a3 01       	movw	r20, r6
    155e:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <__ultoa_invert>
    1562:	c8 2e       	mov	r12, r24
    1564:	c6 18       	sub	r12, r6
    1566:	3f c0       	rjmp	.+126    	; 0x15e6 <vfprintf+0x57a>
    1568:	09 2d       	mov	r16, r9
    156a:	85 37       	cpi	r24, 0x75	; 117
    156c:	21 f4       	brne	.+8      	; 0x1576 <vfprintf+0x50a>
    156e:	0f 7e       	andi	r16, 0xEF	; 239
    1570:	2a e0       	ldi	r18, 0x0A	; 10
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	1d c0       	rjmp	.+58     	; 0x15b0 <vfprintf+0x544>
    1576:	09 7f       	andi	r16, 0xF9	; 249
    1578:	8f 36       	cpi	r24, 0x6F	; 111
    157a:	91 f0       	breq	.+36     	; 0x15a0 <vfprintf+0x534>
    157c:	18 f4       	brcc	.+6      	; 0x1584 <vfprintf+0x518>
    157e:	88 35       	cpi	r24, 0x58	; 88
    1580:	59 f0       	breq	.+22     	; 0x1598 <vfprintf+0x52c>
    1582:	c3 c0       	rjmp	.+390    	; 0x170a <vfprintf+0x69e>
    1584:	80 37       	cpi	r24, 0x70	; 112
    1586:	19 f0       	breq	.+6      	; 0x158e <vfprintf+0x522>
    1588:	88 37       	cpi	r24, 0x78	; 120
    158a:	11 f0       	breq	.+4      	; 0x1590 <vfprintf+0x524>
    158c:	be c0       	rjmp	.+380    	; 0x170a <vfprintf+0x69e>
    158e:	00 61       	ori	r16, 0x10	; 16
    1590:	04 ff       	sbrs	r16, 4
    1592:	09 c0       	rjmp	.+18     	; 0x15a6 <vfprintf+0x53a>
    1594:	04 60       	ori	r16, 0x04	; 4
    1596:	07 c0       	rjmp	.+14     	; 0x15a6 <vfprintf+0x53a>
    1598:	94 fe       	sbrs	r9, 4
    159a:	08 c0       	rjmp	.+16     	; 0x15ac <vfprintf+0x540>
    159c:	06 60       	ori	r16, 0x06	; 6
    159e:	06 c0       	rjmp	.+12     	; 0x15ac <vfprintf+0x540>
    15a0:	28 e0       	ldi	r18, 0x08	; 8
    15a2:	30 e0       	ldi	r19, 0x00	; 0
    15a4:	05 c0       	rjmp	.+10     	; 0x15b0 <vfprintf+0x544>
    15a6:	20 e1       	ldi	r18, 0x10	; 16
    15a8:	30 e0       	ldi	r19, 0x00	; 0
    15aa:	02 c0       	rjmp	.+4      	; 0x15b0 <vfprintf+0x544>
    15ac:	20 e1       	ldi	r18, 0x10	; 16
    15ae:	32 e0       	ldi	r19, 0x02	; 2
    15b0:	56 01       	movw	r10, r12
    15b2:	07 ff       	sbrs	r16, 7
    15b4:	09 c0       	rjmp	.+18     	; 0x15c8 <vfprintf+0x55c>
    15b6:	84 e0       	ldi	r24, 0x04	; 4
    15b8:	a8 0e       	add	r10, r24
    15ba:	b1 1c       	adc	r11, r1
    15bc:	f6 01       	movw	r30, r12
    15be:	60 81       	ld	r22, Z
    15c0:	71 81       	ldd	r23, Z+1	; 0x01
    15c2:	82 81       	ldd	r24, Z+2	; 0x02
    15c4:	93 81       	ldd	r25, Z+3	; 0x03
    15c6:	08 c0       	rjmp	.+16     	; 0x15d8 <vfprintf+0x56c>
    15c8:	f2 e0       	ldi	r31, 0x02	; 2
    15ca:	af 0e       	add	r10, r31
    15cc:	b1 1c       	adc	r11, r1
    15ce:	f6 01       	movw	r30, r12
    15d0:	60 81       	ld	r22, Z
    15d2:	71 81       	ldd	r23, Z+1	; 0x01
    15d4:	80 e0       	ldi	r24, 0x00	; 0
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	a3 01       	movw	r20, r6
    15da:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <__ultoa_invert>
    15de:	c8 2e       	mov	r12, r24
    15e0:	c6 18       	sub	r12, r6
    15e2:	0f 77       	andi	r16, 0x7F	; 127
    15e4:	90 2e       	mov	r9, r16
    15e6:	96 fe       	sbrs	r9, 6
    15e8:	0b c0       	rjmp	.+22     	; 0x1600 <vfprintf+0x594>
    15ea:	09 2d       	mov	r16, r9
    15ec:	0e 7f       	andi	r16, 0xFE	; 254
    15ee:	c1 16       	cp	r12, r17
    15f0:	50 f4       	brcc	.+20     	; 0x1606 <vfprintf+0x59a>
    15f2:	94 fe       	sbrs	r9, 4
    15f4:	0a c0       	rjmp	.+20     	; 0x160a <vfprintf+0x59e>
    15f6:	92 fc       	sbrc	r9, 2
    15f8:	08 c0       	rjmp	.+16     	; 0x160a <vfprintf+0x59e>
    15fa:	09 2d       	mov	r16, r9
    15fc:	0e 7e       	andi	r16, 0xEE	; 238
    15fe:	05 c0       	rjmp	.+10     	; 0x160a <vfprintf+0x59e>
    1600:	dc 2c       	mov	r13, r12
    1602:	09 2d       	mov	r16, r9
    1604:	03 c0       	rjmp	.+6      	; 0x160c <vfprintf+0x5a0>
    1606:	dc 2c       	mov	r13, r12
    1608:	01 c0       	rjmp	.+2      	; 0x160c <vfprintf+0x5a0>
    160a:	d1 2e       	mov	r13, r17
    160c:	04 ff       	sbrs	r16, 4
    160e:	0d c0       	rjmp	.+26     	; 0x162a <vfprintf+0x5be>
    1610:	fe 01       	movw	r30, r28
    1612:	ec 0d       	add	r30, r12
    1614:	f1 1d       	adc	r31, r1
    1616:	80 81       	ld	r24, Z
    1618:	80 33       	cpi	r24, 0x30	; 48
    161a:	11 f4       	brne	.+4      	; 0x1620 <vfprintf+0x5b4>
    161c:	09 7e       	andi	r16, 0xE9	; 233
    161e:	09 c0       	rjmp	.+18     	; 0x1632 <vfprintf+0x5c6>
    1620:	02 ff       	sbrs	r16, 2
    1622:	06 c0       	rjmp	.+12     	; 0x1630 <vfprintf+0x5c4>
    1624:	d3 94       	inc	r13
    1626:	d3 94       	inc	r13
    1628:	04 c0       	rjmp	.+8      	; 0x1632 <vfprintf+0x5c6>
    162a:	80 2f       	mov	r24, r16
    162c:	86 78       	andi	r24, 0x86	; 134
    162e:	09 f0       	breq	.+2      	; 0x1632 <vfprintf+0x5c6>
    1630:	d3 94       	inc	r13
    1632:	03 fd       	sbrc	r16, 3
    1634:	11 c0       	rjmp	.+34     	; 0x1658 <vfprintf+0x5ec>
    1636:	00 ff       	sbrs	r16, 0
    1638:	06 c0       	rjmp	.+12     	; 0x1646 <vfprintf+0x5da>
    163a:	1c 2d       	mov	r17, r12
    163c:	d5 14       	cp	r13, r5
    163e:	80 f4       	brcc	.+32     	; 0x1660 <vfprintf+0x5f4>
    1640:	15 0d       	add	r17, r5
    1642:	1d 19       	sub	r17, r13
    1644:	0d c0       	rjmp	.+26     	; 0x1660 <vfprintf+0x5f4>
    1646:	d5 14       	cp	r13, r5
    1648:	58 f4       	brcc	.+22     	; 0x1660 <vfprintf+0x5f4>
    164a:	b7 01       	movw	r22, r14
    164c:	80 e2       	ldi	r24, 0x20	; 32
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1654:	d3 94       	inc	r13
    1656:	f7 cf       	rjmp	.-18     	; 0x1646 <vfprintf+0x5da>
    1658:	d5 14       	cp	r13, r5
    165a:	10 f4       	brcc	.+4      	; 0x1660 <vfprintf+0x5f4>
    165c:	5d 18       	sub	r5, r13
    165e:	01 c0       	rjmp	.+2      	; 0x1662 <vfprintf+0x5f6>
    1660:	51 2c       	mov	r5, r1
    1662:	04 ff       	sbrs	r16, 4
    1664:	10 c0       	rjmp	.+32     	; 0x1686 <vfprintf+0x61a>
    1666:	b7 01       	movw	r22, r14
    1668:	80 e3       	ldi	r24, 0x30	; 48
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1670:	02 ff       	sbrs	r16, 2
    1672:	17 c0       	rjmp	.+46     	; 0x16a2 <vfprintf+0x636>
    1674:	01 fd       	sbrc	r16, 1
    1676:	03 c0       	rjmp	.+6      	; 0x167e <vfprintf+0x612>
    1678:	88 e7       	ldi	r24, 0x78	; 120
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	02 c0       	rjmp	.+4      	; 0x1682 <vfprintf+0x616>
    167e:	88 e5       	ldi	r24, 0x58	; 88
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	b7 01       	movw	r22, r14
    1684:	0c c0       	rjmp	.+24     	; 0x169e <vfprintf+0x632>
    1686:	80 2f       	mov	r24, r16
    1688:	86 78       	andi	r24, 0x86	; 134
    168a:	59 f0       	breq	.+22     	; 0x16a2 <vfprintf+0x636>
    168c:	01 ff       	sbrs	r16, 1
    168e:	02 c0       	rjmp	.+4      	; 0x1694 <vfprintf+0x628>
    1690:	8b e2       	ldi	r24, 0x2B	; 43
    1692:	01 c0       	rjmp	.+2      	; 0x1696 <vfprintf+0x62a>
    1694:	80 e2       	ldi	r24, 0x20	; 32
    1696:	07 fd       	sbrc	r16, 7
    1698:	8d e2       	ldi	r24, 0x2D	; 45
    169a:	b7 01       	movw	r22, r14
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    16a2:	c1 16       	cp	r12, r17
    16a4:	38 f4       	brcc	.+14     	; 0x16b4 <vfprintf+0x648>
    16a6:	b7 01       	movw	r22, r14
    16a8:	80 e3       	ldi	r24, 0x30	; 48
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    16b0:	11 50       	subi	r17, 0x01	; 1
    16b2:	f7 cf       	rjmp	.-18     	; 0x16a2 <vfprintf+0x636>
    16b4:	ca 94       	dec	r12
    16b6:	f3 01       	movw	r30, r6
    16b8:	ec 0d       	add	r30, r12
    16ba:	f1 1d       	adc	r31, r1
    16bc:	80 81       	ld	r24, Z
    16be:	b7 01       	movw	r22, r14
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    16c6:	c1 10       	cpse	r12, r1
    16c8:	f5 cf       	rjmp	.-22     	; 0x16b4 <vfprintf+0x648>
    16ca:	15 c0       	rjmp	.+42     	; 0x16f6 <vfprintf+0x68a>
    16cc:	f4 e0       	ldi	r31, 0x04	; 4
    16ce:	f5 15       	cp	r31, r5
    16d0:	60 f5       	brcc	.+88     	; 0x172a <vfprintf+0x6be>
    16d2:	84 e0       	ldi	r24, 0x04	; 4
    16d4:	58 1a       	sub	r5, r24
    16d6:	93 fe       	sbrs	r9, 3
    16d8:	1f c0       	rjmp	.+62     	; 0x1718 <vfprintf+0x6ac>
    16da:	01 11       	cpse	r16, r1
    16dc:	27 c0       	rjmp	.+78     	; 0x172c <vfprintf+0x6c0>
    16de:	2c 85       	ldd	r18, Y+12	; 0x0c
    16e0:	23 ff       	sbrs	r18, 3
    16e2:	2a c0       	rjmp	.+84     	; 0x1738 <vfprintf+0x6cc>
    16e4:	04 e5       	ldi	r16, 0x54	; 84
    16e6:	10 e0       	ldi	r17, 0x00	; 0
    16e8:	39 2d       	mov	r19, r9
    16ea:	30 71       	andi	r19, 0x10	; 16
    16ec:	93 2e       	mov	r9, r19
    16ee:	f8 01       	movw	r30, r16
    16f0:	84 91       	lpm	r24, Z
    16f2:	81 11       	cpse	r24, r1
    16f4:	24 c0       	rjmp	.+72     	; 0x173e <vfprintf+0x6d2>
    16f6:	55 20       	and	r5, r5
    16f8:	09 f4       	brne	.+2      	; 0x16fc <vfprintf+0x690>
    16fa:	e4 cc       	rjmp	.-1592   	; 0x10c4 <vfprintf+0x58>
    16fc:	b7 01       	movw	r22, r14
    16fe:	80 e2       	ldi	r24, 0x20	; 32
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1706:	5a 94       	dec	r5
    1708:	f6 cf       	rjmp	.-20     	; 0x16f6 <vfprintf+0x68a>
    170a:	f7 01       	movw	r30, r14
    170c:	86 81       	ldd	r24, Z+6	; 0x06
    170e:	97 81       	ldd	r25, Z+7	; 0x07
    1710:	26 c0       	rjmp	.+76     	; 0x175e <vfprintf+0x6f2>
    1712:	8f ef       	ldi	r24, 0xFF	; 255
    1714:	9f ef       	ldi	r25, 0xFF	; 255
    1716:	23 c0       	rjmp	.+70     	; 0x175e <vfprintf+0x6f2>
    1718:	b7 01       	movw	r22, r14
    171a:	80 e2       	ldi	r24, 0x20	; 32
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1722:	5a 94       	dec	r5
    1724:	51 10       	cpse	r5, r1
    1726:	f8 cf       	rjmp	.-16     	; 0x1718 <vfprintf+0x6ac>
    1728:	d8 cf       	rjmp	.-80     	; 0x16da <vfprintf+0x66e>
    172a:	51 2c       	mov	r5, r1
    172c:	b7 01       	movw	r22, r14
    172e:	80 2f       	mov	r24, r16
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1736:	d3 cf       	rjmp	.-90     	; 0x16de <vfprintf+0x672>
    1738:	08 e5       	ldi	r16, 0x58	; 88
    173a:	10 e0       	ldi	r17, 0x00	; 0
    173c:	d5 cf       	rjmp	.-86     	; 0x16e8 <vfprintf+0x67c>
    173e:	91 10       	cpse	r9, r1
    1740:	80 52       	subi	r24, 0x20	; 32
    1742:	b7 01       	movw	r22, r14
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    174a:	0f 5f       	subi	r16, 0xFF	; 255
    174c:	1f 4f       	sbci	r17, 0xFF	; 255
    174e:	cf cf       	rjmp	.-98     	; 0x16ee <vfprintf+0x682>
    1750:	23 e0       	ldi	r18, 0x03	; 3
    1752:	25 15       	cp	r18, r5
    1754:	10 f4       	brcc	.+4      	; 0x175a <vfprintf+0x6ee>
    1756:	83 e0       	ldi	r24, 0x03	; 3
    1758:	bd cf       	rjmp	.-134    	; 0x16d4 <vfprintf+0x668>
    175a:	51 2c       	mov	r5, r1
    175c:	c0 cf       	rjmp	.-128    	; 0x16de <vfprintf+0x672>
    175e:	60 96       	adiw	r28, 0x10	; 16
    1760:	e2 e1       	ldi	r30, 0x12	; 18
    1762:	0c 94 cf 0b 	jmp	0x179e	; 0x179e <__epilogue_restores__>

00001766 <__prologue_saves__>:
    1766:	2f 92       	push	r2
    1768:	3f 92       	push	r3
    176a:	4f 92       	push	r4
    176c:	5f 92       	push	r5
    176e:	6f 92       	push	r6
    1770:	7f 92       	push	r7
    1772:	8f 92       	push	r8
    1774:	9f 92       	push	r9
    1776:	af 92       	push	r10
    1778:	bf 92       	push	r11
    177a:	cf 92       	push	r12
    177c:	df 92       	push	r13
    177e:	ef 92       	push	r14
    1780:	ff 92       	push	r15
    1782:	0f 93       	push	r16
    1784:	1f 93       	push	r17
    1786:	cf 93       	push	r28
    1788:	df 93       	push	r29
    178a:	cd b7       	in	r28, 0x3d	; 61
    178c:	de b7       	in	r29, 0x3e	; 62
    178e:	ca 1b       	sub	r28, r26
    1790:	db 0b       	sbc	r29, r27
    1792:	0f b6       	in	r0, 0x3f	; 63
    1794:	f8 94       	cli
    1796:	de bf       	out	0x3e, r29	; 62
    1798:	0f be       	out	0x3f, r0	; 63
    179a:	cd bf       	out	0x3d, r28	; 61
    179c:	09 94       	ijmp

0000179e <__epilogue_restores__>:
    179e:	2a 88       	ldd	r2, Y+18	; 0x12
    17a0:	39 88       	ldd	r3, Y+17	; 0x11
    17a2:	48 88       	ldd	r4, Y+16	; 0x10
    17a4:	5f 84       	ldd	r5, Y+15	; 0x0f
    17a6:	6e 84       	ldd	r6, Y+14	; 0x0e
    17a8:	7d 84       	ldd	r7, Y+13	; 0x0d
    17aa:	8c 84       	ldd	r8, Y+12	; 0x0c
    17ac:	9b 84       	ldd	r9, Y+11	; 0x0b
    17ae:	aa 84       	ldd	r10, Y+10	; 0x0a
    17b0:	b9 84       	ldd	r11, Y+9	; 0x09
    17b2:	c8 84       	ldd	r12, Y+8	; 0x08
    17b4:	df 80       	ldd	r13, Y+7	; 0x07
    17b6:	ee 80       	ldd	r14, Y+6	; 0x06
    17b8:	fd 80       	ldd	r15, Y+5	; 0x05
    17ba:	0c 81       	ldd	r16, Y+4	; 0x04
    17bc:	1b 81       	ldd	r17, Y+3	; 0x03
    17be:	aa 81       	ldd	r26, Y+2	; 0x02
    17c0:	b9 81       	ldd	r27, Y+1	; 0x01
    17c2:	ce 0f       	add	r28, r30
    17c4:	d1 1d       	adc	r29, r1
    17c6:	0f b6       	in	r0, 0x3f	; 63
    17c8:	f8 94       	cli
    17ca:	de bf       	out	0x3e, r29	; 62
    17cc:	0f be       	out	0x3f, r0	; 63
    17ce:	cd bf       	out	0x3d, r28	; 61
    17d0:	ed 01       	movw	r28, r26
    17d2:	08 95       	ret

000017d4 <__ftoa_engine>:
    17d4:	28 30       	cpi	r18, 0x08	; 8
    17d6:	08 f0       	brcs	.+2      	; 0x17da <__ftoa_engine+0x6>
    17d8:	27 e0       	ldi	r18, 0x07	; 7
    17da:	33 27       	eor	r19, r19
    17dc:	da 01       	movw	r26, r20
    17de:	99 0f       	add	r25, r25
    17e0:	31 1d       	adc	r19, r1
    17e2:	87 fd       	sbrc	r24, 7
    17e4:	91 60       	ori	r25, 0x01	; 1
    17e6:	00 96       	adiw	r24, 0x00	; 0
    17e8:	61 05       	cpc	r22, r1
    17ea:	71 05       	cpc	r23, r1
    17ec:	39 f4       	brne	.+14     	; 0x17fc <__ftoa_engine+0x28>
    17ee:	32 60       	ori	r19, 0x02	; 2
    17f0:	2e 5f       	subi	r18, 0xFE	; 254
    17f2:	3d 93       	st	X+, r19
    17f4:	30 e3       	ldi	r19, 0x30	; 48
    17f6:	2a 95       	dec	r18
    17f8:	e1 f7       	brne	.-8      	; 0x17f2 <__ftoa_engine+0x1e>
    17fa:	08 95       	ret
    17fc:	9f 3f       	cpi	r25, 0xFF	; 255
    17fe:	30 f0       	brcs	.+12     	; 0x180c <__ftoa_engine+0x38>
    1800:	80 38       	cpi	r24, 0x80	; 128
    1802:	71 05       	cpc	r23, r1
    1804:	61 05       	cpc	r22, r1
    1806:	09 f0       	breq	.+2      	; 0x180a <__ftoa_engine+0x36>
    1808:	3c 5f       	subi	r19, 0xFC	; 252
    180a:	3c 5f       	subi	r19, 0xFC	; 252
    180c:	3d 93       	st	X+, r19
    180e:	91 30       	cpi	r25, 0x01	; 1
    1810:	08 f0       	brcs	.+2      	; 0x1814 <__ftoa_engine+0x40>
    1812:	80 68       	ori	r24, 0x80	; 128
    1814:	91 1d       	adc	r25, r1
    1816:	df 93       	push	r29
    1818:	cf 93       	push	r28
    181a:	1f 93       	push	r17
    181c:	0f 93       	push	r16
    181e:	ff 92       	push	r15
    1820:	ef 92       	push	r14
    1822:	19 2f       	mov	r17, r25
    1824:	98 7f       	andi	r25, 0xF8	; 248
    1826:	96 95       	lsr	r25
    1828:	e9 2f       	mov	r30, r25
    182a:	96 95       	lsr	r25
    182c:	96 95       	lsr	r25
    182e:	e9 0f       	add	r30, r25
    1830:	ff 27       	eor	r31, r31
    1832:	ea 54       	subi	r30, 0x4A	; 74
    1834:	ff 4f       	sbci	r31, 0xFF	; 255
    1836:	99 27       	eor	r25, r25
    1838:	33 27       	eor	r19, r19
    183a:	ee 24       	eor	r14, r14
    183c:	ff 24       	eor	r15, r15
    183e:	a7 01       	movw	r20, r14
    1840:	e7 01       	movw	r28, r14
    1842:	05 90       	lpm	r0, Z+
    1844:	08 94       	sec
    1846:	07 94       	ror	r0
    1848:	28 f4       	brcc	.+10     	; 0x1854 <__ftoa_engine+0x80>
    184a:	36 0f       	add	r19, r22
    184c:	e7 1e       	adc	r14, r23
    184e:	f8 1e       	adc	r15, r24
    1850:	49 1f       	adc	r20, r25
    1852:	51 1d       	adc	r21, r1
    1854:	66 0f       	add	r22, r22
    1856:	77 1f       	adc	r23, r23
    1858:	88 1f       	adc	r24, r24
    185a:	99 1f       	adc	r25, r25
    185c:	06 94       	lsr	r0
    185e:	a1 f7       	brne	.-24     	; 0x1848 <__ftoa_engine+0x74>
    1860:	05 90       	lpm	r0, Z+
    1862:	07 94       	ror	r0
    1864:	28 f4       	brcc	.+10     	; 0x1870 <__ftoa_engine+0x9c>
    1866:	e7 0e       	add	r14, r23
    1868:	f8 1e       	adc	r15, r24
    186a:	49 1f       	adc	r20, r25
    186c:	56 1f       	adc	r21, r22
    186e:	c1 1d       	adc	r28, r1
    1870:	77 0f       	add	r23, r23
    1872:	88 1f       	adc	r24, r24
    1874:	99 1f       	adc	r25, r25
    1876:	66 1f       	adc	r22, r22
    1878:	06 94       	lsr	r0
    187a:	a1 f7       	brne	.-24     	; 0x1864 <__ftoa_engine+0x90>
    187c:	05 90       	lpm	r0, Z+
    187e:	07 94       	ror	r0
    1880:	28 f4       	brcc	.+10     	; 0x188c <__ftoa_engine+0xb8>
    1882:	f8 0e       	add	r15, r24
    1884:	49 1f       	adc	r20, r25
    1886:	56 1f       	adc	r21, r22
    1888:	c7 1f       	adc	r28, r23
    188a:	d1 1d       	adc	r29, r1
    188c:	88 0f       	add	r24, r24
    188e:	99 1f       	adc	r25, r25
    1890:	66 1f       	adc	r22, r22
    1892:	77 1f       	adc	r23, r23
    1894:	06 94       	lsr	r0
    1896:	a1 f7       	brne	.-24     	; 0x1880 <__ftoa_engine+0xac>
    1898:	05 90       	lpm	r0, Z+
    189a:	07 94       	ror	r0
    189c:	20 f4       	brcc	.+8      	; 0x18a6 <__ftoa_engine+0xd2>
    189e:	49 0f       	add	r20, r25
    18a0:	56 1f       	adc	r21, r22
    18a2:	c7 1f       	adc	r28, r23
    18a4:	d8 1f       	adc	r29, r24
    18a6:	99 0f       	add	r25, r25
    18a8:	66 1f       	adc	r22, r22
    18aa:	77 1f       	adc	r23, r23
    18ac:	88 1f       	adc	r24, r24
    18ae:	06 94       	lsr	r0
    18b0:	a9 f7       	brne	.-22     	; 0x189c <__ftoa_engine+0xc8>
    18b2:	84 91       	lpm	r24, Z
    18b4:	10 95       	com	r17
    18b6:	17 70       	andi	r17, 0x07	; 7
    18b8:	41 f0       	breq	.+16     	; 0x18ca <__ftoa_engine+0xf6>
    18ba:	d6 95       	lsr	r29
    18bc:	c7 95       	ror	r28
    18be:	57 95       	ror	r21
    18c0:	47 95       	ror	r20
    18c2:	f7 94       	ror	r15
    18c4:	e7 94       	ror	r14
    18c6:	1a 95       	dec	r17
    18c8:	c1 f7       	brne	.-16     	; 0x18ba <__ftoa_engine+0xe6>
    18ca:	ec e5       	ldi	r30, 0x5C	; 92
    18cc:	f0 e0       	ldi	r31, 0x00	; 0
    18ce:	68 94       	set
    18d0:	15 90       	lpm	r1, Z+
    18d2:	15 91       	lpm	r17, Z+
    18d4:	35 91       	lpm	r19, Z+
    18d6:	65 91       	lpm	r22, Z+
    18d8:	95 91       	lpm	r25, Z+
    18da:	05 90       	lpm	r0, Z+
    18dc:	7f e2       	ldi	r23, 0x2F	; 47
    18de:	73 95       	inc	r23
    18e0:	e1 18       	sub	r14, r1
    18e2:	f1 0a       	sbc	r15, r17
    18e4:	43 0b       	sbc	r20, r19
    18e6:	56 0b       	sbc	r21, r22
    18e8:	c9 0b       	sbc	r28, r25
    18ea:	d0 09       	sbc	r29, r0
    18ec:	c0 f7       	brcc	.-16     	; 0x18de <__ftoa_engine+0x10a>
    18ee:	e1 0c       	add	r14, r1
    18f0:	f1 1e       	adc	r15, r17
    18f2:	43 1f       	adc	r20, r19
    18f4:	56 1f       	adc	r21, r22
    18f6:	c9 1f       	adc	r28, r25
    18f8:	d0 1d       	adc	r29, r0
    18fa:	7e f4       	brtc	.+30     	; 0x191a <__ftoa_engine+0x146>
    18fc:	70 33       	cpi	r23, 0x30	; 48
    18fe:	11 f4       	brne	.+4      	; 0x1904 <__ftoa_engine+0x130>
    1900:	8a 95       	dec	r24
    1902:	e6 cf       	rjmp	.-52     	; 0x18d0 <__ftoa_engine+0xfc>
    1904:	e8 94       	clt
    1906:	01 50       	subi	r16, 0x01	; 1
    1908:	30 f0       	brcs	.+12     	; 0x1916 <__ftoa_engine+0x142>
    190a:	08 0f       	add	r16, r24
    190c:	0a f4       	brpl	.+2      	; 0x1910 <__ftoa_engine+0x13c>
    190e:	00 27       	eor	r16, r16
    1910:	02 17       	cp	r16, r18
    1912:	08 f4       	brcc	.+2      	; 0x1916 <__ftoa_engine+0x142>
    1914:	20 2f       	mov	r18, r16
    1916:	23 95       	inc	r18
    1918:	02 2f       	mov	r16, r18
    191a:	7a 33       	cpi	r23, 0x3A	; 58
    191c:	28 f0       	brcs	.+10     	; 0x1928 <__ftoa_engine+0x154>
    191e:	79 e3       	ldi	r23, 0x39	; 57
    1920:	7d 93       	st	X+, r23
    1922:	2a 95       	dec	r18
    1924:	e9 f7       	brne	.-6      	; 0x1920 <__ftoa_engine+0x14c>
    1926:	10 c0       	rjmp	.+32     	; 0x1948 <__ftoa_engine+0x174>
    1928:	7d 93       	st	X+, r23
    192a:	2a 95       	dec	r18
    192c:	89 f6       	brne	.-94     	; 0x18d0 <__ftoa_engine+0xfc>
    192e:	06 94       	lsr	r0
    1930:	97 95       	ror	r25
    1932:	67 95       	ror	r22
    1934:	37 95       	ror	r19
    1936:	17 95       	ror	r17
    1938:	17 94       	ror	r1
    193a:	e1 18       	sub	r14, r1
    193c:	f1 0a       	sbc	r15, r17
    193e:	43 0b       	sbc	r20, r19
    1940:	56 0b       	sbc	r21, r22
    1942:	c9 0b       	sbc	r28, r25
    1944:	d0 09       	sbc	r29, r0
    1946:	98 f0       	brcs	.+38     	; 0x196e <__ftoa_engine+0x19a>
    1948:	23 95       	inc	r18
    194a:	7e 91       	ld	r23, -X
    194c:	73 95       	inc	r23
    194e:	7a 33       	cpi	r23, 0x3A	; 58
    1950:	08 f0       	brcs	.+2      	; 0x1954 <__ftoa_engine+0x180>
    1952:	70 e3       	ldi	r23, 0x30	; 48
    1954:	7c 93       	st	X, r23
    1956:	20 13       	cpse	r18, r16
    1958:	b8 f7       	brcc	.-18     	; 0x1948 <__ftoa_engine+0x174>
    195a:	7e 91       	ld	r23, -X
    195c:	70 61       	ori	r23, 0x10	; 16
    195e:	7d 93       	st	X+, r23
    1960:	30 f0       	brcs	.+12     	; 0x196e <__ftoa_engine+0x19a>
    1962:	83 95       	inc	r24
    1964:	71 e3       	ldi	r23, 0x31	; 49
    1966:	7d 93       	st	X+, r23
    1968:	70 e3       	ldi	r23, 0x30	; 48
    196a:	2a 95       	dec	r18
    196c:	e1 f7       	brne	.-8      	; 0x1966 <__ftoa_engine+0x192>
    196e:	11 24       	eor	r1, r1
    1970:	ef 90       	pop	r14
    1972:	ff 90       	pop	r15
    1974:	0f 91       	pop	r16
    1976:	1f 91       	pop	r17
    1978:	cf 91       	pop	r28
    197a:	df 91       	pop	r29
    197c:	99 27       	eor	r25, r25
    197e:	87 fd       	sbrc	r24, 7
    1980:	90 95       	com	r25
    1982:	08 95       	ret

00001984 <strnlen_P>:
    1984:	fc 01       	movw	r30, r24
    1986:	05 90       	lpm	r0, Z+
    1988:	61 50       	subi	r22, 0x01	; 1
    198a:	70 40       	sbci	r23, 0x00	; 0
    198c:	01 10       	cpse	r0, r1
    198e:	d8 f7       	brcc	.-10     	; 0x1986 <strnlen_P+0x2>
    1990:	80 95       	com	r24
    1992:	90 95       	com	r25
    1994:	8e 0f       	add	r24, r30
    1996:	9f 1f       	adc	r25, r31
    1998:	08 95       	ret

0000199a <strtok>:
    199a:	48 e2       	ldi	r20, 0x28	; 40
    199c:	53 e0       	ldi	r21, 0x03	; 3
    199e:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <strtok_r>
    19a2:	08 95       	ret

000019a4 <memcpy>:
    19a4:	fb 01       	movw	r30, r22
    19a6:	dc 01       	movw	r26, r24
    19a8:	02 c0       	rjmp	.+4      	; 0x19ae <memcpy+0xa>
    19aa:	01 90       	ld	r0, Z+
    19ac:	0d 92       	st	X+, r0
    19ae:	41 50       	subi	r20, 0x01	; 1
    19b0:	50 40       	sbci	r21, 0x00	; 0
    19b2:	d8 f7       	brcc	.-10     	; 0x19aa <memcpy+0x6>
    19b4:	08 95       	ret

000019b6 <memmove>:
    19b6:	68 17       	cp	r22, r24
    19b8:	79 07       	cpc	r23, r25
    19ba:	68 f4       	brcc	.+26     	; 0x19d6 <memmove+0x20>
    19bc:	fb 01       	movw	r30, r22
    19be:	dc 01       	movw	r26, r24
    19c0:	e4 0f       	add	r30, r20
    19c2:	f5 1f       	adc	r31, r21
    19c4:	a4 0f       	add	r26, r20
    19c6:	b5 1f       	adc	r27, r21
    19c8:	02 c0       	rjmp	.+4      	; 0x19ce <memmove+0x18>
    19ca:	02 90       	ld	r0, -Z
    19cc:	0e 92       	st	-X, r0
    19ce:	41 50       	subi	r20, 0x01	; 1
    19d0:	50 40       	sbci	r21, 0x00	; 0
    19d2:	d8 f7       	brcc	.-10     	; 0x19ca <memmove+0x14>
    19d4:	08 95       	ret
    19d6:	0c 94 d2 0c 	jmp	0x19a4	; 0x19a4 <memcpy>

000019da <strncmp>:
    19da:	fb 01       	movw	r30, r22
    19dc:	dc 01       	movw	r26, r24
    19de:	41 50       	subi	r20, 0x01	; 1
    19e0:	50 40       	sbci	r21, 0x00	; 0
    19e2:	30 f0       	brcs	.+12     	; 0x19f0 <strncmp+0x16>
    19e4:	8d 91       	ld	r24, X+
    19e6:	01 90       	ld	r0, Z+
    19e8:	80 19       	sub	r24, r0
    19ea:	19 f4       	brne	.+6      	; 0x19f2 <strncmp+0x18>
    19ec:	00 20       	and	r0, r0
    19ee:	b9 f7       	brne	.-18     	; 0x19de <strncmp+0x4>
    19f0:	88 1b       	sub	r24, r24
    19f2:	99 0b       	sbc	r25, r25
    19f4:	08 95       	ret

000019f6 <strnlen>:
    19f6:	fc 01       	movw	r30, r24
    19f8:	61 50       	subi	r22, 0x01	; 1
    19fa:	70 40       	sbci	r23, 0x00	; 0
    19fc:	01 90       	ld	r0, Z+
    19fe:	01 10       	cpse	r0, r1
    1a00:	d8 f7       	brcc	.-10     	; 0x19f8 <strnlen+0x2>
    1a02:	80 95       	com	r24
    1a04:	90 95       	com	r25
    1a06:	8e 0f       	add	r24, r30
    1a08:	9f 1f       	adc	r25, r31
    1a0a:	08 95       	ret

00001a0c <strstr>:
    1a0c:	fb 01       	movw	r30, r22
    1a0e:	51 91       	ld	r21, Z+
    1a10:	55 23       	and	r21, r21
    1a12:	a9 f0       	breq	.+42     	; 0x1a3e <strstr+0x32>
    1a14:	bf 01       	movw	r22, r30
    1a16:	dc 01       	movw	r26, r24
    1a18:	4d 91       	ld	r20, X+
    1a1a:	45 17       	cp	r20, r21
    1a1c:	41 11       	cpse	r20, r1
    1a1e:	e1 f7       	brne	.-8      	; 0x1a18 <strstr+0xc>
    1a20:	59 f4       	brne	.+22     	; 0x1a38 <strstr+0x2c>
    1a22:	cd 01       	movw	r24, r26
    1a24:	01 90       	ld	r0, Z+
    1a26:	00 20       	and	r0, r0
    1a28:	49 f0       	breq	.+18     	; 0x1a3c <strstr+0x30>
    1a2a:	4d 91       	ld	r20, X+
    1a2c:	40 15       	cp	r20, r0
    1a2e:	41 11       	cpse	r20, r1
    1a30:	c9 f3       	breq	.-14     	; 0x1a24 <strstr+0x18>
    1a32:	fb 01       	movw	r30, r22
    1a34:	41 11       	cpse	r20, r1
    1a36:	ef cf       	rjmp	.-34     	; 0x1a16 <strstr+0xa>
    1a38:	81 e0       	ldi	r24, 0x01	; 1
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	01 97       	sbiw	r24, 0x01	; 1
    1a3e:	08 95       	ret

00001a40 <strtok_r>:
    1a40:	fa 01       	movw	r30, r20
    1a42:	a1 91       	ld	r26, Z+
    1a44:	b0 81       	ld	r27, Z
    1a46:	00 97       	sbiw	r24, 0x00	; 0
    1a48:	19 f4       	brne	.+6      	; 0x1a50 <strtok_r+0x10>
    1a4a:	10 97       	sbiw	r26, 0x00	; 0
    1a4c:	e1 f0       	breq	.+56     	; 0x1a86 <strtok_r+0x46>
    1a4e:	cd 01       	movw	r24, r26
    1a50:	dc 01       	movw	r26, r24
    1a52:	cd 01       	movw	r24, r26
    1a54:	0d 90       	ld	r0, X+
    1a56:	00 20       	and	r0, r0
    1a58:	11 f4       	brne	.+4      	; 0x1a5e <strtok_r+0x1e>
    1a5a:	c0 01       	movw	r24, r0
    1a5c:	13 c0       	rjmp	.+38     	; 0x1a84 <strtok_r+0x44>
    1a5e:	fb 01       	movw	r30, r22
    1a60:	21 91       	ld	r18, Z+
    1a62:	22 23       	and	r18, r18
    1a64:	19 f0       	breq	.+6      	; 0x1a6c <strtok_r+0x2c>
    1a66:	20 15       	cp	r18, r0
    1a68:	d9 f7       	brne	.-10     	; 0x1a60 <strtok_r+0x20>
    1a6a:	f3 cf       	rjmp	.-26     	; 0x1a52 <strtok_r+0x12>
    1a6c:	fb 01       	movw	r30, r22
    1a6e:	21 91       	ld	r18, Z+
    1a70:	20 15       	cp	r18, r0
    1a72:	19 f4       	brne	.+6      	; 0x1a7a <strtok_r+0x3a>
    1a74:	1e 92       	st	-X, r1
    1a76:	11 96       	adiw	r26, 0x01	; 1
    1a78:	06 c0       	rjmp	.+12     	; 0x1a86 <strtok_r+0x46>
    1a7a:	22 23       	and	r18, r18
    1a7c:	c1 f7       	brne	.-16     	; 0x1a6e <strtok_r+0x2e>
    1a7e:	0d 90       	ld	r0, X+
    1a80:	00 20       	and	r0, r0
    1a82:	a1 f7       	brne	.-24     	; 0x1a6c <strtok_r+0x2c>
    1a84:	d0 01       	movw	r26, r0
    1a86:	fa 01       	movw	r30, r20
    1a88:	a1 93       	st	Z+, r26
    1a8a:	b0 83       	st	Z, r27
    1a8c:	08 95       	ret

00001a8e <fputc>:
    1a8e:	0f 93       	push	r16
    1a90:	1f 93       	push	r17
    1a92:	cf 93       	push	r28
    1a94:	df 93       	push	r29
    1a96:	fb 01       	movw	r30, r22
    1a98:	23 81       	ldd	r18, Z+3	; 0x03
    1a9a:	21 fd       	sbrc	r18, 1
    1a9c:	03 c0       	rjmp	.+6      	; 0x1aa4 <fputc+0x16>
    1a9e:	8f ef       	ldi	r24, 0xFF	; 255
    1aa0:	9f ef       	ldi	r25, 0xFF	; 255
    1aa2:	2c c0       	rjmp	.+88     	; 0x1afc <fputc+0x6e>
    1aa4:	22 ff       	sbrs	r18, 2
    1aa6:	16 c0       	rjmp	.+44     	; 0x1ad4 <fputc+0x46>
    1aa8:	46 81       	ldd	r20, Z+6	; 0x06
    1aaa:	57 81       	ldd	r21, Z+7	; 0x07
    1aac:	24 81       	ldd	r18, Z+4	; 0x04
    1aae:	35 81       	ldd	r19, Z+5	; 0x05
    1ab0:	42 17       	cp	r20, r18
    1ab2:	53 07       	cpc	r21, r19
    1ab4:	44 f4       	brge	.+16     	; 0x1ac6 <fputc+0x38>
    1ab6:	a0 81       	ld	r26, Z
    1ab8:	b1 81       	ldd	r27, Z+1	; 0x01
    1aba:	9d 01       	movw	r18, r26
    1abc:	2f 5f       	subi	r18, 0xFF	; 255
    1abe:	3f 4f       	sbci	r19, 0xFF	; 255
    1ac0:	31 83       	std	Z+1, r19	; 0x01
    1ac2:	20 83       	st	Z, r18
    1ac4:	8c 93       	st	X, r24
    1ac6:	26 81       	ldd	r18, Z+6	; 0x06
    1ac8:	37 81       	ldd	r19, Z+7	; 0x07
    1aca:	2f 5f       	subi	r18, 0xFF	; 255
    1acc:	3f 4f       	sbci	r19, 0xFF	; 255
    1ace:	37 83       	std	Z+7, r19	; 0x07
    1ad0:	26 83       	std	Z+6, r18	; 0x06
    1ad2:	14 c0       	rjmp	.+40     	; 0x1afc <fputc+0x6e>
    1ad4:	8b 01       	movw	r16, r22
    1ad6:	ec 01       	movw	r28, r24
    1ad8:	fb 01       	movw	r30, r22
    1ada:	00 84       	ldd	r0, Z+8	; 0x08
    1adc:	f1 85       	ldd	r31, Z+9	; 0x09
    1ade:	e0 2d       	mov	r30, r0
    1ae0:	09 95       	icall
    1ae2:	89 2b       	or	r24, r25
    1ae4:	e1 f6       	brne	.-72     	; 0x1a9e <fputc+0x10>
    1ae6:	d8 01       	movw	r26, r16
    1ae8:	16 96       	adiw	r26, 0x06	; 6
    1aea:	8d 91       	ld	r24, X+
    1aec:	9c 91       	ld	r25, X
    1aee:	17 97       	sbiw	r26, 0x07	; 7
    1af0:	01 96       	adiw	r24, 0x01	; 1
    1af2:	17 96       	adiw	r26, 0x07	; 7
    1af4:	9c 93       	st	X, r25
    1af6:	8e 93       	st	-X, r24
    1af8:	16 97       	sbiw	r26, 0x06	; 6
    1afa:	ce 01       	movw	r24, r28
    1afc:	df 91       	pop	r29
    1afe:	cf 91       	pop	r28
    1b00:	1f 91       	pop	r17
    1b02:	0f 91       	pop	r16
    1b04:	08 95       	ret

00001b06 <sprintf>:
    1b06:	ae e0       	ldi	r26, 0x0E	; 14
    1b08:	b0 e0       	ldi	r27, 0x00	; 0
    1b0a:	e9 e8       	ldi	r30, 0x89	; 137
    1b0c:	fd e0       	ldi	r31, 0x0D	; 13
    1b0e:	0c 94 c1 0b 	jmp	0x1782	; 0x1782 <__prologue_saves__+0x1c>
    1b12:	0d 89       	ldd	r16, Y+21	; 0x15
    1b14:	1e 89       	ldd	r17, Y+22	; 0x16
    1b16:	86 e0       	ldi	r24, 0x06	; 6
    1b18:	8c 83       	std	Y+4, r24	; 0x04
    1b1a:	1a 83       	std	Y+2, r17	; 0x02
    1b1c:	09 83       	std	Y+1, r16	; 0x01
    1b1e:	8f ef       	ldi	r24, 0xFF	; 255
    1b20:	9f e7       	ldi	r25, 0x7F	; 127
    1b22:	9e 83       	std	Y+6, r25	; 0x06
    1b24:	8d 83       	std	Y+5, r24	; 0x05
    1b26:	ae 01       	movw	r20, r28
    1b28:	47 5e       	subi	r20, 0xE7	; 231
    1b2a:	5f 4f       	sbci	r21, 0xFF	; 255
    1b2c:	6f 89       	ldd	r22, Y+23	; 0x17
    1b2e:	78 8d       	ldd	r23, Y+24	; 0x18
    1b30:	ce 01       	movw	r24, r28
    1b32:	01 96       	adiw	r24, 0x01	; 1
    1b34:	0e 94 36 08 	call	0x106c	; 0x106c <vfprintf>
    1b38:	ef 81       	ldd	r30, Y+7	; 0x07
    1b3a:	f8 85       	ldd	r31, Y+8	; 0x08
    1b3c:	e0 0f       	add	r30, r16
    1b3e:	f1 1f       	adc	r31, r17
    1b40:	10 82       	st	Z, r1
    1b42:	2e 96       	adiw	r28, 0x0e	; 14
    1b44:	e4 e0       	ldi	r30, 0x04	; 4
    1b46:	0c 94 dd 0b 	jmp	0x17ba	; 0x17ba <__epilogue_restores__+0x1c>

00001b4a <__ultoa_invert>:
    1b4a:	fa 01       	movw	r30, r20
    1b4c:	aa 27       	eor	r26, r26
    1b4e:	28 30       	cpi	r18, 0x08	; 8
    1b50:	51 f1       	breq	.+84     	; 0x1ba6 <__ultoa_invert+0x5c>
    1b52:	20 31       	cpi	r18, 0x10	; 16
    1b54:	81 f1       	breq	.+96     	; 0x1bb6 <__ultoa_invert+0x6c>
    1b56:	e8 94       	clt
    1b58:	6f 93       	push	r22
    1b5a:	6e 7f       	andi	r22, 0xFE	; 254
    1b5c:	6e 5f       	subi	r22, 0xFE	; 254
    1b5e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b60:	8f 4f       	sbci	r24, 0xFF	; 255
    1b62:	9f 4f       	sbci	r25, 0xFF	; 255
    1b64:	af 4f       	sbci	r26, 0xFF	; 255
    1b66:	b1 e0       	ldi	r27, 0x01	; 1
    1b68:	3e d0       	rcall	.+124    	; 0x1be6 <__ultoa_invert+0x9c>
    1b6a:	b4 e0       	ldi	r27, 0x04	; 4
    1b6c:	3c d0       	rcall	.+120    	; 0x1be6 <__ultoa_invert+0x9c>
    1b6e:	67 0f       	add	r22, r23
    1b70:	78 1f       	adc	r23, r24
    1b72:	89 1f       	adc	r24, r25
    1b74:	9a 1f       	adc	r25, r26
    1b76:	a1 1d       	adc	r26, r1
    1b78:	68 0f       	add	r22, r24
    1b7a:	79 1f       	adc	r23, r25
    1b7c:	8a 1f       	adc	r24, r26
    1b7e:	91 1d       	adc	r25, r1
    1b80:	a1 1d       	adc	r26, r1
    1b82:	6a 0f       	add	r22, r26
    1b84:	71 1d       	adc	r23, r1
    1b86:	81 1d       	adc	r24, r1
    1b88:	91 1d       	adc	r25, r1
    1b8a:	a1 1d       	adc	r26, r1
    1b8c:	20 d0       	rcall	.+64     	; 0x1bce <__ultoa_invert+0x84>
    1b8e:	09 f4       	brne	.+2      	; 0x1b92 <__ultoa_invert+0x48>
    1b90:	68 94       	set
    1b92:	3f 91       	pop	r19
    1b94:	2a e0       	ldi	r18, 0x0A	; 10
    1b96:	26 9f       	mul	r18, r22
    1b98:	11 24       	eor	r1, r1
    1b9a:	30 19       	sub	r19, r0
    1b9c:	30 5d       	subi	r19, 0xD0	; 208
    1b9e:	31 93       	st	Z+, r19
    1ba0:	de f6       	brtc	.-74     	; 0x1b58 <__ultoa_invert+0xe>
    1ba2:	cf 01       	movw	r24, r30
    1ba4:	08 95       	ret
    1ba6:	46 2f       	mov	r20, r22
    1ba8:	47 70       	andi	r20, 0x07	; 7
    1baa:	40 5d       	subi	r20, 0xD0	; 208
    1bac:	41 93       	st	Z+, r20
    1bae:	b3 e0       	ldi	r27, 0x03	; 3
    1bb0:	0f d0       	rcall	.+30     	; 0x1bd0 <__ultoa_invert+0x86>
    1bb2:	c9 f7       	brne	.-14     	; 0x1ba6 <__ultoa_invert+0x5c>
    1bb4:	f6 cf       	rjmp	.-20     	; 0x1ba2 <__ultoa_invert+0x58>
    1bb6:	46 2f       	mov	r20, r22
    1bb8:	4f 70       	andi	r20, 0x0F	; 15
    1bba:	40 5d       	subi	r20, 0xD0	; 208
    1bbc:	4a 33       	cpi	r20, 0x3A	; 58
    1bbe:	18 f0       	brcs	.+6      	; 0x1bc6 <__ultoa_invert+0x7c>
    1bc0:	49 5d       	subi	r20, 0xD9	; 217
    1bc2:	31 fd       	sbrc	r19, 1
    1bc4:	40 52       	subi	r20, 0x20	; 32
    1bc6:	41 93       	st	Z+, r20
    1bc8:	02 d0       	rcall	.+4      	; 0x1bce <__ultoa_invert+0x84>
    1bca:	a9 f7       	brne	.-22     	; 0x1bb6 <__ultoa_invert+0x6c>
    1bcc:	ea cf       	rjmp	.-44     	; 0x1ba2 <__ultoa_invert+0x58>
    1bce:	b4 e0       	ldi	r27, 0x04	; 4
    1bd0:	a6 95       	lsr	r26
    1bd2:	97 95       	ror	r25
    1bd4:	87 95       	ror	r24
    1bd6:	77 95       	ror	r23
    1bd8:	67 95       	ror	r22
    1bda:	ba 95       	dec	r27
    1bdc:	c9 f7       	brne	.-14     	; 0x1bd0 <__ultoa_invert+0x86>
    1bde:	00 97       	sbiw	r24, 0x00	; 0
    1be0:	61 05       	cpc	r22, r1
    1be2:	71 05       	cpc	r23, r1
    1be4:	08 95       	ret
    1be6:	9b 01       	movw	r18, r22
    1be8:	ac 01       	movw	r20, r24
    1bea:	0a 2e       	mov	r0, r26
    1bec:	06 94       	lsr	r0
    1bee:	57 95       	ror	r21
    1bf0:	47 95       	ror	r20
    1bf2:	37 95       	ror	r19
    1bf4:	27 95       	ror	r18
    1bf6:	ba 95       	dec	r27
    1bf8:	c9 f7       	brne	.-14     	; 0x1bec <__ultoa_invert+0xa2>
    1bfa:	62 0f       	add	r22, r18
    1bfc:	73 1f       	adc	r23, r19
    1bfe:	84 1f       	adc	r24, r20
    1c00:	95 1f       	adc	r25, r21
    1c02:	a0 1d       	adc	r26, r0
    1c04:	08 95       	ret

00001c06 <_exit>:
    1c06:	f8 94       	cli

00001c08 <__stop_program>:
    1c08:	ff cf       	rjmp	.-2      	; 0x1c08 <__stop_program>
